%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: cartoon_banners_1_05.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 12/19/2018
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 9231 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7FD68FF
%B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7BDFD68FFFD17B7
%C4FD68FFB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2FD69FF
%B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7C4FD69FFB7B7B2B7
%B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7C4FD69FFFD16B7FD6AFFB2B7
%B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2C4FD6AFFB8B7B7B7B8B7B7
%B7B8B7B7B7B8B7B7B7B8B7B7B7B8CBFD6AFFB2B7B7B7B2B7B7B7B2B7B7B7
%B2B7B7B7B2FD04B7FD6BFFFD14B7C4FD6BFFB7B7B2B7B7B7B2B7B7B7B2B7
%B7B7B2B7B7B7B2B7CAFD6BFFB7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7
%B8BEFD6CFFB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2FD04B7FD6DFFFD12B7CB
%FD6DFFB2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7BEFD6FFFB8B7B7B7B8B7B7
%B7B8B7B7B7B8BECBFD71FFB2B7B7B7B2B7B7B7B2B7B7C4CAFD3DFFAFFD15
%FF9BCBFD1EFFFD08B7C4CAFD3FFFA9FFAFFD09FFA9FF8585FD06FFC4B78F
%BECBFD1CFFCBC4B7BEBDBEC4FD41FFA9FFFFFFA9FD05FFA9FFA9A95A847E
%FD06FFC4B7B78FB79CFD66FFAFFD05FFAFFFA9855AAFAF85FD06FFC4B7B7
%B8B7B795CBFD61FFAFAFA9FD05FFA9AF7E5A7EAF2F307EFD06FFC4B7C4FD
%04B78FFD68FFA9AF5A8584855AFFCAC4BDC4CAFFFFFFC4B7B7C4BEBEB7B7
%FD5FFFAFFFA8FFFFFFA9AF857E5AA9845A5ACAB7B7B2B7B7B7C4FFFFFF95
%FD05B78FFD5CFFAFA95A7E5A845A7E84AF845B84AF845AA9FFBDB7B7B8B7
%B7B7BEFD04FFCABEB7B8B7B7FD5BFF845A7EAFA9AFA9AFA9842FA984AF5A
%A9FFFFFFC4B7B7B2B7B7B7B2CBFD05FFC4B7B78FFD5AFFA984A9AFA9FFAF
%AFA9FFAFAF5AAF5AFD05FFCAB7B7BDFD04B7C4FD07FFBDBEFD59FFAF847E
%A984AFA9AFA9AFA9AFA9AF5AFD07FFA2C3A1C9C3CAB7CBFD62FF852F5A2F
%307EFFAFFFA9FFAFFFA9AFA9FD07FFCAFFC9CAC9CAFD62FFA92F5A84AF5A
%2F2FAFA9AFA9AFA9AFA9AFFD04FFA9A9365AA8CAA1CAA9FD04FFA95AA9FD
%5AFFAF2F7E5AAFA9FFAFAFA9FFAFAFA9FFA95AFD04FFA8AF5A5A36FFC9C9
%C9AF84FFFFFF5AFF5AFD2EFF59AFFF7E7EFFA87EA8A87E84A884A8FF7EAF
%7E7EA8A959A9A8A884A9FD10FF2F5AFFA9305A2F85A9AFA9AFA9AF7E30A8
%FFA9FF84A95A5A365A7ECFC9CFA85A84FFFF855A84A8FD2DFF2FA8A82F53
%7E2F532F7E59537E2FAFFF53842F53532F5A06A928847EFD0FFF8430A9FF
%FFFF5A5A2F5A7E855A302F84AFFFAFAFA9AF845B5A5A5A5B84FFA85A5A5A
%FD33FF06A85953595306A9597E2F53062F84FF2F7E06AF592884297E2828
%7EFD0FFF5A5AFD05FFA8305A847EA9A8FFFFFFA8A984A9A85A305A365A30
%5A365A305A36A9FD32FF2FA87E2F7E2F292F2F7E532F2F06A9FF597E29AF
%FF06A90684282959FD0FFF2FA9FD05FF842FFD07FFA8AFA8AFA8A95A5A2F
%5A5A5A365A5A5A365A5AFD07FFAFAFA9FD0AFFA95AFD1CFF06A97E2F5359
%2884067E2F53592984FF2F7E06842F2F7E067D53287EFD0EFFA82FA8FFFF
%FFA9A92F7E84A984A9A8A984A984A984FF7E5A3030305A365A305A2F5A30
%5AFD05FF855A5A365A305A84FD06FFAF5AAF5AFD1BFF595384532FA88429
%5A847E59FF53AFFF7EA85A2884842F53FF59A87EFD0EFFAF2FFFFFFFAFAF
%535AA8AFA9AFA8AFA9AFA8AFA9FFFFFF7E5A305B5A5A5A5B5A5A5A5B5AFF
%FFFFA95B5A5B5A5A5A5B5A5A5AFD06FF855AFD47FF2F7EFFA9A82F3084A9
%84A9A8A984A9A8A9A8FFFFFFCACA7D5A305A365A305A2F5A305A84FF5A5A
%365A3085A8A95A5A365A3085A9FD4CFF7E3053362F5A84AFA8AFA8AFA8AF
%A8AFA8FD05FFC9CA5A5A365A5A5A365A5A5A36855A5A365A5AAFFD04FFA8
%615A5A365A84FD4CFF847E598484A984A984A984A984A984A9A8FFFFFFCA
%C9A15A365A305A365A2F5A365A5A85365A84FD07FFA8855A5A305A5AA9FD
%1EFFA9A8AFA9AFA8AFA9AFA8AFA8A9A8FFA8FFA8AFA9A9A9FFA9AFA8AFA8
%A9A8FFA9A9A8AFA9A9A8FD09FFA9AFA8FFFFAFA8AFA9AFA8AFA9FD05FFC9
%CA5A5A5A5B5A5A5A84A8CAA8FFAFAFAFFD0BFF7E5B5A5A5A85AFFD1CFF84
%7E84A97EA87E8484A97EA97EA8A884A8847E8484A97EA97E847E847E84A8
%84847E7EA97E84A8FD08FFAFA8A9A8AFA8A984A9A8A9845AA8FFFFFFCACA
%A15A365A305A365A7DCAC9A9A9AFA9AFA9FD0BFFA885365A305A84FD1CFF
%AFFFFFFFAFFFAFFD07FFAFFD07FFAFFD09FFA9FFFFFFA9FD0BFFA9AFA8AF
%A8AFA8AFA9AF365A53FFFFFFC9A8365A5A5A365A5ACAC9CAAFAFA9FFAFAF
%A9FD0CFFAF5A5A365AFD1BFF848484A97E84A884A8A87EA87EA97EA87EA9
%84A884A984847EFD0484FD15FFAFFFA8FFA8FFA8FFA85A305A2F5AA9CA7D
%5A305A365A59CAC3A87EAFA9AFA9AFA9AFA9AFAFFD09FF845A365A30FD1B
%FFAFA8A9A8A984FF84FFA8A984A9A8A9A8A9A9A984FFA8AF84A984A984AF
%FD1EFF5A5B5A5A365A7DA85A5B5A5A7ECAC9845A85AFFFA9FFAFFFA9FFAF
%FFAFFD07FF5A5B5A5A5AA9FD1BFFA8FFA8A9A8FFA9FD0BFFAFFD27FFA85A
%305A365A305A2F7E305A7ECAA17E365A7EAFA9AFA9AFA9AFA9AFA9AFA9FF
%FFFFA985365A305A5AAFFD1CFFA9A8A984A984A9FD33FFAF5A5A365A5A5A
%365A53AFA1CAA25A365A5A85A9FFAFAFA9FFAFAFA9FFAFAFA9FFA95A365A
%5A5AA8FD1EFFA8AFA8A9A8AFA8FD33FF845A365A305A365A307EC9C9A85A
%365A305A7EAFA9AFA9AFA9AFA9AFA9AFA9AFA9AF855A3085AFFD58FFA9AF
%5A5A5A5B5A5A5A5B5ACACAFFFFAF5A85A9FFA9FFAFFFA9FFAFFFA9FFAFFF
%A9FFAFFFA9FD58FF5A5A5AA9A9AF2F5A305A365A305AA9AFAFFFFF84A9A9
%A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF5A2984FD57FF5A365A5A85A9FF85
%5A36FD045AFFAFFFA85A84AF7EFFAFAFA9FFAFAFA9FFAFAFA9FFAF852F2F
%067EFD21FFCAC4B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2FD04B7BECAFD17FF
%A8FD07FF5A5A305A365AA8AFA95A2F5A365AA9FF537EA9A984AFA9AFA9AF
%A9AFA9AFA9AFA9AF845A060606297EFD21FFC4B7B7B7B8B7C4C4C4BEC4C4
%BEBEC4BEC4BDB7B7B8B7BEFD17FF5AA8FD06FFA95A5B5A5A5AFFAFFF85A9
%5A5A59845AAFA985A9FFA9FFAFFFA9FFAFFFA9FFAFAF5A2F062F062F2FFD
%22FFB2B7B7B7B2B7CAFFC4C4CACABDFFCACAFFC4B7B7B2B7B7CBFD0EFFA9
%A9FD06FFA8FD08FF5A305A3684A9AFA95AA9AF845A84AF7E85A9AFA9AFA9
%AFA9AFA9AFA9AFA98428280629062F7EFD23FFBEFD05B7CBCBC4BDCBC4BE
%CBCBC4FFBDFD05B7CBFD0EFFAFA985A9FD0EFF85365A5AAFA9FF85AFA9FF
%AFAF5AAFAFAFA9FFAFAFA9FFAFAFA9FF8453062F0629067EFD25FFC4B7B2
%B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7BDFD0FFFA8AFA9855AFD0F
%FF5A5AA9AFA9A9A9AFA9857EAFA9AFA9AFA9AFA9AFA9AFA9A92F29060606
%2953AFFD27FFCBCBCACBCACBCACBCACBCACBCACBCACBCACBCACBCAFD11FF
%AFFFA9AF84A9FD0EFFA9FFA9FF85FFA9FF5A85A9FFAFFFA9FFAFFFA9FFAF
%7E282F062F065384FD4EFFA9AFAFAFA9AF84A9FD0EFFA9AFA9A9A9AFA985
%365A5AAFA9AFA9AFA9AF7E2F06280629067E84A9A8AFAFFD4CFFA9FFFFFF
%A9FF84FD0DFFA8AFAFAF84FFAFAF5AAF5A5A5A85AFAFA9AF2F29062F0629
%53A9A8AFA8AFA8AFA9FD4AFFAFAFA9AFA9AFA985FD0CFFA8A9A8AFA9AFA9
%AFA95A84FF7E5A3085A85A06290606062F84A984A984A984A984A9A8FD4C
%FFAFFFA9FF84FD0DFFA8AFAFFFA9FFAFFF5A5B5A855A5B5A2F062F062F29
%A9A9AFA8AFA9AFA8AFA9AFA8FD4EFFA9AFA9A9FD04FF7EFD09FFA8AFA9AF
%A9AFA9A95A5A365A305A2F28062F59A984A9A8A984A9A8A984A9A8FD51FF
%AFA8FFFFAF5A85A9FD09FFA9FFA9AFA9FFA9AF84855A5A365A065A84AFA8
%AFA8AFA8AFA8AFA8AFFD57FFAF5A5A84FD08FFA885845AA8AFA9AF84A984
%855A5A2F8484A984A984A984A984A984FD5AFFA8AFFD09FF7E2F5A2FFFA9
%FFA9AFA8AFA9AF84AFA9AFA8AFA9AFA8AFA9AFAFFD05FFA985FD10FFAFFF
%FFFFAF5A5A597E84FD45FF0628067EA8858484A8A984A9A8A984A9A8A984
%A9A8A984FD07FFA85AA8FD0FFFA9AFFFFFA92F302F362F302F5A7EA9FD40
%FFA82F0653FF592F5A53FFA8AFA8AFA8AFA8AFA8AFA8AFA9FD07FFAF85A8
%FD0FFFA9FFAFFFA9FD0C2F5384A9FD3CFFA8062FA8A9062906A8FFFFA8A9
%84A984A984A984A9A8FD17FFA9AFA9AFA9AFFF2F5A2F302F5A2F302F5A2F
%302F5A2F5AA9FD3CFFA8A9FF7E2F067EFD06FFA9AFA8AFA9FD19FFAFFFAF
%FFA9FFAF2F2F2F302F2F2F302F2F2F302F2F2F302F5AFD3FFF7E0653FD08
%FFA8AFA8FD19FFA9AFA9AFA9AFA9AF362F302F362F302F362F302F362F30
%2F362FFD3FFFA97EAFFD22FFAFA9FFAFAFA9FFAFAFA9FD122F7EFD61FFA9
%AFA9AFA9AFA9AFA9AFA9AF5A2F302F5A2F302F5A2F302F5A2F302F5A2F7E
%FD60FFA9FFAFFFA9FFAFFFA9FFAFFFA92F302F2F2F302F2F2F302F2F2F30
%2F2F2F302FFD5FFFA9AFA9AFA9AFA9AFA9AFA9AFA9AF302F362F302F362F
%302F362F302F362F302F36A8FD5DFFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAF
%FD132F84FD5CFFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF302F5A2F302F5A
%2F302F5A2F302F5A2F302F5A5AFD5DFFA9FFAFFFA9FFAFFFA9FFAFFFA9FF
%AF2F2F2F302F2F2F302F2F2F302F2F2F302F2F2F30A9FD5BFFAFAFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AF362F302F362F302F362F302F362F302F362F30
%2FA9FD5CFFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9FD142F7EFD5DFFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AF5A2F302F5A2F302F5A2F302F5A2F302F5A2F30
%2FA9FD5EFFA9FFAFFFA9FFAFFFA9FFAFFFA92F302F2F2F302F2F2F302F2F
%2F302F2F2F302F2FA8FD5EFFAFA9AFA9AFA9AFA9AFA9AFA9AF302F362F30
%2F362F302F362F302F362F302F3684FD60FFAFA9FFAFAFA9FFAFAFA9FFAF
%FD122F7EFD61FFA9AFA9AFA9AFA9AFA9AFA9AF302F5A2F302F5A2F302F5A
%2F302F5A2F3084FD63FFA9FFAFFFA9FFAFFFA9FFAF7E847E847E847E847E
%847E847E847E8484FD65FFA9FFAFFFA9FFAFFFA9FDFCFFFD04FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 5 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600_450_clean</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-12-19T11:21:09+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-19T11:21:09+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-19T11:21:09+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>148</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAlAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8An/lLyHFonmS3ufM2pWFi&#xA;9mPrUVi9xH6zhSeEpUkUjDITy/yczsmUyj6QS9v2x7T4Z4TixXchuTtQ6/qepW/mvRr+6S20i8td&#xA;UkNfWW1uYJGiVePxOoflx+MVoD223zG8IgXKx8HheMHluxX87tf1fRPJpvNJmkt7k3EMZuYmI9NG&#xA;bkxNPEoq/Tm07E08MuepixR273L0kBLJR7lT8n/O+teZvLyS63HS95SehdIgSOeKLgrN8JoHV3od&#xA;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&#xA;f//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:22c32bc7-c7d8-6845-9a2a-19cae6f2b628</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:22c32bc7-c7d8-6845-9a2a-19cae6f2b628</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:f2dc8929-16d6-cc4f-a44c-9f8ea8746a5d</stRef:instanceID>
            <stRef:documentID>xmp.did:f2dc8929-16d6-cc4f-a44c-9f8ea8746a5d</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:22c32bc7-c7d8-6845-9a2a-19cae6f2b628</stEvt:instanceID>
                  <stEvt:when>2018-12-19T11:21:09+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=137 B=43</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>137</xmpG:green>
                           <xmpG:blue>43</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=180 B=42</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=238 G=173 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>238</xmpG:red>
                           <xmpG:green>173</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=215 B=98</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=1 G=200 B=239</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>1</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>239</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=119 B=184</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>119</xmpG:green>
                           <xmpG:blue>184</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=178 G=211 B=234</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>178</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=196 G=217 B=232</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>196</xmpG:red>
                           <xmpG:green>217</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=37 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>37</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=20 B=207</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>207</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=114 G=27 B=213</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>114</xmpG:red>
                           <xmpG:green>27</xmpG:green>
                           <xmpG:blue>213</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=126 G=35 B=220</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>126</xmpG:red>
                           <xmpG:green>35</xmpG:green>
                           <xmpG:blue>220</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=138 G=42 B=227</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>138</xmpG:red>
                           <xmpG:green>42</xmpG:green>
                           <xmpG:blue>227</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=194 G=133 B=249</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>194</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=210 G=159 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>210</xmpG:red>
                           <xmpG:green>159</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=152 G=59 B=233</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>152</xmpG:red>
                           <xmpG:green>59</xmpG:green>
                           <xmpG:blue>233</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=94 B=244</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>94</xmpG:green>
                           <xmpG:blue>244</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=234 B=234</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>234</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
0 0 mo
0 86.5703 li
7.89551 92.6133 18.4355 94.2598 27.9048 90.6885 cv
75.7554 72.6406 li
83.5723 69.6924 89.7422 63.5225 92.6909 55.7051 cv
110.738 7.85449 li
111.706 5.29102 112.281 2.64746 112.5 0 cv
0 0 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 .912535 0 0 cmyk
f
85.2954 172.092 mo
85.2954 148.544 li
89.5845 148.544 li
89.5845 169.123 li
95.2231 169.123 li
95.2231 172.092 li
85.2954 172.092 li
cp
1 .866484 .240818 .0951247 cmyk
f
102.573 169.01 mo
102.871 169.133 103.229 169.194 103.645 169.194 cv
104.062 169.194 104.417 169.133 104.71 169.01 cv
105.003 168.887 105.238 168.726 105.413 168.527 cv
105.588 168.328 105.726 168.067 105.825 167.746 cv
105.924 167.424 105.991 167.102 106.024 166.78 cv
106.057 166.458 106.074 166.075 106.074 165.63 cv
106.074 154.935 li
106.074 154.367 106.045 153.894 105.988 153.515 cv
105.932 153.136 105.82 152.778 105.655 152.442 cv
105.489 152.106 105.24 151.855 104.909 151.689 cv
104.578 151.524 104.156 151.441 103.645 151.441 cv
103.134 151.441 102.71 151.524 102.374 151.689 cv
102.038 151.855 101.789 152.106 101.628 152.442 cv
101.467 152.778 101.358 153.136 101.302 153.515 cv
101.245 153.894 101.216 154.367 101.216 154.935 cv
101.216 165.63 li
101.216 166.075 101.233 166.458 101.266 166.78 cv
101.299 167.102 101.366 167.424 101.465 167.746 cv
101.564 168.067 101.699 168.328 101.87 168.527 cv
102.04 168.726 102.274 168.887 102.573 169.01 cv
cp
103.645 172.376 mo
101.221 172.376 99.4839 171.718 98.4326 170.401 cv
97.3818 169.086 96.856 167.159 96.856 164.621 cv
96.856 155.929 li
96.856 154.68 96.9746 153.596 97.2114 152.677 cv
97.4478 151.759 97.8291 150.963 98.3545 150.291 cv
98.8799 149.618 99.583 149.114 100.464 148.778 cv
101.344 148.442 102.404 148.274 103.645 148.274 cv
106.06 148.274 107.794 148.923 108.85 150.22 cv
109.906 151.517 110.434 153.42 110.434 155.929 cv
110.434 164.621 li
110.434 165.853 110.313 166.934 110.072 167.866 cv
109.83 168.799 109.447 169.608 108.921 170.295 cv
108.396 170.981 107.693 171.5 106.812 171.851 cv
105.932 172.2 104.876 172.376 103.645 172.376 cv
cp
f
119.467 172.404 mo
117.242 172.404 115.639 171.708 114.659 170.316 cv
113.679 168.925 113.189 166.898 113.189 164.237 cv
113.189 156.568 li
113.189 155.215 113.296 154.047 113.509 153.067 cv
113.722 152.087 114.079 151.229 114.581 150.489 cv
115.083 149.751 115.774 149.197 116.655 148.828 cv
117.535 148.459 118.615 148.274 119.893 148.274 cv
122.222 148.274 123.893 148.845 124.906 149.985 cv
125.919 151.127 126.426 152.856 126.426 155.177 cv
126.426 156.327 li
122.321 156.327 li
122.321 155.105 li
122.321 154.585 122.31 154.159 122.286 153.827 cv
122.262 153.496 122.206 153.162 122.116 152.826 cv
122.025 152.49 121.896 152.231 121.725 152.052 cv
121.555 151.872 121.322 151.726 121.029 151.611 cv
120.735 151.498 120.375 151.441 119.95 151.441 cv
119.627 151.441 119.341 151.481 119.09 151.562 cv
118.839 151.643 118.629 151.742 118.458 151.86 cv
118.288 151.979 118.144 152.146 118.025 152.364 cv
117.907 152.582 117.817 152.793 117.755 152.996 cv
117.694 153.2 117.646 153.463 117.613 153.784 cv
117.58 154.106 117.559 154.391 117.549 154.637 cv
117.54 154.883 117.535 155.2 117.535 155.588 cv
117.535 165.09 li
117.535 166.51 117.71 167.55 118.061 168.207 cv
118.411 168.865 119.079 169.194 120.063 169.194 cv
120.575 169.194 121.003 169.098 121.349 168.903 cv
121.694 168.709 121.964 168.416 122.158 168.022 cv
122.352 167.63 122.489 167.18 122.57 166.674 cv
122.65 166.167 122.691 165.554 122.691 164.834 cv
122.691 162.902 li
120.148 162.902 li
120.148 160.133 li
126.554 160.133 li
126.554 172.092 li
123.77 172.092 li
123.458 169.706 li
122.748 171.505 121.417 172.404 119.467 172.404 cv
cp
f
129.92 172.092 mo
129.92 148.544 li
134.152 148.544 li
134.152 172.092 li
129.92 172.092 li
cp
f
137.774 172.092 mo
137.774 148.544 li
140.728 148.544 li
146.494 161.88 li
146.494 148.544 li
150.045 148.544 li
150.045 172.092 li
147.233 172.092 li
141.41 158.074 li
141.41 172.092 li
137.774 172.092 li
cp
f
160.797 172.092 mo
160.797 148.544 li
165.029 148.544 li
165.029 172.092 li
160.797 172.092 li
cp
f
174.971 172.376 mo
173.958 172.376 173.063 172.248 172.287 171.992 cv
171.51 171.736 170.869 171.382 170.362 170.927 cv
169.855 170.473 169.444 169.909 169.126 169.237 cv
168.809 168.564 168.587 167.843 168.459 167.071 cv
168.331 166.3 168.267 165.431 168.267 164.465 cv
168.267 156.256 li
168.267 155.233 168.333 154.327 168.466 153.536 cv
168.599 152.745 168.821 152.012 169.134 151.335 cv
169.446 150.658 169.855 150.102 170.362 149.666 cv
170.869 149.23 171.508 148.89 172.28 148.644 cv
173.051 148.397 173.948 148.274 174.971 148.274 cv
176.145 148.274 177.148 148.431 177.982 148.742 cv
178.815 149.055 179.473 149.515 179.956 150.12 cv
180.439 150.727 180.789 151.434 181.007 152.243 cv
181.225 153.053 181.333 153.998 181.333 155.077 cv
181.333 157.094 li
177.201 157.094 li
177.201 155.091 li
177.201 153.917 177.139 153.127 177.016 152.72 cv
176.77 151.924 176.168 151.498 175.212 151.441 cv
174.985 151.441 li
174.625 151.441 174.311 151.483 174.041 151.569 cv
173.771 151.654 173.551 151.789 173.38 151.974 cv
173.21 152.158 173.072 152.355 172.968 152.563 cv
172.864 152.771 172.786 153.044 172.734 153.38 cv
172.682 153.716 172.649 154.026 172.635 154.311 cv
172.621 154.594 172.613 154.954 172.613 155.39 cv
172.613 165.359 li
172.613 166.742 172.786 167.727 173.132 168.313 cv
173.477 168.901 174.095 169.194 174.985 169.194 cv
175.288 169.194 175.556 169.159 175.788 169.088 cv
176.02 169.017 176.214 168.927 176.37 168.818 cv
176.526 168.709 176.659 168.553 176.768 168.35 cv
176.876 168.146 176.959 167.957 177.016 167.781 cv
177.073 167.606 177.116 167.362 177.144 167.05 cv
177.172 166.737 177.189 166.473 177.194 166.255 cv
177.198 166.037 177.201 165.738 177.201 165.359 cv
177.201 163.258 li
181.333 163.258 li
181.333 165.189 li
181.333 166.07 181.272 166.86 181.149 167.562 cv
181.026 168.262 180.815 168.92 180.517 169.535 cv
180.219 170.151 179.833 170.662 179.359 171.069 cv
178.886 171.477 178.28 171.796 177.542 172.028 cv
176.803 172.26 175.946 172.376 174.971 172.376 cv
cp
f
189.635 169.01 mo
189.933 169.133 190.291 169.194 190.707 169.194 cv
191.124 169.194 191.479 169.133 191.772 169.01 cv
192.065 168.887 192.3 168.726 192.475 168.527 cv
192.65 168.328 192.788 168.067 192.887 167.746 cv
192.986 167.424 193.053 167.102 193.086 166.78 cv
193.119 166.458 193.136 166.075 193.136 165.63 cv
193.136 154.935 li
193.136 154.367 193.107 153.894 193.05 153.515 cv
192.994 153.136 192.882 152.778 192.717 152.442 cv
192.551 152.106 192.302 151.855 191.971 151.689 cv
191.64 151.524 191.218 151.441 190.707 151.441 cv
190.196 151.441 189.772 151.524 189.436 151.689 cv
189.1 151.855 188.851 152.106 188.69 152.442 cv
188.529 152.778 188.42 153.136 188.364 153.515 cv
188.307 153.894 188.278 154.367 188.278 154.935 cv
188.278 165.63 li
188.278 166.075 188.295 166.458 188.328 166.78 cv
188.361 167.102 188.428 167.424 188.527 167.746 cv
188.626 168.067 188.761 168.328 188.932 168.527 cv
189.102 168.726 189.336 168.887 189.635 169.01 cv
cp
190.707 172.376 mo
188.283 172.376 186.546 171.718 185.495 170.401 cv
184.444 169.086 183.918 167.159 183.918 164.621 cv
183.918 155.929 li
183.918 154.68 184.037 153.596 184.273 152.677 cv
184.51 151.759 184.891 150.963 185.417 150.291 cv
185.942 149.618 186.645 149.114 187.526 148.778 cv
188.406 148.442 189.466 148.274 190.707 148.274 cv
193.122 148.274 194.856 148.923 195.912 150.22 cv
196.968 151.517 197.496 153.42 197.496 155.929 cv
197.496 164.621 li
197.496 165.853 197.375 166.934 197.134 167.866 cv
196.892 168.799 196.509 169.608 195.983 170.295 cv
195.458 170.981 194.755 171.5 193.874 171.851 cv
192.994 172.2 191.938 172.376 190.707 172.376 cv
cp
f
200.635 172.092 mo
200.635 148.544 li
203.589 148.544 li
209.355 161.88 li
209.355 148.544 li
212.906 148.544 li
212.906 172.092 li
210.094 172.092 li
204.271 158.074 li
204.271 172.092 li
200.635 172.092 li
cp
f
180.812 263.604 mo
96.9756 263.604 li
90.5146 263.604 85.2773 258.366 85.2773 251.905 cv
85.2773 245.445 90.5146 240.207 96.9756 240.207 cv
180.812 240.207 li
187.273 240.207 192.51 245.445 192.51 251.905 cv
192.51 258.366 187.273 263.604 180.812 263.604 cv
cp
0 .912535 0 0 cmyk
f
113.329 257.115 mo
113.329 248.569 li
111.673 248.569 li
111.673 247.241 li
116.729 247.241 li
116.729 248.569 li
115.127 248.569 li
115.127 257.115 li
113.329 257.115 li
cp
0 0 0 0 cmyk
f
119.314 251.458 mo
119.749 251.458 li
120.281 251.458 120.659 251.345 120.883 251.118 cv
121.107 250.892 121.219 250.505 121.219 249.957 cv
121.219 249.429 121.123 249.051 120.928 248.822 cv
120.733 248.594 120.375 248.479 119.856 248.479 cv
119.314 248.479 li
119.314 251.458 li
cp
117.515 257.115 mo
117.515 247.241 li
119.779 247.241 li
120.298 247.241 120.745 247.284 121.119 247.369 cv
121.492 247.455 121.816 247.598 122.092 247.798 cv
122.368 247.999 122.575 248.271 122.711 248.614 cv
122.848 248.957 122.917 249.377 122.917 249.873 cv
122.917 250.493 122.825 250.999 122.64 251.393 cv
122.456 251.785 122.151 252.071 121.726 252.25 cv
123.095 257.115 li
121.292 257.115 li
120.112 252.607 li
119.314 252.607 li
119.314 257.115 li
117.515 257.115 li
cp
f
125.65 257.115 mo
125.65 253.357 li
123.637 247.241 li
125.317 247.241 li
126.538 251.172 li
127.705 247.241 li
129.366 247.241 li
127.365 253.357 li
127.365 257.115 li
125.65 257.115 li
cp
f
133.255 257.115 mo
133.255 247.241 li
135.03 247.241 li
135.03 257.115 li
133.255 257.115 li
cp
f
137.513 257.115 mo
137.513 248.569 li
135.858 248.569 li
135.858 247.241 li
140.914 247.241 li
140.914 248.569 li
139.312 248.569 li
139.312 257.115 li
137.513 257.115 li
cp
f
144.677 257.115 mo
144.677 247.241 li
145.917 247.241 li
148.334 252.833 li
148.334 247.241 li
149.823 247.241 li
149.823 257.115 li
148.644 257.115 li
146.202 251.237 li
146.202 257.115 li
144.677 257.115 li
cp
f
153.537 255.823 mo
153.662 255.875 153.812 255.9 153.987 255.9 cv
154.161 255.9 154.31 255.875 154.433 255.823 cv
154.556 255.771 154.655 255.704 154.728 255.62 cv
154.801 255.537 154.859 255.428 154.901 255.293 cv
154.942 255.158 154.97 255.022 154.984 254.888 cv
154.998 254.753 155.004 254.592 155.004 254.405 cv
155.004 249.921 li
155.004 249.683 154.993 249.484 154.969 249.325 cv
154.945 249.167 154.899 249.017 154.829 248.876 cv
154.759 248.735 154.656 248.63 154.516 248.561 cv
154.377 248.491 154.201 248.456 153.987 248.456 cv
153.772 248.456 153.594 248.491 153.454 248.561 cv
153.312 248.63 153.208 248.735 153.141 248.876 cv
153.073 249.017 153.028 249.167 153.003 249.325 cv
152.98 249.484 152.968 249.683 152.968 249.921 cv
152.968 254.405 li
152.968 254.592 152.975 254.753 152.989 254.888 cv
153.002 255.022 153.031 255.158 153.072 255.293 cv
153.114 255.428 153.17 255.537 153.242 255.62 cv
153.313 255.704 153.412 255.771 153.537 255.823 cv
cp
153.987 257.234 mo
152.97 257.234 152.242 256.958 151.8 256.406 cv
151.36 255.854 151.14 255.047 151.14 253.982 cv
151.14 250.338 li
151.14 249.813 151.189 249.359 151.289 248.975 cv
151.388 248.589 151.547 248.256 151.768 247.974 cv
151.989 247.691 152.283 247.48 152.653 247.34 cv
153.022 247.198 153.466 247.128 153.987 247.128 cv
154.999 247.128 155.726 247.4 156.169 247.944 cv
156.612 248.488 156.833 249.286 156.833 250.338 cv
156.833 253.982 li
156.833 254.499 156.783 254.952 156.681 255.344 cv
156.58 255.734 156.419 256.074 156.199 256.362 cv
155.978 256.649 155.684 256.867 155.314 257.014 cv
154.945 257.161 154.502 257.234 153.987 257.234 cv
cp
f
159.221 257.115 mo
157.81 247.241 li
159.323 247.241 li
160.132 253.607 li
161.186 247.241 li
162.395 247.241 li
163.473 253.613 li
164.283 247.241 li
165.766 247.241 li
164.355 257.115 li
162.919 257.115 li
161.806 250.522 li
160.698 257.115 li
159.221 257.115 li
cp
f
gsave
120.983 196.719 mo
120.682 196.719 120.454 196.607 120.294 196.385 cv
120.136 196.162 120.057 195.848 120.057 195.439 cv
120.057 190.639 li
120.821 190.639 li
120.821 195.282 li
120.821 195.586 120.867 195.802 120.958 195.93 cv
121.048 196.058 121.192 196.122 121.387 196.122 cv
121.728 196.122 122.082 195.927 122.45 195.535 cv
122.45 190.639 li
123.209 190.639 li
123.209 196.628 li
122.45 196.628 li
122.45 195.965 li
122.004 196.468 121.515 196.719 120.983 196.719 cv
clp
120.057 190.639 mo
123.209 190.639 li
123.209 196.719 li
120.057 196.719 li
cp
.472602 .264286 .0650339 0 cmyk
f
grestore
129.925 196.628 mo
129.207 196.628 li
129.207 191.924 li
129.207 191.597 129.156 191.369 129.055 191.241 cv
128.954 191.113 128.809 191.049 128.62 191.049 cv
128.239 191.056 127.863 191.263 127.492 191.671 cv
127.498 191.772 127.502 191.85 127.502 191.903 cv
127.502 196.628 li
126.794 196.628 li
126.794 191.924 li
126.794 191.597 126.742 191.369 126.637 191.241 cv
126.533 191.113 126.386 191.049 126.197 191.049 cv
125.816 191.056 125.444 191.263 125.08 191.671 cv
125.08 196.628 li
124.366 196.628 li
124.366 190.639 li
125.08 190.639 li
125.08 191.246 li
125.481 190.77 125.951 190.533 126.491 190.533 cv
126.99 190.533 127.303 190.796 127.431 191.322 cv
127.849 190.796 128.342 190.533 128.909 190.533 cv
129.206 190.533 129.449 190.64 129.639 190.854 cv
129.83 191.068 129.925 191.418 129.925 191.903 cv
129.925 196.628 li
.472602 .264286 .0650339 0 cmyk
f
134.488 196.724 mo
133.972 196.724 133.602 196.53 133.377 196.143 cv
133.153 195.755 133.041 195.11 133.041 194.21 cv
133.041 193.103 li
133.041 192.771 133.053 192.482 133.077 192.232 cv
133.1 191.982 133.144 191.749 133.208 191.529 cv
133.272 191.311 133.356 191.132 133.46 190.993 cv
133.565 190.854 133.701 190.746 133.866 190.667 cv
134.031 190.588 134.226 190.548 134.453 190.548 cv
134.847 190.552 135.199 190.725 135.509 191.069 cv
135.509 188.241 li
136.268 188.241 li
136.268 196.628 li
135.509 196.628 li
135.509 196.203 li
135.206 196.547 134.866 196.721 134.488 196.724 cv
134.62 191.144 mo
134.298 191.144 134.083 191.279 133.969 191.547 cv
133.856 191.815 133.799 192.253 133.799 192.859 cv
133.799 194.271 li
133.799 194.925 133.857 195.397 133.972 195.688 cv
134.086 195.978 134.309 196.122 134.639 196.122 cv
134.933 196.122 135.223 195.99 135.509 195.727 cv
135.509 191.569 li
135.206 191.286 134.909 191.144 134.62 191.144 cv
f
138.914 196.724 mo
138.607 196.724 138.349 196.675 138.14 196.577 cv
137.931 196.48 137.766 196.331 137.647 196.132 cv
137.527 195.934 137.442 195.7 137.391 195.432 cv
137.34 195.164 137.316 194.841 137.316 194.463 cv
137.316 192.804 li
137.316 192.042 137.433 191.476 137.669 191.105 cv
137.906 190.733 138.32 190.548 138.914 190.548 cv
139.51 190.548 139.926 190.732 140.161 191.102 cv
140.395 191.471 140.512 192.038 140.512 192.804 cv
140.512 194.463 li
140.512 194.841 140.487 195.164 140.436 195.432 cv
140.386 195.7 140.3 195.934 140.181 196.132 cv
140.061 196.331 139.897 196.48 139.688 196.577 cv
139.479 196.675 139.22 196.724 138.914 196.724 cv
138.914 191.114 mo
138.786 191.114 138.674 191.132 138.58 191.165 cv
138.486 191.199 138.408 191.254 138.347 191.329 cv
138.201 191.572 li
138.164 191.658 138.135 191.771 138.117 191.908 cv
138.098 192.047 138.086 192.178 138.082 192.301 cv
138.077 192.424 138.074 192.578 138.074 192.764 cv
138.074 194.504 li
138.074 194.689 138.077 194.844 138.082 194.967 cv
138.086 195.09 138.098 195.22 138.117 195.358 cv
138.135 195.497 138.164 195.608 138.201 195.694 cv
138.347 195.937 li
138.408 196.014 138.486 196.068 138.58 196.101 cv
138.674 196.136 138.786 196.152 138.914 196.152 cv
139.066 196.152 139.194 196.125 139.298 196.069 cv
139.403 196.014 139.485 195.943 139.543 195.859 cv
139.602 195.774 139.647 195.655 139.677 195.5 cv
139.707 195.345 139.727 195.196 139.736 195.055 cv
139.745 194.913 139.748 194.73 139.748 194.504 cv
139.748 192.764 li
139.748 192.538 139.745 192.353 139.736 192.212 cv
139.727 192.07 139.707 191.922 139.677 191.767 cv
139.647 191.612 139.602 191.492 139.543 191.408 cv
139.485 191.323 139.403 191.254 139.298 191.198 cv
139.194 191.143 139.066 191.114 138.914 191.114 cv
f
142.423 196.628 mo
141.66 196.628 li
141.66 188.241 li
142.423 188.241 li
142.423 196.628 li
f
145.134 196.724 mo
144.828 196.724 144.57 196.675 144.361 196.577 cv
144.152 196.48 143.987 196.331 143.868 196.132 cv
143.748 195.934 143.663 195.7 143.612 195.432 cv
143.561 195.164 143.537 194.841 143.537 194.463 cv
143.537 192.804 li
143.537 192.042 143.654 191.476 143.89 191.105 cv
144.126 190.733 144.54 190.548 145.134 190.548 cv
145.731 190.548 146.147 190.732 146.381 191.102 cv
146.616 191.471 146.733 192.038 146.733 192.804 cv
146.733 194.463 li
146.733 194.841 146.708 195.164 146.657 195.432 cv
146.607 195.7 146.521 195.934 146.402 196.132 cv
146.282 196.331 146.118 196.48 145.909 196.577 cv
145.7 196.675 145.441 196.724 145.134 196.724 cv
145.134 191.114 mo
145.006 191.114 144.895 191.132 144.8 191.165 cv
144.707 191.199 144.628 191.254 144.568 191.329 cv
144.421 191.572 li
144.384 191.658 144.356 191.771 144.337 191.908 cv
144.319 192.047 144.307 192.178 144.302 192.301 cv
144.297 192.424 144.294 192.578 144.294 192.764 cv
144.294 194.504 li
144.294 194.689 144.297 194.844 144.302 194.967 cv
144.307 195.09 144.319 195.22 144.337 195.358 cv
144.356 195.497 144.384 195.608 144.421 195.694 cv
144.568 195.937 li
144.628 196.014 144.707 196.068 144.8 196.101 cv
144.895 196.136 145.006 196.152 145.134 196.152 cv
145.287 196.152 145.414 196.125 145.519 196.069 cv
145.624 196.014 145.706 195.943 145.764 195.859 cv
145.823 195.774 145.868 195.655 145.898 195.5 cv
145.928 195.345 145.948 195.196 145.957 195.055 cv
145.965 194.913 145.969 194.73 145.969 194.504 cv
145.969 192.764 li
145.969 192.538 145.965 192.353 145.957 192.212 cv
145.948 192.07 145.928 191.922 145.898 191.767 cv
145.868 191.612 145.823 191.492 145.764 191.408 cv
145.706 191.323 145.624 191.254 145.519 191.198 cv
145.414 191.143 145.287 191.114 145.134 191.114 cv
f
148.594 196.628 mo
147.835 196.628 li
147.835 190.639 li
148.594 190.639 li
148.594 191.464 li
148.776 191.16 148.989 190.936 149.234 190.791 cv
149.478 190.645 149.725 190.573 149.975 190.573 cv
150.106 190.578 li
150.106 191.397 li
149.999 191.354 149.876 191.332 149.742 191.332 cv
149.256 191.332 148.874 191.564 148.594 192.03 cv
148.594 196.628 li
f
154.345 196.724 mo
153.87 196.724 153.49 196.57 153.205 196.264 cv
152.919 195.957 152.757 195.542 152.716 195.02 cv
153.354 194.827 li
153.394 195.282 153.499 195.617 153.667 195.831 cv
153.836 196.046 154.072 196.152 154.375 196.152 cv
154.639 196.152 154.846 196.075 154.997 195.92 cv
155.143 195.771 155.215 195.572 155.215 195.323 cv
155.215 195.287 li
155.206 194.89 154.962 194.492 154.487 194.094 cv
153.672 193.4 li
153.386 193.161 153.177 192.927 153.045 192.697 cv
152.917 192.476 152.853 192.216 152.853 191.919 cv
152.853 191.48 152.985 191.142 153.248 190.902 cv
153.504 190.666 153.85 190.548 154.285 190.548 cv
154.726 190.548 155.066 190.689 155.304 190.973 cv
155.542 191.256 155.674 191.639 155.701 192.121 cv
155.165 192.298 li
155.141 191.897 155.059 191.6 154.919 191.405 cv
154.78 191.212 154.578 191.114 154.315 191.114 cv
154.079 191.114 153.89 191.181 153.749 191.311 cv
153.61 191.44 153.542 191.612 153.542 191.828 cv
153.542 192.023 153.577 192.191 153.647 192.331 cv
153.718 192.471 153.848 192.622 154.037 192.784 cv
154.881 193.542 li
155.034 193.674 155.157 193.789 155.253 193.889 cv
155.349 193.988 155.452 194.111 155.559 194.258 cv
155.668 194.405 155.748 194.563 155.799 194.733 cv
155.852 194.904 155.879 195.087 155.883 195.282 cv
155.883 195.741 155.745 196.096 155.468 196.348 cv
155.192 196.599 154.818 196.724 154.345 196.724 cv
f
157.577 196.628 mo
156.819 196.628 li
156.819 190.639 li
157.577 190.639 li
157.577 196.628 li
157.582 189.814 mo
156.819 189.814 li
156.819 188.783 li
157.582 188.783 li
157.582 189.814 li
f
160.268 196.704 mo
159.86 196.704 159.579 196.592 159.423 196.367 cv
159.268 196.144 159.189 195.815 159.185 195.384 cv
159.185 191.144 li
158.462 191.144 li
158.462 190.639 li
159.185 190.639 li
159.185 188.788 li
159.944 188.788 li
159.944 190.639 li
160.941 190.639 li
160.941 191.144 li
159.944 191.144 li
159.944 195.312 li
159.944 195.616 159.98 195.824 160.05 195.937 cv
160.122 196.051 160.264 196.107 160.48 196.107 cv
160.619 196.107 160.76 196.094 160.906 196.066 cv
160.906 196.638 li
160.679 196.682 160.467 196.704 160.268 196.704 cv
f
164.896 196.724 mo
164.545 196.724 164.257 196.595 164.032 196.337 cv
163.805 196.079 163.693 195.76 163.693 195.379 cv
163.693 195.18 163.709 195.002 163.743 194.845 cv
163.777 194.689 163.84 194.541 163.933 194.402 cv
164.026 194.264 164.126 194.142 164.236 194.035 cv
164.346 193.93 164.501 193.816 164.704 193.696 cv
164.907 193.577 165.109 193.467 165.311 193.365 cv
165.513 193.265 165.778 193.142 166.105 192.996 cv
166.105 192.566 li
166.105 192.017 166.053 191.638 165.949 191.431 cv
165.844 191.224 165.648 191.119 165.362 191.119 cv
164.808 191.119 164.532 191.462 164.532 192.146 cv
164.532 192.364 li
163.784 192.339 li
163.784 192.241 163.785 192.18 163.789 192.156 cv
163.812 191.594 163.958 191.185 164.229 190.93 cv
164.498 190.676 164.889 190.548 165.402 190.548 cv
165.931 190.548 166.307 190.705 166.53 191.019 cv
166.752 191.332 166.864 191.835 166.864 192.525 cv
166.864 195.439 li
166.864 195.922 166.882 196.317 166.919 196.628 cv
166.247 196.628 li
166.135 195.799 li
166.044 196.062 165.89 196.281 165.672 196.458 cv
165.456 196.636 165.197 196.724 164.896 196.724 cv
166.105 193.497 mo
166.009 193.548 li
165.844 193.635 165.717 193.703 165.629 193.75 cv
165.541 193.797 165.437 193.856 165.314 193.927 cv
165.19 193.998 165.098 194.057 165.038 194.103 cv
164.828 194.276 li
164.656 194.466 li
164.547 194.671 li
164.471 194.916 li
164.457 195.002 164.451 195.097 164.451 195.201 cv
164.451 195.495 164.517 195.713 164.648 195.857 cv
164.78 196 164.945 196.071 165.144 196.071 cv
165.346 196.071 165.533 196.002 165.703 195.861 cv
165.874 195.722 166.007 195.556 166.105 195.363 cv
166.105 193.497 li
f
173.531 196.628 mo
172.812 196.628 li
172.812 191.924 li
172.812 191.597 172.761 191.369 172.661 191.241 cv
172.559 191.113 172.415 191.049 172.225 191.049 cv
171.844 191.056 171.468 191.263 171.097 191.671 cv
171.104 191.772 171.108 191.85 171.108 191.903 cv
171.108 196.628 li
170.4 196.628 li
170.4 191.924 li
170.4 191.597 170.347 191.369 170.243 191.241 cv
170.138 191.113 169.992 191.049 169.802 191.049 cv
169.421 191.056 169.049 191.263 168.685 191.671 cv
168.685 196.628 li
167.971 196.628 li
167.971 190.639 li
168.685 190.639 li
168.685 191.246 li
169.086 190.77 169.556 190.533 170.096 190.533 cv
170.595 190.533 170.909 190.796 171.037 191.322 cv
171.455 190.796 171.948 190.533 172.514 190.533 cv
172.811 190.533 173.054 190.64 173.245 190.854 cv
173.435 191.068 173.531 191.418 173.531 191.903 cv
173.531 196.628 li
f
176.151 196.724 mo
175.578 196.724 175.165 196.547 174.912 196.193 cv
174.659 195.839 174.533 195.233 174.533 194.377 cv
174.533 192.864 li
174.533 192.281 174.592 191.818 174.711 191.477 cv
174.832 191.134 175.007 190.894 175.238 190.756 cv
175.469 190.617 175.775 190.548 176.156 190.548 cv
176.409 190.548 176.625 190.581 176.803 190.647 cv
176.982 190.713 177.13 190.806 177.249 190.928 cv
177.367 191.049 177.46 191.213 177.529 191.421 cv
177.598 191.628 177.646 191.857 177.673 192.108 cv
177.701 192.359 177.713 192.662 177.713 193.017 cv
177.708 193.558 li
175.29 193.558 li
175.29 194.453 li
175.29 195.073 175.351 195.512 175.47 195.768 cv
175.59 196.024 175.815 196.152 176.146 196.152 cv
176.409 196.152 176.611 196.069 176.752 195.902 cv
176.894 195.735 176.965 195.433 176.965 194.994 cv
176.965 194.579 li
177.708 194.579 li
177.708 194.913 li
177.708 195.493 177.587 195.94 177.344 196.254 cv
177.102 196.567 176.704 196.724 176.151 196.724 cv
176.151 191.114 mo
175.831 191.114 175.607 191.226 175.481 191.448 cv
175.354 191.671 175.29 192.094 175.29 192.718 cv
175.29 193.123 li
176.965 193.123 li
176.965 192.627 li
176.965 192.418 176.96 192.244 176.95 192.105 cv
176.94 191.968 176.919 191.83 176.887 191.693 cv
176.855 191.558 176.81 191.45 176.752 191.372 cv
176.696 191.295 176.616 191.232 176.515 191.185 cv
176.414 191.138 176.292 191.114 176.151 191.114 cv
f
180.157 196.704 mo
179.749 196.704 179.467 196.592 179.312 196.367 cv
179.157 196.144 179.078 195.815 179.074 195.384 cv
179.074 191.144 li
178.351 191.144 li
178.351 190.639 li
179.074 190.639 li
179.074 188.788 li
179.832 188.788 li
179.832 190.639 li
180.83 190.639 li
180.83 191.144 li
179.832 191.144 li
179.832 195.312 li
179.832 195.616 179.869 195.824 179.939 195.937 cv
180.01 196.051 180.153 196.107 180.369 196.107 cv
180.507 196.107 180.649 196.094 180.794 196.066 cv
180.794 196.638 li
180.568 196.682 180.356 196.704 180.157 196.704 cv
f
181.725 197.837 mo
181.568 197.503 li
181.747 197.401 181.874 197.284 181.95 197.148 cv
182.026 197.014 182.064 196.841 182.064 196.628 cv
181.609 196.628 li
181.609 195.5 li
182.458 195.5 li
182.458 196.547 li
182.458 196.884 182.403 197.149 182.291 197.344 cv
182.18 197.537 181.991 197.702 181.725 197.837 cv
f
187.111 196.724 mo
186.838 196.724 186.604 196.684 186.408 196.603 cv
186.212 196.521 186.057 196.416 185.943 196.286 cv
185.829 196.156 185.738 195.985 185.672 195.773 cv
185.607 195.561 185.563 195.346 185.541 195.128 cv
185.519 194.911 185.508 194.653 185.508 194.356 cv
185.508 192.961 li
185.508 192.525 185.532 192.164 185.579 191.876 cv
185.626 191.588 185.709 191.341 185.829 191.135 cv
185.949 190.929 186.112 190.78 186.32 190.688 cv
186.527 190.595 186.79 190.548 187.106 190.548 cv
187.356 190.548 187.572 190.578 187.753 190.639 cv
187.936 190.7 188.083 190.783 188.196 190.89 cv
188.309 190.996 188.399 191.132 188.464 191.297 cv
188.53 191.462 188.576 191.637 188.601 191.82 cv
188.626 192.004 188.639 192.219 188.639 192.465 cv
188.639 192.748 li
187.936 192.748 li
187.936 192.465 li
187.936 191.952 187.875 191.6 187.753 191.405 cv
187.632 191.212 187.419 191.114 187.117 191.114 cv
186.772 191.114 186.544 191.236 186.433 191.481 cv
186.322 191.726 186.266 192.177 186.266 192.834 cv
186.266 194.514 li
186.266 195.127 186.327 195.554 186.446 195.793 cv
186.566 196.033 186.79 196.152 187.122 196.152 cv
187.263 196.152 187.382 196.132 187.481 196.092 cv
187.579 196.052 187.657 195.996 187.715 195.925 cv
187.775 195.855 187.821 195.756 187.855 195.632 cv
187.888 195.507 187.911 195.374 187.92 195.234 cv
187.931 195.095 187.936 194.918 187.936 194.706 cv
187.936 194.377 li
188.639 194.377 li
188.639 194.671 li
188.639 194.934 188.628 195.161 188.606 195.353 cv
188.583 195.546 188.541 195.731 188.474 195.912 cv
188.409 196.093 188.321 196.239 188.211 196.352 cv
188.102 196.465 187.955 196.556 187.769 196.623 cv
187.583 196.69 187.364 196.724 187.111 196.724 cv
f
191.132 196.724 mo
190.826 196.724 190.568 196.675 190.359 196.577 cv
190.15 196.48 189.985 196.331 189.866 196.132 cv
189.746 195.934 189.661 195.7 189.61 195.432 cv
189.559 195.164 189.535 194.841 189.535 194.463 cv
189.535 192.804 li
189.535 192.042 189.652 191.476 189.888 191.105 cv
190.125 190.733 190.539 190.548 191.132 190.548 cv
191.729 190.548 192.145 190.732 192.379 191.102 cv
192.614 191.471 192.731 192.038 192.731 192.804 cv
192.731 194.463 li
192.731 194.841 192.706 195.164 192.655 195.432 cv
192.605 195.7 192.519 195.934 192.4 196.132 cv
192.28 196.331 192.116 196.48 191.907 196.577 cv
191.698 196.675 191.439 196.724 191.132 196.724 cv
191.132 191.114 mo
191.004 191.114 190.893 191.132 190.798 191.165 cv
190.705 191.199 190.626 191.254 190.566 191.329 cv
190.419 191.572 li
190.382 191.658 190.354 191.771 190.335 191.908 cv
190.317 192.047 190.305 192.178 190.3 192.301 cv
190.295 192.424 190.293 192.578 190.293 192.764 cv
190.293 194.504 li
190.293 194.689 190.295 194.844 190.3 194.967 cv
190.305 195.09 190.317 195.22 190.335 195.358 cv
190.354 195.497 190.382 195.608 190.419 195.694 cv
190.566 195.937 li
190.626 196.014 190.705 196.068 190.798 196.101 cv
190.893 196.136 191.004 196.152 191.132 196.152 cv
191.285 196.152 191.413 196.125 191.517 196.069 cv
191.622 196.014 191.704 195.943 191.762 195.859 cv
191.821 195.774 191.866 195.655 191.896 195.5 cv
191.926 195.345 191.946 195.196 191.955 195.055 cv
191.963 194.913 191.967 194.73 191.967 194.504 cv
191.967 192.764 li
191.967 192.538 191.963 192.353 191.955 192.212 cv
191.946 192.07 191.926 191.922 191.896 191.767 cv
191.866 191.612 191.821 191.492 191.762 191.408 cv
191.704 191.323 191.622 191.254 191.517 191.198 cv
191.413 191.143 191.285 191.114 191.132 191.114 cv
f
196.893 196.628 mo
196.134 196.628 li
196.134 191.984 li
196.134 191.681 196.088 191.465 195.996 191.337 cv
195.903 191.209 195.758 191.144 195.563 191.144 cv
195.236 191.144 194.892 191.329 194.531 191.696 cv
194.531 196.628 li
193.772 196.628 li
193.772 190.639 li
194.531 190.639 li
194.531 191.262 li
194.973 190.786 195.454 190.548 195.973 190.548 cv
196.269 190.548 196.497 190.658 196.656 190.879 cv
196.814 191.101 196.893 191.415 196.893 191.822 cv
196.893 196.628 li
f
199.381 196.724 mo
198.906 196.724 198.526 196.57 198.241 196.264 cv
197.956 195.957 197.793 195.542 197.752 195.02 cv
198.39 194.827 li
198.43 195.282 198.535 195.617 198.704 195.831 cv
198.873 196.046 199.108 196.152 199.412 196.152 cv
199.675 196.152 199.882 196.075 200.034 195.92 cv
200.179 195.771 200.251 195.572 200.251 195.323 cv
200.251 195.287 li
200.242 194.89 199.999 194.492 199.523 194.094 cv
198.708 193.4 li
198.422 193.161 198.213 192.927 198.081 192.697 cv
197.954 192.476 197.889 192.216 197.889 191.919 cv
197.889 191.48 198.021 191.142 198.284 190.902 cv
198.54 190.666 198.886 190.548 199.321 190.548 cv
199.762 190.548 200.102 190.689 200.34 190.973 cv
200.578 191.256 200.71 191.639 200.737 192.121 cv
200.201 192.298 li
200.177 191.897 200.095 191.6 199.956 191.405 cv
199.816 191.212 199.614 191.114 199.351 191.114 cv
199.115 191.114 198.926 191.181 198.785 191.311 cv
198.646 191.44 198.578 191.612 198.578 191.828 cv
198.578 192.023 198.613 192.191 198.683 192.331 cv
198.754 192.471 198.884 192.622 199.073 192.784 cv
199.917 193.542 li
200.07 193.674 200.193 193.789 200.29 193.889 cv
200.385 193.988 200.488 194.111 200.595 194.258 cv
200.704 194.405 200.784 194.563 200.835 194.733 cv
200.888 194.904 200.916 195.087 200.919 195.282 cv
200.919 195.741 200.781 196.096 200.504 196.348 cv
200.228 196.599 199.854 196.724 199.381 196.724 cv
f
203.276 196.724 mo
202.703 196.724 202.29 196.547 202.037 196.193 cv
201.784 195.839 201.658 195.233 201.658 194.377 cv
201.658 192.864 li
201.658 192.281 201.717 191.818 201.836 191.477 cv
201.957 191.134 202.132 190.894 202.363 190.756 cv
202.594 190.617 202.9 190.548 203.281 190.548 cv
203.534 190.548 203.75 190.581 203.928 190.647 cv
204.107 190.713 204.255 190.806 204.374 190.928 cv
204.492 191.049 204.585 191.213 204.654 191.421 cv
204.723 191.628 204.771 191.857 204.798 192.108 cv
204.826 192.359 204.838 192.662 204.838 193.017 cv
204.833 193.558 li
202.415 193.558 li
202.415 194.453 li
202.415 195.073 202.476 195.512 202.595 195.768 cv
202.715 196.024 202.94 196.152 203.271 196.152 cv
203.534 196.152 203.736 196.069 203.877 195.902 cv
204.019 195.735 204.09 195.433 204.09 194.994 cv
204.09 194.579 li
204.833 194.579 li
204.833 194.913 li
204.833 195.493 204.712 195.94 204.469 196.254 cv
204.227 196.567 203.829 196.724 203.276 196.724 cv
203.276 191.114 mo
202.956 191.114 202.732 191.226 202.606 191.448 cv
202.479 191.671 202.415 192.094 202.415 192.718 cv
202.415 193.123 li
204.09 193.123 li
204.09 192.627 li
204.09 192.418 204.085 192.244 204.075 192.105 cv
204.065 191.968 204.044 191.83 204.012 191.693 cv
203.98 191.558 203.935 191.45 203.877 191.372 cv
203.821 191.295 203.741 191.232 203.64 191.185 cv
203.539 191.138 203.417 191.114 203.276 191.114 cv
f
207.352 196.724 mo
207.08 196.724 206.845 196.684 206.649 196.603 cv
206.454 196.521 206.298 196.416 206.184 196.286 cv
206.07 196.156 205.979 195.985 205.914 195.773 cv
205.848 195.561 205.804 195.346 205.782 195.128 cv
205.76 194.911 205.75 194.653 205.75 194.356 cv
205.75 192.961 li
205.75 192.525 205.773 192.164 205.82 191.876 cv
205.867 191.588 205.951 191.341 206.07 191.135 cv
206.19 190.929 206.353 190.78 206.561 190.688 cv
206.768 190.595 207.031 190.548 207.347 190.548 cv
207.597 190.548 207.813 190.578 207.995 190.639 cv
208.177 190.7 208.325 190.783 208.437 190.89 cv
208.55 190.996 208.64 191.132 208.706 191.297 cv
208.771 191.462 208.817 191.637 208.842 191.82 cv
208.868 192.004 208.88 192.219 208.88 192.465 cv
208.88 192.748 li
208.177 192.748 li
208.177 192.465 li
208.177 191.952 208.117 191.6 207.995 191.405 cv
207.874 191.212 207.661 191.114 207.358 191.114 cv
207.013 191.114 206.786 191.236 206.674 191.481 cv
206.563 191.726 206.507 192.177 206.507 192.834 cv
206.507 194.514 li
206.507 195.127 206.568 195.554 206.687 195.793 cv
206.807 196.033 207.032 196.152 207.363 196.152 cv
207.504 196.152 207.623 196.132 207.722 196.092 cv
207.82 196.052 207.898 195.996 207.956 195.925 cv
208.016 195.855 208.062 195.756 208.096 195.632 cv
208.129 195.507 208.152 195.374 208.162 195.234 cv
208.172 195.095 208.177 194.918 208.177 194.706 cv
208.177 194.377 li
208.88 194.377 li
208.88 194.671 li
208.88 194.934 208.869 195.161 208.847 195.353 cv
208.825 195.546 208.782 195.731 208.715 195.912 cv
208.65 196.093 208.562 196.239 208.453 196.352 cv
208.343 196.465 208.196 196.556 208.01 196.623 cv
207.825 196.69 207.605 196.724 207.352 196.724 cv
f
211.308 196.704 mo
210.9 196.704 210.619 196.592 210.463 196.367 cv
210.308 196.144 210.229 195.815 210.225 195.384 cv
210.225 191.144 li
209.502 191.144 li
209.502 190.639 li
210.225 190.639 li
210.225 188.788 li
210.984 188.788 li
210.984 190.639 li
211.981 190.639 li
211.981 191.144 li
210.984 191.144 li
210.984 195.312 li
210.984 195.616 211.02 195.824 211.09 195.937 cv
211.162 196.051 211.304 196.107 211.52 196.107 cv
211.659 196.107 211.8 196.094 211.946 196.066 cv
211.946 196.638 li
211.719 196.682 211.507 196.704 211.308 196.704 cv
f
214.293 196.724 mo
213.719 196.724 213.306 196.547 213.053 196.193 cv
212.8 195.839 212.674 195.233 212.674 194.377 cv
212.674 192.864 li
212.674 192.281 212.734 191.818 212.853 191.477 cv
212.973 191.134 213.149 190.894 213.379 190.756 cv
213.611 190.617 213.917 190.548 214.297 190.548 cv
214.55 190.548 214.766 190.581 214.945 190.647 cv
215.124 190.713 215.272 190.806 215.39 190.928 cv
215.508 191.049 215.602 191.213 215.67 191.421 cv
215.74 191.628 215.788 191.857 215.815 192.108 cv
215.842 192.359 215.855 192.662 215.855 193.017 cv
215.85 193.558 li
213.432 193.558 li
213.432 194.453 li
213.432 195.073 213.493 195.512 213.612 195.768 cv
213.732 196.024 213.956 196.152 214.288 196.152 cv
214.55 196.152 214.752 196.069 214.894 195.902 cv
215.036 195.735 215.107 195.433 215.107 194.994 cv
215.107 194.579 li
215.85 194.579 li
215.85 194.913 li
215.85 195.493 215.729 195.94 215.486 196.254 cv
215.244 196.567 214.845 196.724 214.293 196.724 cv
214.293 191.114 mo
213.972 191.114 213.748 191.226 213.623 191.448 cv
213.496 191.671 213.432 192.094 213.432 192.718 cv
213.432 193.123 li
215.107 193.123 li
215.107 192.627 li
215.107 192.418 215.102 192.244 215.091 192.105 cv
215.082 191.968 215.06 191.83 215.029 191.693 cv
214.997 191.558 214.952 191.45 214.894 191.372 cv
214.837 191.295 214.757 191.232 214.657 191.185 cv
214.555 191.138 214.434 191.114 214.293 191.114 cv
f
218.298 196.704 mo
217.89 196.704 217.609 196.592 217.454 196.367 cv
217.298 196.144 217.219 195.815 217.215 195.384 cv
217.215 191.144 li
216.493 191.144 li
216.493 190.639 li
217.215 190.639 li
217.215 188.788 li
217.974 188.788 li
217.974 190.639 li
218.971 190.639 li
218.971 191.144 li
217.974 191.144 li
217.974 195.312 li
217.974 195.616 218.01 195.824 218.08 195.937 cv
218.152 196.051 218.294 196.107 218.51 196.107 cv
218.649 196.107 218.791 196.094 218.936 196.066 cv
218.936 196.638 li
218.709 196.682 218.498 196.704 218.298 196.704 cv
f
220.656 196.719 mo
220.355 196.719 220.126 196.607 219.967 196.385 cv
219.809 196.162 219.73 195.848 219.73 195.439 cv
219.73 190.639 li
220.494 190.639 li
220.494 195.282 li
220.494 195.586 220.539 195.802 220.63 195.93 cv
220.721 196.058 220.865 196.122 221.06 196.122 cv
221.401 196.122 221.754 195.927 222.122 195.535 cv
222.122 190.639 li
222.881 190.639 li
222.881 196.628 li
222.122 196.628 li
222.122 195.965 li
221.677 196.468 221.188 196.719 220.656 196.719 cv
f
224.859 196.628 mo
224.1 196.628 li
224.1 190.639 li
224.859 190.639 li
224.859 191.464 li
225.04 191.16 225.253 190.936 225.498 190.791 cv
225.743 190.645 225.99 190.573 226.24 190.573 cv
226.371 190.578 li
226.371 191.397 li
226.263 191.354 226.141 191.332 226.006 191.332 cv
225.521 191.332 225.138 191.564 224.859 192.03 cv
224.859 196.628 li
f
230.276 196.724 mo
229.925 196.724 229.637 196.595 229.412 196.337 cv
229.185 196.079 229.073 195.76 229.073 195.379 cv
229.073 195.18 229.089 195.002 229.123 194.845 cv
229.157 194.689 229.22 194.541 229.313 194.402 cv
229.406 194.264 229.506 194.142 229.616 194.035 cv
229.726 193.93 229.881 193.816 230.083 193.696 cv
230.287 193.577 230.489 193.467 230.691 193.365 cv
230.893 193.265 231.158 193.142 231.485 192.996 cv
231.485 192.566 li
231.485 192.017 231.433 191.638 231.329 191.431 cv
231.224 191.224 231.028 191.119 230.742 191.119 cv
230.188 191.119 229.912 191.462 229.912 192.146 cv
229.912 192.364 li
229.164 192.339 li
229.164 192.241 229.164 192.18 229.168 192.156 cv
229.192 191.594 229.338 191.185 229.609 190.93 cv
229.878 190.676 230.269 190.548 230.782 190.548 cv
231.311 190.548 231.687 190.705 231.91 191.019 cv
232.132 191.332 232.244 191.835 232.244 192.525 cv
232.244 195.439 li
232.244 195.922 232.262 196.317 232.299 196.628 cv
231.626 196.628 li
231.515 195.799 li
231.424 196.062 231.27 196.281 231.052 196.458 cv
230.835 196.636 230.577 196.724 230.276 196.724 cv
231.485 193.497 mo
231.389 193.548 li
231.224 193.635 231.097 193.703 231.009 193.75 cv
230.921 193.797 230.817 193.856 230.694 193.927 cv
230.57 193.998 230.478 194.057 230.417 194.103 cv
230.207 194.276 li
230.036 194.466 li
229.927 194.671 li
229.851 194.916 li
229.837 195.002 229.831 195.097 229.831 195.201 cv
229.831 195.495 229.897 195.713 230.028 195.857 cv
230.16 196 230.325 196.071 230.524 196.071 cv
230.726 196.071 230.913 196.002 231.083 195.861 cv
231.253 195.722 231.387 195.556 231.485 195.363 cv
231.485 193.497 li
f
234.687 196.724 mo
234.171 196.724 233.801 196.53 233.577 196.143 cv
233.352 195.755 233.241 195.11 233.241 194.21 cv
233.241 193.103 li
233.241 192.771 233.252 192.482 233.276 192.232 cv
233.299 191.982 233.343 191.749 233.407 191.529 cv
233.471 191.311 233.555 191.132 233.66 190.993 cv
233.764 190.854 233.9 190.746 234.065 190.667 cv
234.23 190.588 234.425 190.548 234.652 190.548 cv
235.046 190.552 235.398 190.725 235.709 191.069 cv
235.709 188.241 li
236.467 188.241 li
236.467 196.628 li
235.709 196.628 li
235.709 196.203 li
235.405 196.547 235.065 196.721 234.687 196.724 cv
234.819 191.144 mo
234.498 191.144 234.282 191.279 234.169 191.547 cv
234.055 191.815 233.998 192.253 233.998 192.859 cv
233.998 194.271 li
233.998 194.925 234.056 195.397 234.171 195.688 cv
234.286 195.978 234.508 196.122 234.838 196.122 cv
235.132 196.122 235.422 195.99 235.709 195.727 cv
235.709 191.569 li
235.405 191.286 235.108 191.144 234.819 191.144 cv
f
238.47 196.628 mo
237.712 196.628 li
237.712 190.639 li
238.47 190.639 li
238.47 196.628 li
238.476 189.814 mo
237.712 189.814 li
237.712 188.783 li
238.476 188.783 li
238.476 189.814 li
f
240.504 198.601 mo
239.746 198.601 li
239.746 190.639 li
240.504 190.639 li
240.504 191.14 li
240.825 190.745 241.208 190.548 241.652 190.548 cv
241.875 190.548 242.07 190.594 242.237 190.685 cv
242.403 190.775 242.535 190.894 242.631 191.039 cv
242.727 191.184 242.804 191.364 242.864 191.58 cv
242.922 191.796 242.961 192.009 242.98 192.22 cv
242.999 192.431 243.007 192.669 243.007 192.935 cv
243.007 194.2 li
243.007 194.517 242.995 194.8 242.967 195.05 cv
242.94 195.3 242.893 195.531 242.826 195.745 cv
242.758 195.959 242.669 196.137 242.56 196.276 cv
242.451 196.416 242.313 196.526 242.148 196.605 cv
241.983 196.685 241.79 196.724 241.571 196.724 cv
241.183 196.724 240.828 196.533 240.504 196.152 cv
240.504 198.601 li
241.435 191.144 mo
241.127 191.144 240.818 191.299 240.504 191.605 cv
240.504 195.688 li
240.781 195.978 241.096 196.122 241.45 196.122 cv
241.585 196.122 241.7 196.095 241.793 196.039 cv
241.888 195.983 241.965 195.907 242.024 195.812 cv
242.082 195.715 242.129 195.584 242.163 195.419 cv
242.197 195.254 242.219 195.077 242.231 194.891 cv
242.243 194.703 242.249 194.477 242.249 194.21 cv
242.249 192.935 li
242.249 192.295 242.195 191.836 242.087 191.56 cv
241.979 191.283 241.762 191.144 241.435 191.144 cv
f
244.91 196.628 mo
244.152 196.628 li
244.152 190.639 li
244.91 190.639 li
244.91 196.628 li
244.915 189.814 mo
244.152 189.814 li
244.152 188.783 li
244.915 188.783 li
244.915 189.814 li
f
247.55 196.724 mo
247.075 196.724 246.695 196.57 246.41 196.264 cv
246.124 195.957 245.962 195.542 245.921 195.02 cv
246.559 194.827 li
246.599 195.282 246.704 195.617 246.873 195.831 cv
247.041 196.046 247.277 196.152 247.581 196.152 cv
247.844 196.152 248.051 196.075 248.203 195.92 cv
248.348 195.771 248.42 195.572 248.42 195.323 cv
248.42 195.287 li
248.411 194.89 248.168 194.492 247.692 194.094 cv
246.877 193.4 li
246.591 193.161 246.382 192.927 246.25 192.697 cv
246.122 192.476 246.058 192.216 246.058 191.919 cv
246.058 191.48 246.19 191.142 246.453 190.902 cv
246.709 190.666 247.055 190.548 247.49 190.548 cv
247.931 190.548 248.271 190.689 248.509 190.973 cv
248.747 191.256 248.879 191.639 248.906 192.121 cv
248.37 192.298 li
248.346 191.897 248.264 191.6 248.125 191.405 cv
247.985 191.212 247.783 191.114 247.52 191.114 cv
247.284 191.114 247.095 191.181 246.954 191.311 cv
246.815 191.44 246.747 191.612 246.747 191.828 cv
246.747 192.023 246.782 192.191 246.852 192.331 cv
246.923 192.471 247.053 192.622 247.242 192.784 cv
248.086 193.542 li
248.239 193.674 248.362 193.789 248.458 193.889 cv
248.554 193.988 248.657 194.111 248.764 194.258 cv
248.873 194.405 248.953 194.563 249.004 194.733 cv
249.057 194.904 249.085 195.087 249.088 195.282 cv
249.088 195.741 248.95 196.096 248.673 196.348 cv
248.397 196.599 248.023 196.724 247.55 196.724 cv
f
251.429 196.724 mo
251.157 196.724 250.922 196.684 250.726 196.603 cv
250.531 196.521 250.376 196.416 250.261 196.286 cv
250.147 196.156 250.056 195.985 249.991 195.773 cv
249.925 195.561 249.881 195.346 249.859 195.128 cv
249.837 194.911 249.827 194.653 249.827 194.356 cv
249.827 192.961 li
249.827 192.525 249.85 192.164 249.897 191.876 cv
249.944 191.588 250.028 191.341 250.147 191.135 cv
250.267 190.929 250.43 190.78 250.638 190.688 cv
250.845 190.595 251.108 190.548 251.424 190.548 cv
251.674 190.548 251.89 190.578 252.072 190.639 cv
252.254 190.7 252.402 190.783 252.514 190.89 cv
252.628 190.996 252.717 191.132 252.783 191.297 cv
252.848 191.462 252.894 191.637 252.919 191.82 cv
252.945 192.004 252.958 192.219 252.958 192.465 cv
252.958 192.748 li
252.254 192.748 li
252.254 192.465 li
252.254 191.952 252.194 191.6 252.072 191.405 cv
251.951 191.212 251.738 191.114 251.435 191.114 cv
251.09 191.114 250.863 191.236 250.751 191.481 cv
250.64 191.726 250.584 192.177 250.584 192.834 cv
250.584 194.514 li
250.584 195.127 250.645 195.554 250.764 195.793 cv
250.884 196.033 251.109 196.152 251.44 196.152 cv
251.581 196.152 251.701 196.132 251.799 196.092 cv
251.897 196.052 251.975 195.996 252.034 195.925 cv
252.093 195.855 252.139 195.756 252.173 195.632 cv
252.206 195.507 252.229 195.374 252.239 195.234 cv
252.249 195.095 252.254 194.918 252.254 194.706 cv
252.254 194.377 li
252.958 194.377 li
252.958 194.671 li
252.958 194.934 252.946 195.161 252.924 195.353 cv
252.902 195.546 252.859 195.731 252.792 195.912 cv
252.727 196.093 252.639 196.239 252.53 196.352 cv
252.42 196.465 252.273 196.556 252.087 196.623 cv
251.902 196.69 251.682 196.724 251.429 196.724 cv
f
254.808 196.628 mo
254.05 196.628 li
254.05 190.639 li
254.808 190.639 li
254.808 196.628 li
254.814 189.814 mo
254.05 189.814 li
254.05 188.783 li
254.814 188.783 li
254.814 189.814 li
f
259.199 196.628 mo
258.44 196.628 li
258.44 191.984 li
258.44 191.681 258.394 191.465 258.301 191.337 cv
258.208 191.209 258.064 191.144 257.869 191.144 cv
257.542 191.144 257.198 191.329 256.836 191.696 cv
256.836 196.628 li
256.078 196.628 li
256.078 190.639 li
256.836 190.639 li
256.836 191.262 li
257.279 190.786 257.759 190.548 258.279 190.548 cv
258.575 190.548 258.802 190.658 258.961 190.879 cv
259.12 191.101 259.199 191.415 259.199 191.822 cv
259.199 196.628 li
f
261.96 198.596 mo
261.643 198.596 261.364 198.579 261.123 198.545 cv
260.882 198.511 260.669 198.456 260.483 198.378 cv
260.297 198.301 260.156 198.195 260.058 198.061 cv
259.96 197.929 259.912 197.77 259.912 197.584 cv
259.912 197.294 260.008 197.028 260.2 196.787 cv
260.392 196.546 260.626 196.354 260.903 196.208 cv
260.721 196.157 260.564 196.084 260.433 195.988 cv
260.301 195.892 260.236 195.788 260.236 195.677 cv
260.236 195.36 260.473 194.957 260.949 194.468 cv
260.45 194.103 260.2 193.493 260.2 192.637 cv
260.2 192.347 260.234 192.078 260.301 191.83 cv
260.369 191.582 260.469 191.361 260.602 191.168 cv
260.735 190.974 260.91 190.822 261.125 190.713 cv
261.341 190.603 261.589 190.548 261.87 190.548 cv
262.473 190.548 262.903 190.796 263.159 191.292 cv
263.223 191.181 263.331 191.06 263.483 190.93 cv
263.634 190.8 263.796 190.698 263.968 190.624 cv
264.125 190.559 li
264.328 191.089 li
264.163 191.13 263.978 191.202 263.774 191.307 cv
263.57 191.411 263.425 191.513 263.341 191.61 cv
263.392 191.731 263.436 191.9 263.475 192.116 cv
263.514 192.332 263.534 192.513 263.534 192.657 cv
263.534 193.302 263.401 193.811 263.136 194.187 cv
262.872 194.563 262.453 194.751 261.879 194.751 cv
261.789 194.751 261.677 194.74 261.545 194.719 cv
261.414 194.696 261.323 194.676 261.272 194.655 cv
261.262 194.672 261.224 194.73 261.159 194.827 cv
261.093 194.925 261.043 195 261.012 195.053 cv
260.913 195.244 li
260.863 195.435 li
260.863 195.532 261.03 195.608 261.364 195.662 cv
261.434 195.682 261.603 195.712 261.87 195.75 cv
262.135 195.789 262.288 195.814 262.325 195.823 cv
262.817 195.911 263.189 196.064 263.442 196.284 cv
263.695 196.503 263.822 196.81 263.822 197.204 cv
263.822 197.68 263.655 198.03 263.321 198.257 cv
262.987 198.482 262.534 198.596 261.96 198.596 cv
261.323 196.31 mo
260.817 196.623 260.564 196.965 260.564 197.336 cv
260.564 197.565 260.672 197.731 260.888 197.834 cv
261.104 197.937 261.458 197.988 261.95 197.988 cv
262.341 197.988 262.651 197.926 262.878 197.799 cv
263.106 197.673 263.22 197.481 263.22 197.225 cv
263.22 197.006 263.142 196.835 262.987 196.714 cv
262.832 196.593 262.534 196.491 262.091 196.41 cv
261.323 196.31 li
261.884 191.089 mo
261.726 191.089 261.586 191.122 261.462 191.187 cv
261.339 191.254 261.241 191.337 261.168 191.438 cv
261.096 191.539 261.038 191.661 260.992 191.803 cv
260.946 191.944 260.915 192.081 260.901 192.215 cv
260.885 192.348 260.877 192.488 260.877 192.637 cv
260.877 193.683 261.211 194.205 261.879 194.205 cv
262.048 194.205 262.195 194.173 262.32 194.109 cv
262.444 194.045 262.54 193.964 262.608 193.866 cv
262.675 193.769 262.729 193.646 262.77 193.499 cv
262.81 193.353 262.836 193.215 262.848 193.085 cv
262.86 192.955 262.866 192.806 262.866 192.637 cv
262.866 191.605 262.539 191.089 261.884 191.089 cv
f
121.037 209.154 mo
120.73 209.154 120.472 209.106 120.263 209.008 cv
120.054 208.91 119.889 208.762 119.77 208.563 cv
119.65 208.364 119.565 208.131 119.514 207.862 cv
119.463 207.595 119.439 207.272 119.439 206.893 cv
119.439 205.234 li
119.439 204.473 119.556 203.906 119.792 203.535 cv
120.029 203.164 120.443 202.979 121.037 202.979 cv
121.633 202.979 122.049 203.163 122.284 203.532 cv
122.518 203.901 122.635 204.469 122.635 205.234 cv
122.635 206.893 li
122.635 207.272 122.61 207.595 122.559 207.862 cv
122.509 208.131 122.423 208.364 122.304 208.563 cv
122.184 208.762 122.02 208.91 121.811 209.008 cv
121.602 209.106 121.343 209.154 121.037 209.154 cv
121.037 203.545 mo
120.909 203.545 120.797 203.563 120.703 203.596 cv
120.609 203.63 120.531 203.685 120.47 203.76 cv
120.324 204.003 li
120.287 204.089 120.258 204.201 120.24 204.339 cv
120.221 204.478 120.209 204.608 120.205 204.731 cv
120.2 204.854 120.197 205.009 120.197 205.194 cv
120.197 206.935 li
120.197 207.12 120.2 207.274 120.205 207.397 cv
120.209 207.521 120.221 207.65 120.24 207.789 cv
120.258 207.928 120.287 208.039 120.324 208.125 cv
120.47 208.368 li
120.531 208.444 120.609 208.499 120.703 208.532 cv
120.797 208.566 120.909 208.583 121.037 208.583 cv
121.189 208.583 121.317 208.556 121.421 208.5 cv
121.526 208.444 121.608 208.374 121.667 208.29 cv
121.725 208.205 121.77 208.086 121.8 207.931 cv
121.831 207.775 121.85 207.627 121.859 207.485 cv
121.868 207.344 121.872 207.16 121.872 206.935 cv
121.872 205.194 li
121.872 204.969 121.868 204.784 121.859 204.643 cv
121.85 204.501 121.831 204.352 121.8 204.197 cv
121.77 204.043 121.725 203.923 121.667 203.839 cv
121.608 203.754 121.526 203.685 121.421 203.629 cv
121.317 203.573 121.189 203.545 121.037 203.545 cv
f
127.298 209.154 mo
126.725 209.154 126.312 208.978 126.059 208.624 cv
125.806 208.269 125.68 207.664 125.68 206.808 cv
125.68 205.295 li
125.68 204.712 125.74 204.249 125.859 203.907 cv
125.979 203.565 126.155 203.324 126.385 203.186 cv
126.617 203.048 126.922 202.979 127.303 202.979 cv
127.556 202.979 127.772 203.012 127.951 203.077 cv
128.129 203.143 128.278 203.236 128.396 203.358 cv
128.514 203.479 128.608 203.644 128.676 203.852 cv
128.746 204.059 128.793 204.288 128.821 204.539 cv
128.848 204.79 128.861 205.093 128.861 205.447 cv
128.856 205.988 li
126.438 205.988 li
126.438 206.884 li
126.438 207.504 126.499 207.942 126.618 208.198 cv
126.738 208.455 126.962 208.583 127.293 208.583 cv
127.556 208.583 127.758 208.5 127.9 208.333 cv
128.041 208.166 128.113 207.863 128.113 207.425 cv
128.113 207.01 li
128.856 207.01 li
128.856 207.344 li
128.856 207.924 128.735 208.371 128.492 208.684 cv
128.249 208.998 127.851 209.154 127.298 209.154 cv
127.298 203.545 mo
126.978 203.545 126.754 203.656 126.628 203.879 cv
126.501 204.101 126.438 204.524 126.438 205.148 cv
126.438 205.554 li
128.113 205.554 li
128.113 205.058 li
128.113 204.849 128.108 204.675 128.097 204.536 cv
128.087 204.398 128.066 204.261 128.035 204.124 cv
128.002 203.988 127.958 203.881 127.9 203.803 cv
127.843 203.726 127.763 203.663 127.663 203.616 cv
127.561 203.568 127.44 203.545 127.298 203.545 cv
f
130.727 209.059 mo
129.969 209.059 li
129.969 203.069 li
130.727 203.069 li
130.727 209.059 li
130.733 202.245 mo
129.969 202.245 li
129.969 201.214 li
130.733 201.214 li
130.733 202.245 li
f
132.877 209.149 mo
132.577 209.149 132.348 209.038 132.189 208.815 cv
132.031 208.593 131.952 208.278 131.952 207.87 cv
131.952 203.069 li
132.715 203.069 li
132.715 207.713 li
132.715 208.017 132.761 208.232 132.852 208.36 cv
132.943 208.488 133.086 208.553 133.282 208.553 cv
133.623 208.553 133.976 208.357 134.344 207.966 cv
134.344 203.069 li
135.103 203.069 li
135.103 209.059 li
134.344 209.059 li
134.344 208.396 li
133.899 208.898 133.41 209.149 132.877 209.149 cv
f
137.631 209.154 mo
137.156 209.154 136.776 209.001 136.491 208.694 cv
136.205 208.388 136.043 207.973 136.002 207.45 cv
136.64 207.258 li
136.68 207.713 136.785 208.048 136.954 208.262 cv
137.122 208.477 137.358 208.583 137.662 208.583 cv
137.925 208.583 138.132 208.506 138.284 208.351 cv
138.429 208.202 138.502 208.003 138.502 207.754 cv
138.502 207.718 li
138.492 207.32 138.249 206.923 137.773 206.524 cv
136.958 205.831 li
136.672 205.592 136.463 205.357 136.332 205.128 cv
136.204 204.906 136.139 204.646 136.139 204.35 cv
136.139 203.911 136.271 203.572 136.534 203.333 cv
136.791 203.097 137.136 202.979 137.571 202.979 cv
138.012 202.979 138.352 203.12 138.59 203.403 cv
138.828 203.686 138.96 204.069 138.987 204.552 cv
138.451 204.728 li
138.427 204.327 138.345 204.03 138.206 203.836 cv
138.066 203.643 137.864 203.545 137.601 203.545 cv
137.365 203.545 137.176 203.611 137.035 203.742 cv
136.896 203.871 136.828 204.043 136.828 204.259 cv
136.828 204.454 136.863 204.622 136.933 204.762 cv
137.004 204.901 137.134 205.053 137.323 205.215 cv
138.167 205.973 li
138.32 206.104 138.443 206.22 138.54 206.319 cv
138.635 206.419 138.738 206.542 138.845 206.688 cv
138.954 206.836 139.034 206.994 139.085 207.164 cv
139.138 207.335 139.166 207.518 139.169 207.713 cv
139.169 208.172 139.031 208.526 138.754 208.778 cv
138.478 209.029 138.104 209.154 137.631 209.154 cv
f
145.578 209.059 mo
144.859 209.059 li
144.859 204.354 li
144.859 204.027 144.808 203.8 144.707 203.672 cv
144.606 203.544 144.461 203.479 144.272 203.479 cv
143.891 203.486 143.515 203.693 143.144 204.101 cv
143.151 204.203 143.155 204.28 143.155 204.334 cv
143.155 209.059 li
142.447 209.059 li
142.447 204.354 li
142.447 204.027 142.394 203.8 142.289 203.672 cv
142.185 203.544 142.038 203.479 141.849 203.479 cv
141.468 203.486 141.096 203.693 140.732 204.101 cv
140.732 209.059 li
140.018 209.059 li
140.018 203.069 li
140.732 203.069 li
140.732 203.677 li
141.133 203.201 141.603 202.964 142.143 202.964 cv
142.642 202.964 142.955 203.227 143.083 203.753 cv
143.501 203.227 143.995 202.964 144.561 202.964 cv
144.858 202.964 145.101 203.07 145.291 203.285 cv
145.482 203.499 145.578 203.849 145.578 204.334 cv
145.578 209.059 li
f
148.177 209.154 mo
147.871 209.154 147.613 209.106 147.404 209.008 cv
147.195 208.91 147.03 208.762 146.911 208.563 cv
146.79 208.364 146.706 208.131 146.655 207.862 cv
146.604 207.595 146.58 207.272 146.58 206.893 cv
146.58 205.234 li
146.58 204.473 146.697 203.906 146.933 203.535 cv
147.169 203.164 147.583 202.979 148.177 202.979 cv
148.774 202.979 149.19 203.163 149.424 203.532 cv
149.659 203.901 149.776 204.469 149.776 205.234 cv
149.776 206.893 li
149.776 207.272 149.75 207.595 149.7 207.862 cv
149.65 208.131 149.564 208.364 149.445 208.563 cv
149.325 208.762 149.161 208.91 148.952 209.008 cv
148.743 209.106 148.484 209.154 148.177 209.154 cv
148.177 203.545 mo
148.049 203.545 147.938 203.563 147.843 203.596 cv
147.75 203.63 147.671 203.685 147.611 203.76 cv
147.464 204.003 li
147.427 204.089 147.399 204.201 147.38 204.339 cv
147.362 204.478 147.35 204.608 147.345 204.731 cv
147.34 204.854 147.337 205.009 147.337 205.194 cv
147.337 206.935 li
147.337 207.12 147.34 207.274 147.345 207.397 cv
147.35 207.521 147.362 207.65 147.38 207.789 cv
147.399 207.928 147.427 208.039 147.464 208.125 cv
147.611 208.368 li
147.671 208.444 147.75 208.499 147.843 208.532 cv
147.938 208.566 148.049 208.583 148.177 208.583 cv
148.33 208.583 148.457 208.556 148.562 208.5 cv
148.667 208.444 148.749 208.374 148.807 208.29 cv
148.866 208.205 148.911 208.086 148.941 207.931 cv
148.971 207.775 148.991 207.627 149 207.485 cv
149.008 207.344 149.012 207.16 149.012 206.935 cv
149.012 205.194 li
149.012 204.969 149.008 204.784 149 204.643 cv
148.991 204.501 148.971 204.352 148.941 204.197 cv
148.911 204.043 148.866 203.923 148.807 203.839 cv
148.749 203.754 148.667 203.685 148.562 203.629 cv
148.457 203.573 148.33 203.545 148.177 203.545 cv
f
152.153 209.154 mo
151.637 209.154 151.267 208.961 151.042 208.573 cv
150.818 208.186 150.707 207.541 150.707 206.641 cv
150.707 205.533 li
150.707 205.202 150.718 204.913 150.742 204.663 cv
150.765 204.413 150.809 204.18 150.873 203.96 cv
150.937 203.741 151.021 203.563 151.126 203.424 cv
151.23 203.285 151.366 203.177 151.531 203.098 cv
151.696 203.019 151.891 202.979 152.118 202.979 cv
152.512 202.982 152.864 203.155 153.174 203.5 cv
153.174 200.672 li
153.933 200.672 li
153.933 209.059 li
153.174 209.059 li
153.174 208.634 li
152.871 208.978 152.531 209.151 152.153 209.154 cv
152.285 203.575 mo
151.963 203.575 151.748 203.71 151.634 203.978 cv
151.521 204.246 151.464 204.684 151.464 205.29 cv
151.464 206.701 li
151.464 207.355 151.522 207.828 151.637 208.118 cv
151.751 208.408 151.974 208.553 152.304 208.553 cv
152.598 208.553 152.888 208.421 153.174 208.158 cv
153.174 204 li
152.871 203.717 152.574 203.575 152.285 203.575 cv
f
158.627 209.135 mo
158.219 209.135 157.938 209.022 157.783 208.798 cv
157.627 208.574 157.548 208.246 157.544 207.814 cv
157.544 203.575 li
156.822 203.575 li
156.822 203.069 li
157.544 203.069 li
157.544 201.219 li
158.303 201.219 li
158.303 203.069 li
159.3 203.069 li
159.3 203.575 li
158.303 203.575 li
158.303 207.743 li
158.303 208.047 158.339 208.255 158.41 208.368 cv
158.481 208.481 158.624 208.538 158.839 208.538 cv
158.978 208.538 159.12 208.524 159.265 208.497 cv
159.265 209.068 li
159.039 209.112 158.827 209.135 158.627 209.135 cv
f
161.612 209.154 mo
161.039 209.154 160.625 208.978 160.373 208.624 cv
160.12 208.269 159.994 207.664 159.994 206.808 cv
159.994 205.295 li
159.994 204.712 160.053 204.249 160.172 203.907 cv
160.292 203.565 160.468 203.324 160.699 203.186 cv
160.93 203.048 161.236 202.979 161.617 202.979 cv
161.87 202.979 162.085 203.012 162.264 203.077 cv
162.443 203.143 162.591 203.236 162.709 203.358 cv
162.828 203.479 162.921 203.644 162.99 203.852 cv
163.059 204.059 163.107 204.288 163.134 204.539 cv
163.162 204.79 163.174 205.093 163.174 205.447 cv
163.169 205.988 li
160.751 205.988 li
160.751 206.884 li
160.751 207.504 160.812 207.942 160.931 208.198 cv
161.051 208.455 161.276 208.583 161.607 208.583 cv
161.87 208.583 162.072 208.5 162.213 208.333 cv
162.355 208.166 162.426 207.863 162.426 207.425 cv
162.426 207.01 li
163.169 207.01 li
163.169 207.344 li
163.169 207.924 163.048 208.371 162.805 208.684 cv
162.563 208.998 162.165 209.154 161.612 209.154 cv
161.612 203.545 mo
161.291 203.545 161.068 203.656 160.942 203.879 cv
160.815 204.101 160.751 204.524 160.751 205.148 cv
160.751 205.554 li
162.426 205.554 li
162.426 205.058 li
162.426 204.849 162.421 204.675 162.411 204.536 cv
162.401 204.398 162.379 204.261 162.348 204.124 cv
162.316 203.988 162.271 203.881 162.213 203.803 cv
162.157 203.726 162.077 203.663 161.976 203.616 cv
161.875 203.568 161.753 203.545 161.612 203.545 cv
f
169.755 209.059 mo
169.037 209.059 li
169.037 204.354 li
169.037 204.027 168.986 203.8 168.885 203.672 cv
168.784 203.544 168.639 203.479 168.45 203.479 cv
168.069 203.486 167.693 203.693 167.322 204.101 cv
167.329 204.203 167.333 204.28 167.333 204.334 cv
167.333 209.059 li
166.624 209.059 li
166.624 204.354 li
166.624 204.027 166.572 203.8 166.467 203.672 cv
166.363 203.544 166.216 203.479 166.027 203.479 cv
165.646 203.486 165.274 203.693 164.91 204.101 cv
164.91 209.059 li
164.196 209.059 li
164.196 203.069 li
164.91 203.069 li
164.91 203.677 li
165.311 203.201 165.781 202.964 166.321 202.964 cv
166.82 202.964 167.133 203.227 167.261 203.753 cv
167.679 203.227 168.172 202.964 168.739 202.964 cv
169.036 202.964 169.279 203.07 169.469 203.285 cv
169.66 203.499 169.755 203.849 169.755 204.334 cv
169.755 209.059 li
f
171.632 211.031 mo
170.874 211.031 li
170.874 203.069 li
171.632 203.069 li
171.632 203.57 li
171.953 203.176 172.335 202.979 172.78 202.979 cv
173.002 202.979 173.198 203.024 173.365 203.115 cv
173.531 203.206 173.663 203.324 173.759 203.47 cv
173.855 203.614 173.932 203.795 173.992 204.011 cv
174.05 204.227 174.089 204.439 174.108 204.65 cv
174.127 204.861 174.135 205.1 174.135 205.366 cv
174.135 206.631 li
174.135 206.947 174.123 207.231 174.095 207.48 cv
174.068 207.73 174.021 207.962 173.954 208.176 cv
173.886 208.39 173.797 208.567 173.688 208.707 cv
173.579 208.847 173.441 208.957 173.276 209.036 cv
173.111 209.115 172.918 209.154 172.699 209.154 cv
172.311 209.154 171.956 208.964 171.632 208.583 cv
171.632 211.031 li
172.563 203.575 mo
172.255 203.575 171.946 203.729 171.632 204.036 cv
171.632 208.118 li
171.909 208.408 172.224 208.553 172.578 208.553 cv
172.712 208.553 172.828 208.525 172.921 208.47 cv
173.016 208.414 173.093 208.338 173.152 208.242 cv
173.21 208.146 173.257 208.015 173.29 207.85 cv
173.325 207.685 173.347 207.508 173.359 207.321 cv
173.371 207.134 173.377 206.907 173.377 206.641 cv
173.377 205.366 li
173.377 204.726 173.323 204.267 173.215 203.99 cv
173.107 203.714 172.89 203.575 172.563 203.575 cv
f
176.679 209.154 mo
176.373 209.154 176.115 209.106 175.906 209.008 cv
175.697 208.91 175.532 208.762 175.413 208.563 cv
175.292 208.364 175.208 208.131 175.157 207.862 cv
175.106 207.595 175.082 207.272 175.082 206.893 cv
175.082 205.234 li
175.082 204.473 175.199 203.906 175.435 203.535 cv
175.671 203.164 176.085 202.979 176.679 202.979 cv
177.276 202.979 177.692 203.163 177.926 203.532 cv
178.161 203.901 178.278 204.469 178.278 205.234 cv
178.278 206.893 li
178.278 207.272 178.252 207.595 178.202 207.862 cv
178.152 208.131 178.066 208.364 177.947 208.563 cv
177.827 208.762 177.663 208.91 177.454 209.008 cv
177.245 209.106 176.986 209.154 176.679 209.154 cv
176.679 203.545 mo
176.551 203.545 176.44 203.563 176.345 203.596 cv
176.251 203.63 176.173 203.685 176.113 203.76 cv
175.966 204.003 li
175.929 204.089 175.901 204.201 175.882 204.339 cv
175.864 204.478 175.852 204.608 175.847 204.731 cv
175.842 204.854 175.839 205.009 175.839 205.194 cv
175.839 206.935 li
175.839 207.12 175.842 207.274 175.847 207.397 cv
175.852 207.521 175.864 207.65 175.882 207.789 cv
175.901 207.928 175.929 208.039 175.966 208.125 cv
176.113 208.368 li
176.173 208.444 176.251 208.499 176.345 208.532 cv
176.44 208.566 176.551 208.583 176.679 208.583 cv
176.832 208.583 176.96 208.556 177.064 208.5 cv
177.168 208.444 177.25 208.374 177.309 208.29 cv
177.368 208.205 177.413 208.086 177.443 207.931 cv
177.473 207.775 177.493 207.627 177.501 207.485 cv
177.51 207.344 177.514 207.16 177.514 206.935 cv
177.514 205.194 li
177.514 204.969 177.51 204.784 177.501 204.643 cv
177.493 204.501 177.473 204.352 177.443 204.197 cv
177.413 204.043 177.368 203.923 177.309 203.839 cv
177.25 203.754 177.168 203.685 177.064 203.629 cv
176.96 203.573 176.832 203.545 176.679 203.545 cv
f
180.139 209.059 mo
179.38 209.059 li
179.38 203.069 li
180.139 203.069 li
180.139 203.895 li
180.321 203.591 180.534 203.366 180.779 203.222 cv
181.023 203.076 181.27 203.004 181.52 203.004 cv
181.651 203.009 li
181.651 203.828 li
181.543 203.785 181.421 203.763 181.287 203.763 cv
180.801 203.763 180.418 203.995 180.139 204.461 cv
180.139 209.059 li
f
185.364 209.059 mo
184.606 209.059 li
184.606 203.069 li
185.364 203.069 li
185.364 209.059 li
185.37 202.245 mo
184.606 202.245 li
184.606 201.214 li
185.37 201.214 li
185.37 202.245 li
f
189.754 209.059 mo
188.996 209.059 li
188.996 204.415 li
188.996 204.111 188.95 203.896 188.857 203.768 cv
188.764 203.64 188.62 203.575 188.424 203.575 cv
188.097 203.575 187.753 203.76 187.392 204.127 cv
187.392 209.059 li
186.633 209.059 li
186.633 203.069 li
187.392 203.069 li
187.392 203.692 li
187.834 203.217 188.315 202.979 188.834 202.979 cv
189.13 202.979 189.358 203.089 189.517 203.31 cv
189.675 203.531 189.754 203.846 189.754 204.253 cv
189.754 209.059 li
f
192.364 209.154 mo
192.091 209.154 191.857 209.114 191.661 209.033 cv
191.465 208.952 191.31 208.847 191.196 208.717 cv
191.082 208.587 190.991 208.416 190.925 208.204 cv
190.86 207.991 190.816 207.776 190.793 207.559 cv
190.772 207.342 190.761 207.084 190.761 206.787 cv
190.761 205.392 li
190.761 204.956 190.785 204.595 190.832 204.307 cv
190.878 204.019 190.962 203.771 191.082 203.565 cv
191.202 203.359 191.365 203.211 191.573 203.118 cv
191.78 203.025 192.043 202.979 192.359 202.979 cv
192.609 202.979 192.825 203.009 193.006 203.069 cv
193.189 203.131 193.336 203.214 193.449 203.32 cv
193.562 203.427 193.652 203.563 193.717 203.727 cv
193.783 203.893 193.829 204.067 193.854 204.251 cv
193.879 204.435 193.892 204.649 193.892 204.895 cv
193.892 205.179 li
193.189 205.179 li
193.189 204.895 li
193.189 204.383 193.128 204.03 193.006 203.836 cv
192.885 203.643 192.672 203.545 192.37 203.545 cv
192.025 203.545 191.797 203.667 191.686 203.912 cv
191.575 204.156 191.519 204.607 191.519 205.265 cv
191.519 206.944 li
191.519 207.558 191.58 207.984 191.699 208.224 cv
191.819 208.464 192.043 208.583 192.374 208.583 cv
192.516 208.583 192.635 208.563 192.734 208.522 cv
192.832 208.482 192.91 208.427 192.968 208.355 cv
193.028 208.285 193.074 208.187 193.108 208.063 cv
193.141 207.938 193.163 207.805 193.173 207.665 cv
193.184 207.525 193.189 207.349 193.189 207.137 cv
193.189 206.808 li
193.892 206.808 li
193.892 207.102 li
193.892 207.364 193.88 207.592 193.859 207.784 cv
193.836 207.977 193.793 208.162 193.727 208.343 cv
193.662 208.523 193.574 208.67 193.464 208.783 cv
193.355 208.896 193.208 208.986 193.022 209.054 cv
192.836 209.121 192.617 209.154 192.364 209.154 cv
f
195.743 209.059 mo
194.985 209.059 li
194.985 203.069 li
195.743 203.069 li
195.743 209.059 li
195.749 202.245 mo
194.985 202.245 li
194.985 201.214 li
195.749 201.214 li
195.749 202.245 li
f
198.348 209.154 mo
197.833 209.154 197.462 208.961 197.238 208.573 cv
197.013 208.186 196.902 207.541 196.902 206.641 cv
196.902 205.533 li
196.902 205.202 196.914 204.913 196.937 204.663 cv
196.96 204.413 197.004 204.18 197.068 203.96 cv
197.132 203.741 197.216 203.563 197.321 203.424 cv
197.425 203.285 197.561 203.177 197.726 203.098 cv
197.891 203.019 198.086 202.979 198.313 202.979 cv
198.708 202.982 199.059 203.155 199.37 203.5 cv
199.37 200.672 li
200.128 200.672 li
200.128 209.059 li
199.37 209.059 li
199.37 208.634 li
199.066 208.978 198.726 209.151 198.348 209.154 cv
198.48 203.575 mo
198.159 203.575 197.943 203.71 197.83 203.978 cv
197.716 204.246 197.66 204.684 197.66 205.29 cv
197.66 206.701 li
197.66 207.355 197.717 207.828 197.833 208.118 cv
197.947 208.408 198.169 208.553 198.499 208.553 cv
198.793 208.553 199.083 208.421 199.37 208.158 cv
199.37 204 li
199.066 203.717 198.769 203.575 198.48 203.575 cv
f
202.131 209.059 mo
201.373 209.059 li
201.373 203.069 li
202.131 203.069 li
202.131 209.059 li
202.137 202.245 mo
201.373 202.245 li
201.373 201.214 li
202.137 201.214 li
202.137 202.245 li
f
204.737 209.154 mo
204.221 209.154 203.851 208.961 203.626 208.573 cv
203.402 208.186 203.291 207.541 203.291 206.641 cv
203.291 205.533 li
203.291 205.202 203.302 204.913 203.326 204.663 cv
203.349 204.413 203.393 204.18 203.457 203.96 cv
203.521 203.741 203.605 203.563 203.709 203.424 cv
203.814 203.285 203.95 203.177 204.115 203.098 cv
204.28 203.019 204.475 202.979 204.702 202.979 cv
205.096 202.982 205.448 203.155 205.758 203.5 cv
205.758 200.672 li
206.517 200.672 li
206.517 209.059 li
205.758 209.059 li
205.758 208.634 li
205.455 208.978 205.115 209.151 204.737 209.154 cv
204.869 203.575 mo
204.547 203.575 204.332 203.71 204.218 203.978 cv
204.105 204.246 204.048 204.684 204.048 205.29 cv
204.048 206.701 li
204.048 207.355 204.106 207.828 204.221 208.118 cv
204.335 208.408 204.558 208.553 204.888 208.553 cv
205.182 208.553 205.472 208.421 205.758 208.158 cv
205.758 204 li
205.455 203.717 205.158 203.575 204.869 203.575 cv
f
208.556 209.149 mo
208.255 209.149 208.027 209.038 207.868 208.815 cv
207.71 208.593 207.63 208.278 207.63 207.87 cv
207.63 203.069 li
208.394 203.069 li
208.394 207.713 li
208.394 208.017 208.44 208.232 208.531 208.36 cv
208.622 208.488 208.765 208.553 208.96 208.553 cv
209.301 208.553 209.655 208.357 210.023 207.966 cv
210.023 203.069 li
210.782 203.069 li
210.782 209.059 li
210.023 209.059 li
210.023 208.396 li
209.578 208.898 209.088 209.149 208.556 209.149 cv
f
215.06 209.059 mo
214.301 209.059 li
214.301 204.415 li
214.301 204.111 214.255 203.896 214.163 203.768 cv
214.07 203.64 213.925 203.575 213.73 203.575 cv
213.403 203.575 213.059 203.76 212.698 204.127 cv
212.698 209.059 li
211.939 209.059 li
211.939 203.069 li
212.698 203.069 li
212.698 203.692 li
213.14 203.217 213.621 202.979 214.14 202.979 cv
214.436 202.979 214.664 203.089 214.823 203.31 cv
214.981 203.531 215.06 203.846 215.06 204.253 cv
215.06 209.059 li
f
217.599 209.135 mo
217.191 209.135 216.91 209.022 216.754 208.798 cv
216.599 208.574 216.52 208.246 216.516 207.814 cv
216.516 203.575 li
215.793 203.575 li
215.793 203.069 li
216.516 203.069 li
216.516 201.219 li
217.275 201.219 li
217.275 203.069 li
218.272 203.069 li
218.272 203.575 li
217.275 203.575 li
217.275 207.743 li
217.275 208.047 217.311 208.255 217.381 208.368 cv
217.453 208.481 217.595 208.538 217.811 208.538 cv
217.95 208.538 218.091 208.524 218.237 208.497 cv
218.237 209.068 li
218.01 209.112 217.798 209.135 217.599 209.135 cv
f
600 301.404 mo
533.847 342.424 li
526.469 346.981 524.182 356.656 528.738 364.034 cv
550.951 400 li
600 400 li
600 301.404 li
cp
.147219 .0154116 0 0 cmyk
f
84.146 329.555 mo
82.376 323.196 77.3477 318.265 70.9561 316.618 cv
31.9556 306.572 li
25.5635 304.926 18.7788 306.814 14.1567 311.526 cv
0 325.96 li
0 400 li
76.8462 400 li
90.3374 386.244 li
94.959 381.532 96.7158 374.712 94.9458 368.354 cv
84.146 329.555 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
514.432 305.218 mo
513.958 303.369 li
519.327 301.993 li
519.801 303.842 li
514.432 305.218 li
cp
.657221 .328313 0 0 cmyk
f
511.692 307.89 mo
511.219 306.041 li
516.588 304.665 li
517.063 306.514 li
511.692 307.89 li
cp
f
508.953 310.562 mo
508.479 308.713 li
513.85 307.337 li
514.323 309.186 li
508.953 310.562 li
cp
f
506.215 313.233 mo
505.74 311.385 li
511.11 310.009 li
511.584 311.857 li
506.215 313.233 li
cp
f
330.068 193.705 mo
326.665 195.701 321.126 195.74 317.696 193.792 cv
314.266 191.843 314.243 188.646 317.646 186.648 cv
321.048 184.652 326.588 184.613 330.018 186.563 cv
333.448 188.511 333.471 191.709 330.068 193.705 cv
cp
400.985 137.13 mo
350.59 166.698 li
337.813 162.777 321.534 163.989 310.791 170.292 cv
297.722 177.96 297.808 190.245 310.984 197.729 cv
313.942 199.409 317.309 200.705 320.898 201.617 cv
323.435 202.262 326.082 202.715 328.776 202.977 cv
339.258 203.997 350.444 202.128 358.508 197.396 cv
368.274 191.666 370.691 183.358 365.792 176.401 cv
372.746 172.321 li
372.549 167.907 li
379.867 167.856 li
379.683 163.722 li
387.001 163.671 li
386.816 159.536 li
394.135 159.485 li
393.95 155.351 li
401.269 155.3 li
401.084 151.165 li
408.897 151.11 li
411.281 149.712 li
413.912 138.857 li
400.985 137.13 li
cp
.215854 .0709544 .0368048 0 cmyk
f
428.555 324.167 mo
360.588 285.089 li
356.012 282.447 356.586 277.832 361.87 274.781 cv
427.835 236.696 li
433.119 233.646 441.112 233.314 445.688 235.956 cv
513.654 275.034 li
518.23 277.677 517.656 282.291 512.372 285.342 cv
446.407 323.427 li
441.123 326.478 433.13 326.81 428.555 324.167 cv
cp
f
508.235 235.567 mo
496.485 228.783 li
539.809 203.771 li
541.855 202.589 541.855 200.667 539.809 199.485 cv
495.55 173.933 li
493.504 172.751 490.175 172.751 488.128 173.933 cv
444.805 198.945 li
433.054 192.162 li
476.378 167.148 li
484.902 162.227 498.774 162.227 507.3 167.149 cv
551.559 192.702 li
560.084 197.624 560.084 205.633 551.56 210.555 cv
508.235 235.567 li
cp
.657221 .328313 0 0 cmyk
f
527.196 238.555 mo
527.196 232.272 523.377 224.976 518.665 222.255 cv
440.171 176.937 li
438.061 175.719 436.134 175.632 434.645 176.464 cv
434.64 176.461 li
340.918 230.923 li
431.551 299.217 li
523.884 245.626 li
524.169 245.496 524.445 245.346 524.699 245.152 cv
524.701 245.152 li
524.7 245.152 li
526.242 243.984 527.196 241.693 527.196 238.555 cv
cp
.147219 .0154116 0 0 cmyk
f
431.551 299.217 mo
523.884 245.626 li
524.169 245.496 524.445 245.346 524.699 245.152 cv
524.701 245.152 li
524.7 245.151 li
526.242 243.984 527.196 241.693 527.196 238.555 cv
527.196 235.556 526.319 232.33 524.896 229.478 cv
419.644 290.245 li
431.551 299.217 li
cp
1 .866484 .240818 .0951247 cmyk
f
425.647 298.975 mo
347.153 253.656 li
342.441 250.936 338.623 243.639 338.623 237.356 cv
338.623 231.075 342.441 228.188 347.153 230.907 cv
425.647 276.227 li
430.359 278.946 434.179 286.244 434.179 292.525 cv
434.179 298.808 430.359 301.695 425.647 298.975 cv
cp
.657221 .328313 0 0 cmyk
f
413.891 283.691 mo
404.454 278.247 li
403.515 277.705 402.753 276.25 402.753 274.998 cv
402.753 273.746 403.515 273.171 404.454 273.713 cv
413.891 279.156 li
414.83 279.699 415.591 281.153 415.591 282.405 cv
415.591 283.657 414.83 284.233 413.891 283.691 cv
cp
0 0 0 0 cmyk
f
343.028 124.104 mo
359.156 133.266 li
375.612 123.61 li
375.568 119.41 li
375.428 119.492 li
375.415 119.196 li
382.733 119.145 li
382.689 115.01 li
389.866 114.96 li
389.823 110.824 li
397 110.774 li
396.957 106.639 li
404.134 106.589 li
404.091 102.453 li
411.763 102.399 li
414.146 101.001 li
416.778 90.1455 li
416.734 85.9453 li
415.465 89.9697 li
403.851 88.4189 li
343.028 124.104 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
359.112 129.065 mo
375.568 119.41 li
375.371 114.996 li
382.689 114.945 li
382.505 110.811 li
389.823 110.76 li
389.639 106.625 li
396.957 106.574 li
396.771 102.439 li
404.09 102.389 li
403.905 98.2539 li
411.72 98.1992 li
414.104 96.8008 li
416.734 85.9453 li
403.807 84.2188 li
342.985 119.904 li
359.112 129.065 li
cp
.147219 .0154116 0 0 cmyk
f
370.07 122.636 mo
368.414 120.283 365.926 118.084 362.596 116.192 cv
360.25 114.859 357.639 113.78 354.871 112.931 cv
342.985 119.904 li
359.112 129.065 li
370.07 122.636 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
416.293 87.7676 mo
416.734 85.9453 li
414.565 85.6563 li
363.176 115.808 li
365.882 117.345 li
416.293 87.7676 li
cp
.657221 .328313 0 0 cmyk
f
304.05 137.354 mo
303.872 131.383 li
305.783 135.415 li
304.05 137.354 li
cp
.162905 .138613 .141878 0 cmyk
f
333.018 139.618 mo
336.448 141.566 336.471 144.765 333.068 146.761 cv
329.666 148.758 324.126 148.796 320.696 146.848 cv
317.266 144.898 317.243 141.701 320.646 139.704 cv
324.049 137.708 329.588 137.67 333.018 139.618 cv
cp
313.984 150.785 mo
327.161 158.271 348.438 158.121 361.508 150.453 cv
368.061 146.608 371.305 141.604 371.252 136.625 cv
371.253 136.628 li
371.07 130.303 li
369.996 131.499 li
368.479 128.381 365.591 125.444 361.314 123.016 cv
348.139 115.531 326.861 115.68 313.792 123.348 cv
300.722 131.017 300.808 143.301 313.984 150.785 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
332.84 133.65 mo
336.271 135.6 336.293 138.797 332.89 140.794 cv
329.487 142.79 323.948 142.829 320.518 140.88 cv
317.088 138.932 317.065 135.733 320.468 133.737 cv
323.87 131.741 329.409 131.702 332.84 133.65 cv
cp
313.807 144.818 mo
326.982 152.303 348.26 152.154 361.329 144.485 cv
374.399 136.817 374.313 124.533 361.137 117.048 cv
347.961 109.563 326.684 109.712 313.613 117.381 cv
300.544 125.049 300.63 137.333 313.807 144.818 cv
cp
.0370794 .0246281 .0246281 0 cmyk
f
329.083 148.087 mo
326.185 148.54 322.978 148.144 320.696 146.848 cv
318.236 145.45 317.539 143.412 318.59 141.633 cv
312.621 136.9 li
312.621 136.9 309.501 133.38 306.412 129.89 cv
301.606 136.915 304.136 145.19 313.984 150.785 cv
318.329 153.254 323.198 154.655 328.72 155.468 cv
329.083 148.087 li
cp
.657221 .328313 0 0 cmyk
f
332.84 133.65 mo
336.271 135.6 336.293 138.797 332.89 140.794 cv
329.487 142.79 323.948 142.829 320.518 140.88 cv
317.088 138.932 317.065 135.733 320.468 133.737 cv
323.87 131.741 329.409 131.702 332.84 133.65 cv
cp
313.807 144.818 mo
316.765 146.498 320.131 147.794 323.721 148.706 cv
326.257 149.351 328.904 149.804 331.599 150.065 cv
342.08 151.086 353.267 149.217 361.329 144.485 cv
374.399 136.817 374.313 124.533 361.137 117.048 cv
347.961 109.563 326.684 109.712 313.613 117.381 cv
300.544 125.049 300.63 137.333 313.807 144.818 cv
cp
.147219 .0154116 0 0 cmyk
f
307.581 131.223 mo
308.223 127.398 311.058 123.663 316.105 120.701 cv
327.733 113.878 346.664 113.746 358.387 120.405 cv
364.213 123.715 367.156 128.079 367.223 132.469 cv
368.059 127.483 365.161 122.349 358.526 118.58 cv
346.804 111.92 327.873 112.053 316.245 118.875 cv
310.396 122.308 307.514 126.778 307.581 131.223 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
315.959 134.947 mo
313.587 134.947 310.929 135.771 308.156 137.397 cv
298.292 143.185 290.332 157.197 290.414 168.634 cv
290.45 173.963 292.223 177.892 295.406 179.698 cv
298.588 181.504 302.87 181.018 307.466 178.322 cv
317.331 172.535 325.29 158.522 325.21 147.086 cv
325.188 143.948 324.547 141.215 323.354 139.183 cv
322.549 137.81 321.492 136.746 320.216 136.02 cv
318.954 135.303 317.519 134.947 315.959 134.947 cv
cp
299.654 185.53 mo
297.287 185.53 295.062 184.966 293.061 183.829 cv
288.339 181.149 285.711 175.765 285.664 168.666 cv
285.571 155.719 294.583 139.854 305.752 133.3 cv
311.871 129.709 317.841 129.207 322.563 131.89 cv
324.574 133.033 326.219 134.678 327.451 136.778 cv
329.089 139.569 329.933 143.026 329.96 147.054 cv
330.052 160.001 321.039 175.867 309.87 182.42 cv
306.345 184.487 302.869 185.53 299.654 185.53 cv
cp
f
322.162 145.456 mo
331.543 147.755 li
332.89 140.794 li
329.487 142.79 323.948 142.829 320.518 140.88 cv
322.162 145.456 li
cp
.147219 .0154116 0 0 cmyk
f
313.807 144.818 mo
316.765 146.498 320.131 147.794 323.721 148.706 cv
326.257 149.351 328.904 149.804 331.599 150.065 cv
342.08 151.086 353.267 149.217 361.329 144.485 cv
323.127 143.628 li
313.807 144.818 li
cp
f
327.922 149.642 mo
327.922 149.642 323.861 148.981 319.625 147.503 cv
319.625 153.364 li
321.644 154.069 324.971 155.089 327.82 155.466 cv
336.567 156.621 327.922 149.642 327.922 149.642 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
321.83 148.21 mo
320.084 147.695 318.182 147.038 316.426 146.216 cv
311.316 143.823 317.78 152.687 317.78 152.687 cv
317.78 152.687 319.521 153.38 321.83 154.088 cv
321.83 148.21 li
cp
.657221 .328313 0 0 cmyk
f
417.67 251.19 mo
400.955 261.97 li
392.818 260.649 li
412.693 251.041 li
417.67 251.19 li
cp
f
397.461 305.618 mo
397.461 305.618 392.646 303.189 389.689 306.806 cv
386.733 310.421 382.506 318.955 382.375 324.723 cv
382.244 330.489 386.939 330.101 389.729 328.735 cv
392.521 327.37 400.673 315.545 401.167 313.228 cv
401.66 310.91 400.585 307.777 399.8 307.164 cv
399.016 306.551 397.461 305.618 397.461 305.618 cv
cp
1 .866484 .240818 .0951247 cmyk
f
398.512 304.458 mo
398.734 309.446 li
398.782 310.507 398.249 311.517 397.325 312.041 cv
396.484 312.518 395.263 312.884 393.611 312.618 cv
389.984 312.035 389.66 310.999 389.401 306.012 cv
389.143 301.025 398.512 304.458 398.512 304.458 cv
cp
.657221 .328313 0 0 cmyk
f
379.837 296.026 mo
379.837 296.026 375.022 293.599 372.065 297.214 cv
369.109 300.829 364.882 309.364 364.751 315.132 cv
364.62 320.898 369.315 320.509 372.105 319.145 cv
374.896 317.779 383.049 305.954 383.542 303.637 cv
384.036 301.319 382.961 298.187 382.176 297.573 cv
381.392 296.96 379.837 296.026 379.837 296.026 cv
cp
1 .866484 .240818 .0951247 cmyk
f
380.888 294.866 mo
381.11 299.854 li
381.158 300.915 380.625 301.926 379.701 302.45 cv
378.86 302.927 377.639 303.293 375.987 303.027 cv
372.36 302.444 372.036 301.408 371.777 296.421 cv
371.519 291.434 380.888 294.866 380.888 294.866 cv
cp
.657221 .328313 0 0 cmyk
f
423.849 203.288 mo
422.424 180.102 398.739 206.699 398.739 206.699 cv
382.528 222.588 li
367.931 238.624 li
365.08 241.755 363.754 245.984 364.306 250.183 cv
370.21 295.146 li
370.502 297.367 372.402 299.005 374.642 298.987 cv
375.274 298.982 375.999 298.925 376.829 298.796 cv
382.097 297.976 381.708 292.967 381.708 292.967 cv
380.629 250.912 li
411.284 232.433 li
411.284 232.433 425.273 226.474 423.849 203.288 cv
cp
.147219 .0154116 0 0 cmyk
f
392.343 242.964 mo
387.98 241.362 li
387.879 241.362 380.565 248.437 380.629 250.912 cv
383.91 251.966 li
392.151 243.967 li
392.343 242.964 li
cp
.657221 .328313 0 0 cmyk
f
417.67 251.19 mo
417.67 251.19 435.888 240.788 438.068 236.427 cv
438.923 234.719 440.25 232.935 434.934 230.353 cv
410.638 247.672 li
411.691 253.635 li
417.67 251.19 li
cp
f
441.474 212.235 mo
439.954 189.056 416.363 215.646 416.363 215.646 cv
400.152 231.536 li
385.555 247.571 li
382.704 250.703 381.378 254.932 381.93 259.131 cv
387.835 304.095 li
388.126 306.315 390.026 307.953 392.266 307.936 cv
392.898 307.93 393.623 307.873 394.453 307.743 cv
399.721 306.923 399.332 301.914 399.332 301.914 cv
398.253 259.86 li
428.908 241.38 li
428.908 241.38 442.862 233.428 441.474 212.235 cv
cp
.147219 .0154116 0 0 cmyk
f
427.461 137.693 mo
445.418 145.139 445.058 155.753 445.058 155.753 cv
445.058 155.753 441.54 194.667 442.741 220.655 cv
443.243 231.52 385.019 232.349 393.702 203.364 cv
403.939 169.189 400.103 141.522 404.895 137.35 cv
409.688 133.177 422.816 135.768 427.461 137.693 cv
cp
.657221 .328313 0 0 cmyk
f
433.238 147.105 mo
432.299 150.751 427.522 152.673 422.569 151.396 cv
417.615 150.121 414.361 146.131 415.301 142.485 cv
416.24 138.839 421.017 136.918 425.97 138.193 cv
430.923 139.47 434.178 143.46 433.238 147.105 cv
cp
0 .286015 .250584 0 cmyk
f
422.897 138.655 mo
419.563 138.655 416.774 140.207 416.132 142.699 cv
415.748 144.191 416.194 145.821 417.391 147.287 cv
418.648 148.829 420.563 149.993 422.783 150.565 cv
427.27 151.717 431.587 150.073 432.407 146.892 cv
432.791 145.399 432.345 143.77 431.148 142.304 cv
429.891 140.761 427.976 139.597 425.756 139.024 cv
424.783 138.774 423.819 138.655 422.897 138.655 cv
cp
425.601 152.646 mo
424.548 152.646 423.455 152.511 422.355 152.228 cv
419.783 151.565 417.548 150.196 416.06 148.372 cv
414.51 146.473 413.945 144.306 414.47 142.271 cv
415.524 138.172 420.781 135.968 426.184 137.362 cv
428.756 138.024 430.991 139.395 432.479 141.219 cv
434.029 143.119 434.594 145.285 434.069 147.319 cv
433.229 150.584 429.723 152.646 425.601 152.646 cv
cp
0 0 0 0 cmyk
f
420.262 136.884 mo
420.262 136.884 420.416 137.604 420.105 143.294 cv
420.008 145.083 426.271 146.754 427.891 145.135 cv
429.51 143.516 428.862 141.832 429.251 135.744 cv
429.64 129.656 420.262 136.884 420.262 136.884 cv
cp
0 .286015 .250584 0 cmyk
f
429.251 135.744 mo
429.251 135.744 427.708 141.389 420.104 143.554 cv
420.22 138.424 li
429.251 135.744 li
cp
.0520027 .456916 .352453 0 cmyk
f
434.067 121.402 mo
435.979 128.793 431.536 136.333 424.146 138.244 cv
416.755 140.154 409.215 135.712 407.304 128.321 cv
405.393 120.931 409.835 113.391 417.226 111.479 cv
424.616 109.569 432.157 114.012 434.067 121.402 cv
cp
0 .286015 .250584 0 cmyk
f
423.86 125.369 mo
423.86 125.369 416.25 128.629 410.98 128.666 cv
405.711 128.704 406.873 124.291 406.873 124.291 cv
422.515 122.03 li
423.86 125.369 li
cp
.0520027 .456916 .352453 0 cmyk
f
409.41 126.228 mo
409.41 126.228 416.039 123.414 421.854 124.587 cv
423.222 124.863 424.489 125.595 425.369 126.676 cv
425.657 127.029 426.021 127.352 426.433 127.445 cv
427.464 127.679 429.152 123.4 431.157 123.303 cv
433.161 123.205 434.499 124.624 432.855 127.256 cv
431.212 129.887 431.768 132.832 432.523 133.254 cv
433.28 133.676 441.301 127.533 434.226 113.517 cv
427.15 99.501 409.178 107.05 406.382 109.891 cv
406.382 109.891 403.438 112.456 401.043 110.173 cv
401.043 110.173 398.358 130.281 409.41 126.228 cv
cp
0 .912535 0 0 cmyk
f
434.984 184.184 mo
434.984 194.698 li
434.984 195.903 434.478 197.052 433.587 197.864 cv
411.986 217.558 li
414.44 221.311 li
442.967 200.622 li
444.298 199.656 445.156 198.171 445.328 196.535 cv
447.257 178.197 li
434.984 184.184 li
cp
0 .286015 .250584 0 cmyk
f
443.537 150.495 mo
443.537 150.495 450.091 160.351 452.532 186.292 cv
452.532 186.292 441.338 189.912 434.984 187.856 cv
428.632 185.802 443.537 150.495 443.537 150.495 cv
cp
.657221 .328313 0 0 cmyk
f
433.788 162.956 mo
433.788 162.956 431.223 176.687 431.077 183.14 cv
431.037 184.913 432.12 186.514 433.788 187.117 cv
433.788 162.956 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
428.184 231.23 mo
423.409 230.6 li
392.591 212.807 li
391.603 212.236 389.877 212.308 388.736 212.967 cv
366.898 225.57 li
364.012 225.188 li
364.012 228.063 li
364.015 228.063 li
363.995 228.441 364.211 228.806 364.677 229.075 cv
399.604 249.239 li
400.592 249.811 402.317 249.738 403.458 249.08 cv
427.241 235.354 li
427.883 234.983 428.202 234.506 428.184 234.058 cv
428.184 231.23 li
cp
1 .866484 .240818 .0951247 cmyk
f
405.027 219.987 mo
402.838 218.723 li
378.766 218.723 li
366.898 225.57 li
364.012 225.188 li
364.012 228.063 li
364.015 228.063 li
363.995 228.441 364.211 228.806 364.677 229.075 cv
399.604 249.239 li
400.126 249.541 400.854 249.661 401.593 249.612 cv
405.027 219.987 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
365.293 225.357 mo
364.012 225.188 li
364.012 228.063 li
364.015 228.063 li
363.995 228.441 364.211 228.806 364.677 229.075 cv
365.293 229.43 li
365.293 225.357 li
cp
.657221 .328313 0 0 cmyk
f
399.955 249.403 mo
400.892 249.758 402.23 249.681 403.23 249.199 cv
403.23 244.311 li
399.955 244.311 li
399.955 249.403 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
399.604 246.367 mo
364.677 226.203 li
363.689 225.633 363.813 224.636 364.954 223.978 cv
388.736 210.251 li
389.877 209.593 391.603 209.521 392.591 210.092 cv
427.518 230.256 li
428.506 230.826 428.382 231.823 427.241 232.481 cv
403.458 246.208 li
402.317 246.866 400.592 246.938 399.604 246.367 cv
cp
0 0 0 0 cmyk
f
399.013 243.312 mo
369.972 226.544 li
369.15 226.07 369.253 225.241 370.202 224.693 cv
382.946 217.527 li
383.895 216.979 385.33 216.92 386.151 217.395 cv
415.192 234.161 li
416.014 234.636 415.911 235.464 414.962 236.012 cv
402.218 243.179 li
401.27 243.726 399.834 243.785 399.013 243.312 cv
cp
.147219 .0154116 0 0 cmyk
f
390.087 209.589 mo
389.726 211.999 li
389.417 214.053 389.471 216.144 389.883 218.179 cv
390.313 220.302 li
390.556 221.5 391.503 222.429 392.705 222.647 cv
393.645 222.818 394.531 222.159 394.638 221.21 cv
395.214 216.059 li
395.214 216.059 396.532 217.785 397.169 217.785 cv
397.805 217.785 396.456 212.626 395.018 209.706 cv
393.578 206.786 390.087 209.589 390.087 209.589 cv
cp
0 .286015 .250584 0 cmyk
f
401.926 171.288 mo
398.179 178.705 li
397.292 180.459 396.771 182.375 396.645 184.336 cv
395.018 209.706 li
390.087 209.589 li
387.849 181.098 li
387.78 180.218 387.822 179.333 387.977 178.464 cv
390.532 164.016 li
401.926 171.288 li
cp
f
398.421 248.305 mo
395.492 244.481 li
364.695 226.65 li
363.708 226.079 362.909 224.548 362.91 223.23 cv
362.938 198.017 li
361.166 195.705 li
362.83 194.741 li
362.832 194.743 li
363.15 194.538 363.574 194.544 364.04 194.813 cv
398.941 215.021 li
399.929 215.592 400.728 217.123 400.727 218.44 cv
400.697 245.9 li
400.696 246.642 400.442 247.156 400.044 247.364 cv
398.421 248.305 li
cp
1 .866484 .240818 .0951247 cmyk
f
377.123 233.847 mo
374.936 232.579 li
362.925 211.718 li
362.938 198.017 li
361.166 195.705 li
362.83 194.741 li
362.832 194.743 li
363.15 194.538 363.574 194.544 364.04 194.813 cv
398.941 215.021 li
399.463 215.322 399.931 215.894 400.257 216.559 cv
377.123 233.847 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
361.952 196.73 mo
361.166 195.705 li
362.83 194.741 li
362.832 194.743 li
363.15 194.538 363.574 194.544 364.04 194.813 cv
364.654 195.169 li
361.952 196.73 li
cp
.657221 .328313 0 0 cmyk
f
399.259 215.244 mo
400.034 215.878 400.635 217.077 400.717 218.184 cv
397.306 220.153 li
395.672 217.314 li
399.259 215.244 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
397.279 215.983 mo
362.378 195.775 li
361.39 195.204 360.589 195.809 360.587 197.126 cv
360.558 224.585 li
360.556 225.902 361.354 227.434 362.342 228.006 cv
397.244 248.213 li
398.231 248.784 399.033 248.18 399.035 246.862 cv
399.064 219.403 li
399.065 218.086 398.267 216.555 397.279 215.983 cv
cp
.657221 .328313 0 0 cmyk
f
414.44 221.311 mo
413.881 222.47 li
413.237 223.804 412.225 224.926 410.964 225.703 cv
407.497 227.84 li
406.419 228.505 405.053 228.56 403.958 227.922 cv
403.84 227.851 li
402.738 227.16 402.639 225.578 403.545 224.646 cv
407.168 220.922 li
407.168 220.922 405.133 222.481 404.563 221.854 cv
404.145 221.393 406.536 219.147 408.372 219.073 cv
410.209 219 411.986 217.558 411.986 217.558 cv
414.44 221.311 li
cp
0 .286015 .250584 0 cmyk
f
405.254 137.295 mo
405.254 137.295 391.974 151.746 386.616 165.003 cv
386.616 165.003 391.157 173.185 402.274 176.396 cv
413.391 179.606 405.254 137.295 405.254 137.295 cv
cp
.657221 .328313 0 0 cmyk
f
399.773 175.538 mo
401.926 154.744 li
396.854 174.227 li
397.758 174.697 398.736 175.136 399.773 175.538 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
415.201 134.379 mo
411.633 133.398 li
411.633 133.398 413.337 136.079 415.824 136.762 cv
418.312 137.445 418.698 135.34 418.698 135.34 cv
415.201 134.379 li
cp
0 0 0 0 cmyk
f
347.468 84.623 mo
343.158 84.623 339.653 88.1279 339.653 92.4375 cv
339.653 96.7471 343.158 100.252 347.468 100.252 cv
351.777 100.252 355.282 96.7471 355.282 92.4375 cv
355.282 88.1279 351.777 84.623 347.468 84.623 cv
cp
347.468 102.434 mo
341.956 102.434 337.472 97.9492 337.472 92.4375 cv
337.472 86.9258 341.956 82.4414 347.468 82.4414 cv
352.979 82.4414 357.464 86.9258 357.464 92.4375 cv
357.464 97.9492 352.979 102.434 347.468 102.434 cv
cp
.147219 .0154116 0 0 cmyk
f
549.554 162.471 mo
546.848 162.471 544.646 164.672 544.646 167.378 cv
544.646 170.083 546.848 172.284 549.554 172.284 cv
552.259 172.284 554.46 170.083 554.46 167.378 cv
554.46 164.672 552.259 162.471 549.554 162.471 cv
cp
549.554 174.466 mo
545.646 174.466 542.465 171.286 542.465 167.378 cv
542.465 163.47 545.646 160.289 549.554 160.289 cv
553.462 160.289 556.642 163.47 556.642 167.378 cv
556.642 171.286 553.462 174.466 549.554 174.466 cv
cp
.657221 .328313 0 0 cmyk
f
315.247 293.736 mo
318.133 299.607 li
324.004 296.722 li
321.118 290.851 li
315.247 293.736 li
cp
317.139 302.527 mo
312.327 292.742 li
322.112 287.931 li
326.924 297.716 li
317.139 302.527 li
cp
f
457.273 142.061 mo
460.159 147.933 li
466.03 145.047 li
463.145 139.175 li
457.273 142.061 li
cp
459.165 150.853 mo
454.354 141.066 li
464.139 136.255 li
468.95 146.041 li
459.165 150.853 li
cp
f
306.21 247.351 mo
301.711 249.563 li
299.5 245.063 li
303.998 242.852 li
306.21 247.351 li
cp
f
480.313 97.7539 mo
453.574 82.3174 li
453.045 82.0117 452.566 82 452.191 82.2061 cv
452.193 82.1885 li
449.6 83.6875 li
449.6 83.6875 450.748 84.1055 451.423 84.3535 cv
451.423 103.825 li
451.423 105.409 452.386 107.25 453.574 107.936 cv
479.131 122.691 li
479.131 124.976 li
481.751 123.467 li
481.737 123.462 li
482.18 123.191 482.464 122.6 482.464 121.747 cv
482.464 101.865 li
482.464 100.28 481.501 98.4404 480.313 97.7539 cv
cp
.139773 1 .00201419 0 cmyk
f
477.671 124.896 mo
450.933 109.458 li
449.744 108.772 448.781 106.932 448.781 105.348 cv
448.781 85.4658 li
448.781 83.8818 449.744 83.1533 450.933 83.8389 cv
477.671 99.2764 li
478.859 99.9629 479.822 101.803 479.822 103.388 cv
479.822 123.27 li
479.822 124.854 478.859 125.582 477.671 124.896 cv
cp
0 .912535 0 0 cmyk
f
459.925 102.606 mo
459.925 103.757 459.117 104.224 458.12 103.648 cv
457.124 103.073 456.316 101.674 456.316 100.523 cv
456.316 99.373 457.124 98.9072 458.12 99.4824 cv
459.117 100.058 459.925 101.456 459.925 102.606 cv
cp
0 0 0 0 cmyk
f
465.39 105.763 mo
465.39 106.913 464.582 107.379 463.586 106.804 cv
462.59 106.229 461.781 104.829 461.781 103.679 cv
461.781 102.528 462.59 102.063 463.586 102.638 cv
464.582 103.213 465.39 104.611 465.39 105.763 cv
cp
f
470.855 108.918 mo
470.855 110.068 470.048 110.534 469.051 109.959 cv
468.055 109.384 467.247 107.985 467.247 106.834 cv
467.247 105.684 468.055 105.218 469.051 105.793 cv
470.048 106.368 470.855 107.768 470.855 108.918 cv
cp
f
295.473 266.908 mo
269.242 251.764 li
268.723 251.464 268.253 251.452 267.886 251.654 cv
267.888 251.638 li
265.343 253.107 li
265.343 253.107 266.47 253.519 267.131 253.761 cv
267.131 272.863 li
267.131 274.418 268.076 276.224 269.242 276.896 cv
294.314 291.372 li
294.314 293.613 li
296.885 292.133 li
296.871 292.128 li
297.305 291.863 297.584 291.281 297.584 290.445 cv
297.584 270.94 li
297.584 269.387 296.639 267.581 295.473 266.908 cv
cp
.657221 .328313 0 0 cmyk
f
292.882 293.534 mo
266.651 278.39 li
265.485 277.717 264.54 275.911 264.54 274.357 cv
264.54 254.853 li
264.54 253.299 265.485 252.584 266.651 253.257 cv
292.882 268.401 li
294.048 269.074 294.993 270.88 294.993 272.435 cv
294.993 291.939 li
294.993 293.493 294.048 294.208 292.882 293.534 cv
cp
.147219 .0154116 0 0 cmyk
f
275.472 271.669 mo
275.472 272.797 274.68 273.255 273.702 272.69 cv
272.725 272.126 271.932 270.754 271.932 269.625 cv
271.932 268.496 272.725 268.039 273.702 268.604 cv
274.68 269.167 275.472 270.54 275.472 271.669 cv
cp
0 0 0 0 cmyk
f
280.834 274.764 mo
280.834 275.893 280.042 276.351 279.064 275.786 cv
278.086 275.222 277.294 273.849 277.294 272.721 cv
277.294 271.592 278.086 271.134 279.064 271.698 cv
280.042 272.263 280.834 273.636 280.834 274.764 cv
cp
f
286.195 277.859 mo
286.195 278.988 285.403 279.446 284.426 278.882 cv
283.448 278.317 282.656 276.944 282.656 275.816 cv
282.656 274.688 283.448 274.229 284.426 274.794 cv
285.403 275.358 286.195 276.731 286.195 277.859 cv
cp
f
114.363 221.589 mo
113.796 221.589 113.382 221.409 113.13 221.058 cv
112.878 220.698 112.752 220.095 112.752 219.24 cv
112.752 217.728 li
112.752 217.143 112.806 216.684 112.923 216.342 cv
113.049 215.991 113.22 215.757 113.454 215.613 cv
113.688 215.478 113.994 215.406 114.372 215.406 cv
114.624 215.406 114.84 215.442 115.02 215.505 cv
115.2 215.577 115.344 215.667 115.461 215.793 cv
115.578 215.91 115.677 216.072 115.74 216.279 cv
115.812 216.486 115.857 216.72 115.884 216.972 cv
115.92 217.224 115.929 217.521 115.929 217.881 cv
115.92 218.421 li
113.508 218.421 li
113.508 219.312 li
113.508 219.933 113.562 220.374 113.688 220.626 cv
113.805 220.887 114.03 221.013 114.363 221.013 cv
114.624 221.013 114.822 220.932 114.966 220.761 cv
115.11 220.599 115.182 220.293 115.182 219.852 cv
115.182 219.438 li
115.92 219.438 li
115.92 219.771 li
115.92 220.356 115.803 220.806 115.56 221.112 cv
115.317 221.427 114.921 221.589 114.363 221.589 cv
114.363 221.589 li
113.697 216.306 mo
113.571 216.531 113.508 216.954 113.508 217.575 cv
113.508 217.98 li
115.182 217.98 li
115.182 217.485 li
115.182 217.278 115.173 217.107 115.164 216.963 cv
115.155 216.828 115.137 216.693 115.101 216.558 cv
115.074 216.423 115.029 216.315 114.966 216.234 cv
114.912 216.153 114.831 216.09 114.732 216.045 cv
114.624 216 114.507 215.973 114.363 215.973 cv
114.048 215.973 113.823 216.09 113.697 216.306 cv
107.136 221.589 mo
106.83 221.589 106.569 221.535 106.362 221.436 cv
106.146 221.337 105.984 221.193 105.867 220.995 cv
105.75 220.797 105.66 220.563 105.606 220.293 cv
105.561 220.023 105.534 219.699 105.534 219.321 cv
105.534 217.665 li
105.534 216.9 105.651 216.333 105.885 215.964 cv
106.128 215.595 106.542 215.406 107.136 215.406 cv
107.73 215.406 108.144 215.595 108.378 215.964 cv
108.612 216.333 108.729 216.9 108.729 217.665 cv
108.729 219.321 li
108.729 219.699 108.702 220.023 108.657 220.293 cv
108.603 220.563 108.522 220.797 108.396 220.995 cv
108.279 221.193 108.117 221.337 107.91 221.436 cv
107.694 221.535 107.442 221.589 107.136 221.589 cv
107.136 221.589 li
106.794 216.027 mo
106.704 216.063 106.623 216.117 106.569 216.189 cv
106.416 216.432 li
106.38 216.522 106.353 216.63 106.335 216.774 cv
106.317 216.909 106.308 217.035 106.299 217.161 cv
106.299 217.287 106.29 217.44 106.29 217.629 cv
106.29 219.366 li
106.29 219.555 106.299 219.708 106.299 219.825 cv
106.308 219.951 106.317 220.077 106.335 220.221 cv
106.353 220.356 106.38 220.473 106.416 220.554 cv
106.569 220.797 li
106.623 220.878 106.704 220.932 106.794 220.959 cv
106.893 220.995 107.001 221.013 107.136 221.013 cv
107.289 221.013 107.415 220.986 107.514 220.932 cv
107.622 220.878 107.703 220.806 107.766 220.725 cv
107.82 220.635 107.865 220.518 107.892 220.365 cv
107.928 220.203 107.946 220.059 107.955 219.915 cv
107.964 219.771 107.964 219.591 107.964 219.366 cv
107.964 217.629 li
107.964 217.395 107.964 217.215 107.955 217.071 cv
107.946 216.936 107.928 216.783 107.892 216.63 cv
107.865 216.477 107.82 216.351 107.766 216.27 cv
107.703 216.189 107.622 216.117 107.514 216.063 cv
107.415 216 107.289 215.973 107.136 215.973 cv
107.001 215.973 106.893 215.991 106.794 216.027 cv
103.176 221.589 mo
102.78 221.589 102.42 221.391 102.105 221.013 cv
102.105 221.49 li
101.349 221.49 li
101.349 213.102 li
102.105 213.102 li
102.105 216 li
102.42 215.604 102.807 215.406 103.248 215.406 cv
103.473 215.406 103.662 215.451 103.833 215.55 cv
103.995 215.64 104.13 215.757 104.229 215.901 cv
104.319 216.045 104.4 216.225 104.463 216.441 cv
104.517 216.657 104.553 216.873 104.58 217.08 cv
104.598 217.296 104.607 217.53 104.607 217.8 cv
104.607 219.06 li
104.607 219.375 104.589 219.663 104.562 219.915 cv
104.535 220.158 104.49 220.392 104.418 220.608 cv
104.355 220.824 104.265 220.995 104.157 221.139 cv
104.049 221.274 103.914 221.391 103.752 221.463 cv
103.581 221.544 103.392 221.589 103.176 221.589 cv
103.176 221.589 li
102.105 216.468 mo
102.105 220.545 li
102.384 220.842 102.699 220.986 103.041 220.986 cv
103.365 220.986 103.581 220.833 103.689 220.536 cv
103.788 220.239 103.842 219.753 103.842 219.069 cv
103.842 217.8 li
103.842 217.152 103.788 216.693 103.689 216.423 cv
103.581 216.144 103.365 216.009 103.032 216.009 cv
102.726 216.009 102.42 216.162 102.105 216.468 cv
98.262 221.589 mo
97.911 221.589 97.623 221.454 97.398 221.202 cv
97.173 220.941 97.056 220.617 97.056 220.239 cv
97.056 220.041 97.074 219.861 97.11 219.708 cv
97.137 219.546 97.209 219.402 97.299 219.267 cv
97.389 219.123 97.488 219.006 97.596 218.898 cv
97.713 218.79 97.866 218.682 98.064 218.556 cv
98.271 218.439 98.469 218.331 98.676 218.223 cv
98.874 218.124 99.144 218.007 99.468 217.854 cv
99.468 217.431 li
99.468 216.882 99.414 216.495 99.315 216.288 cv
99.207 216.081 99.009 215.982 98.73 215.982 cv
98.172 215.982 97.893 216.324 97.893 217.008 cv
97.893 217.224 li
97.146 217.197 li
97.146 217.107 97.146 217.044 97.155 217.017 cv
97.173 216.459 97.326 216.045 97.596 215.793 cv
97.866 215.541 98.253 215.406 98.766 215.406 cv
99.297 215.406 99.675 215.568 99.891 215.883 cv
100.116 216.189 100.224 216.693 100.224 217.386 cv
100.224 220.302 li
100.224 220.779 100.251 221.175 100.287 221.49 cv
99.612 221.49 li
99.504 220.662 li
99.405 220.923 99.252 221.139 99.036 221.319 cv
98.82 221.499 98.559 221.589 98.262 221.589 cv
98.262 221.589 li
99.378 218.412 mo
99.207 218.493 99.081 218.565 98.991 218.61 cv
98.91 218.655 98.802 218.718 98.676 218.79 cv
98.55 218.862 98.46 218.916 98.406 218.961 cv
98.19 219.141 li
98.019 219.33 li
97.911 219.528 li
97.839 219.78 li
97.821 219.861 97.812 219.96 97.812 220.059 cv
97.812 220.356 97.884 220.572 98.01 220.716 cv
98.145 220.86 98.307 220.932 98.505 220.932 cv
98.712 220.932 98.901 220.86 99.063 220.725 cv
99.234 220.581 99.369 220.419 99.468 220.221 cv
99.468 218.358 li
99.378 218.412 li
86.049 221.247 mo
85.887 221.022 85.806 220.707 85.806 220.302 cv
85.806 215.496 li
86.571 215.496 li
86.571 220.14 li
86.571 220.446 86.616 220.662 86.706 220.788 cv
86.796 220.923 86.94 220.986 87.138 220.986 cv
87.48 220.986 87.831 220.788 88.2 220.392 cv
88.2 215.496 li
88.956 215.496 li
88.956 221.49 li
88.2 221.49 li
88.2 220.824 li
87.759 221.328 87.264 221.58 86.733 221.58 cv
86.436 221.58 86.202 221.472 86.049 221.247 cv
90.693 221.229 mo
90.54 221.004 90.459 220.68 90.459 220.248 cv
90.459 216.009 li
89.73 216.009 li
89.73 215.496 li
90.459 215.496 li
90.459 213.651 li
91.215 213.651 li
91.215 215.496 li
92.214 215.496 li
92.214 216.009 li
91.215 216.009 li
91.215 220.176 li
91.215 220.482 91.251 220.689 91.323 220.797 cv
91.395 220.914 91.539 220.968 91.746 220.968 cv
91.89 220.968 92.034 220.959 92.178 220.932 cv
92.178 221.499 li
91.953 221.544 91.737 221.562 91.539 221.562 cv
91.134 221.562 90.846 221.454 90.693 221.229 cv
109.836 221.49 mo
109.836 215.496 li
110.592 215.496 li
110.592 216.324 li
110.772 216.018 110.988 215.793 111.231 215.649 cv
111.474 215.505 111.726 215.433 111.969 215.433 cv
112.104 215.442 li
112.104 216.261 li
111.996 216.216 111.879 216.189 111.744 216.189 cv
111.258 216.189 110.871 216.423 110.592 216.891 cv
110.592 221.49 li
109.836 221.49 li
95.238 221.49 mo
95.238 213.102 li
96.003 213.102 li
96.003 221.49 li
95.238 221.49 li
96.984 209.934 mo
97.164 209.835 97.29 209.718 97.371 209.583 cv
97.443 209.448 97.479 209.268 97.479 209.061 cv
97.029 209.061 li
97.029 207.927 li
97.875 207.927 li
97.875 208.98 li
97.875 209.313 97.821 209.583 97.713 209.772 cv
97.596 209.97 97.407 210.132 97.146 210.267 cv
96.984 209.934 li
115.497 208.575 mo
115.272 208.188 115.164 207.54 115.164 206.64 cv
115.164 205.533 li
115.164 205.2 115.173 204.912 115.2 204.66 cv
115.227 204.417 115.263 204.183 115.335 203.958 cv
115.398 203.742 115.479 203.562 115.587 203.427 cv
115.686 203.283 115.821 203.175 115.992 203.094 cv
116.154 203.022 116.352 202.977 116.577 202.977 cv
116.973 202.986 117.324 203.157 117.63 203.499 cv
117.63 200.673 li
118.395 200.673 li
118.395 209.061 li
117.63 209.061 li
117.63 208.638 li
117.333 208.98 116.991 209.151 116.613 209.151 cv
116.091 209.151 115.722 208.962 115.497 208.575 cv
116.091 203.976 mo
115.983 204.246 115.92 204.687 115.92 205.29 cv
115.92 206.703 li
115.92 207.351 115.983 207.828 116.091 208.116 cv
116.208 208.404 116.433 208.557 116.766 208.557 cv
117.054 208.557 117.342 208.422 117.63 208.161 cv
117.63 204.003 li
117.333 203.715 117.036 203.571 116.739 203.571 cv
116.424 203.571 116.208 203.706 116.091 203.976 cv
109.116 208.575 mo
108.891 208.188 108.774 207.54 108.774 206.64 cv
108.774 205.533 li
108.774 205.2 108.792 204.912 108.81 204.66 cv
108.837 204.417 108.882 204.183 108.945 203.958 cv
109.008 203.742 109.089 203.562 109.197 203.427 cv
109.296 203.283 109.431 203.175 109.602 203.094 cv
109.764 203.022 109.962 202.977 110.187 202.977 cv
110.583 202.986 110.934 203.157 111.24 203.499 cv
111.24 200.673 li
112.005 200.673 li
112.005 209.061 li
111.24 209.061 li
111.24 208.638 li
110.943 208.98 110.601 209.151 110.223 209.151 cv
109.71 209.151 109.332 208.962 109.116 208.575 cv
109.701 203.976 mo
109.593 204.246 109.53 204.687 109.53 205.29 cv
109.53 206.703 li
109.53 207.351 109.593 207.828 109.71 208.116 cv
109.818 208.404 110.043 208.557 110.376 208.557 cv
110.664 208.557 110.961 208.422 111.24 208.161 cv
111.24 204.003 li
110.943 203.715 110.646 203.571 110.358 203.571 cv
110.034 203.571 109.818 203.706 109.701 203.976 cv
105.066 208.62 mo
104.814 208.269 104.688 207.666 104.688 206.811 cv
104.688 205.299 li
104.688 204.714 104.742 204.246 104.859 203.904 cv
104.985 203.562 105.156 203.328 105.39 203.184 cv
105.624 203.049 105.93 202.977 106.308 202.977 cv
106.56 202.977 106.776 203.013 106.956 203.076 cv
107.136 203.148 107.28 203.238 107.397 203.355 cv
107.514 203.481 107.613 203.643 107.676 203.85 cv
107.748 204.057 107.793 204.291 107.829 204.543 cv
107.856 204.786 107.865 205.092 107.865 205.443 cv
107.856 205.992 li
105.444 205.992 li
105.444 206.883 li
105.444 207.504 105.498 207.945 105.624 208.197 cv
105.741 208.458 105.966 208.584 106.299 208.584 cv
106.56 208.584 106.758 208.503 106.902 208.332 cv
107.046 208.17 107.118 207.864 107.118 207.423 cv
107.118 207.009 li
107.856 207.009 li
107.856 207.342 li
107.856 207.927 107.739 208.368 107.496 208.683 cv
107.253 208.998 106.857 209.151 106.299 209.151 cv
105.732 209.151 105.318 208.98 105.066 208.62 cv
105.633 203.877 mo
105.507 204.102 105.444 204.525 105.444 205.146 cv
105.444 205.551 li
107.118 205.551 li
107.118 205.056 li
107.118 204.849 107.109 204.678 107.1 204.534 cv
107.091 204.399 107.073 204.264 107.037 204.12 cv
107.01 203.985 106.965 203.877 106.902 203.805 cv
106.848 203.724 106.767 203.661 106.668 203.616 cv
106.569 203.571 106.443 203.544 106.299 203.544 cv
105.984 203.544 105.759 203.652 105.633 203.877 cv
101.268 208.692 mo
100.98 208.386 100.818 207.972 100.782 207.45 cv
101.421 207.261 li
101.457 207.711 101.565 208.044 101.727 208.26 cv
101.898 208.476 102.132 208.584 102.438 208.584 cv
102.699 208.584 102.906 208.503 103.059 208.35 cv
103.203 208.206 103.275 207.999 103.275 207.756 cv
103.275 207.72 li
103.266 207.324 103.023 206.919 102.546 206.523 cv
101.736 205.83 li
101.448 205.596 101.241 205.353 101.106 205.128 cv
100.98 204.903 100.917 204.642 100.917 204.354 cv
100.917 203.913 101.043 203.571 101.313 203.337 cv
101.565 203.094 101.916 202.977 102.348 202.977 cv
102.789 202.977 103.131 203.121 103.365 203.4 cv
103.608 203.688 103.734 204.066 103.761 204.552 cv
103.23 204.732 li
103.203 204.327 103.122 204.03 102.978 203.832 cv
102.843 203.643 102.636 203.544 102.375 203.544 cv
102.141 203.544 101.952 203.607 101.808 203.742 cv
101.673 203.868 101.601 204.039 101.601 204.255 cv
101.601 204.453 101.637 204.624 101.709 204.759 cv
101.781 204.903 101.907 205.056 102.096 205.218 cv
102.942 205.974 li
103.095 206.1 103.221 206.217 103.32 206.316 cv
103.41 206.415 103.518 206.541 103.626 206.685 cv
103.734 206.838 103.806 206.991 103.86 207.162 cv
103.914 207.333 103.941 207.522 103.95 207.711 cv
103.95 208.17 103.806 208.53 103.527 208.782 cv
103.257 209.025 102.879 209.151 102.411 209.151 cv
101.934 209.151 101.556 208.998 101.268 208.692 cv
86.121 208.62 mo
85.869 208.269 85.743 207.666 85.743 206.811 cv
85.743 205.299 li
85.743 204.714 85.806 204.246 85.923 203.904 cv
86.04 203.562 86.22 203.328 86.445 203.184 cv
86.679 203.049 86.985 202.977 87.363 202.977 cv
87.615 202.977 87.831 203.013 88.011 203.076 cv
88.191 203.148 88.344 203.238 88.461 203.355 cv
88.578 203.481 88.668 203.643 88.74 203.85 cv
88.812 204.057 88.857 204.291 88.884 204.543 cv
88.911 204.786 88.92 205.092 88.92 205.443 cv
88.92 205.992 li
86.499 205.992 li
86.499 206.883 li
86.499 207.504 86.562 207.945 86.679 208.197 cv
86.796 208.458 87.021 208.584 87.354 208.584 cv
87.615 208.584 87.822 208.503 87.966 208.332 cv
88.101 208.17 88.173 207.864 88.173 207.423 cv
88.173 207.009 li
88.92 207.009 li
88.92 207.342 li
88.92 207.927 88.794 208.368 88.551 208.683 cv
88.308 208.998 87.912 209.151 87.363 209.151 cv
86.787 209.151 86.373 208.98 86.121 208.62 cv
86.688 203.877 mo
86.562 204.102 86.499 204.525 86.499 205.146 cv
86.499 205.551 li
88.173 205.551 li
88.173 205.056 li
88.173 204.849 88.173 204.678 88.164 204.534 cv
88.146 204.399 88.128 204.264 88.101 204.12 cv
88.065 203.985 88.02 203.877 87.966 203.805 cv
87.903 203.724 87.822 203.661 87.723 203.616 cv
87.624 203.571 87.498 203.544 87.363 203.544 cv
87.039 203.544 86.814 203.652 86.688 203.877 cv
94.734 208.8 mo
94.572 208.575 94.5 208.242 94.491 207.81 cv
94.491 203.571 li
93.771 203.571 li
93.771 203.067 li
94.491 203.067 li
94.491 201.222 li
95.247 201.222 li
95.247 203.067 li
96.246 203.067 li
96.246 203.571 li
95.247 203.571 li
95.247 207.747 li
95.247 208.044 95.283 208.251 95.355 208.368 cv
95.427 208.485 95.571 208.539 95.787 208.539 cv
95.922 208.539 96.066 208.521 96.21 208.494 cv
96.21 209.07 li
95.985 209.115 95.778 209.133 95.571 209.133 cv
95.166 209.133 94.887 209.025 94.734 208.8 cv
92.124 209.061 mo
92.124 203.067 li
92.88 203.067 li
92.88 209.061 li
92.124 209.061 li
90.054 209.061 mo
90.054 200.673 li
90.819 200.673 li
90.819 209.061 li
90.054 209.061 li
92.124 202.248 mo
92.124 201.213 li
92.889 201.213 li
92.889 202.248 li
92.124 202.248 li
112.023 198.603 mo
112.023 190.638 li
112.788 190.638 li
112.788 191.142 li
113.103 190.746 113.49 190.548 113.931 190.548 cv
114.156 190.548 114.354 190.593 114.516 190.683 cv
114.687 190.773 114.813 190.89 114.912 191.043 cv
115.011 191.187 115.083 191.367 115.146 191.583 cv
115.2 191.799 115.245 192.006 115.263 192.222 cv
115.281 192.429 115.29 192.672 115.29 192.933 cv
115.29 194.202 li
115.29 194.517 115.272 194.796 115.245 195.048 cv
115.218 195.3 115.173 195.534 115.11 195.741 cv
115.038 195.957 114.948 196.137 114.84 196.272 cv
114.732 196.416 114.597 196.524 114.426 196.605 cv
114.264 196.686 114.075 196.722 113.85 196.722 cv
113.463 196.722 113.112 196.533 112.788 196.155 cv
112.788 198.603 li
112.023 198.603 li
112.788 191.601 mo
112.788 195.687 li
113.058 195.975 113.373 196.119 113.733 196.119 cv
113.868 196.119 113.976 196.092 114.075 196.038 cv
114.165 195.984 114.246 195.903 114.3 195.813 cv
114.363 195.714 114.408 195.588 114.444 195.417 cv
114.48 195.255 114.498 195.075 114.507 194.895 cv
114.525 194.706 114.534 194.481 114.534 194.211 cv
114.534 192.933 li
114.534 192.294 114.471 191.835 114.372 191.556 cv
114.255 191.286 114.039 191.142 113.715 191.142 cv
113.409 191.142 113.094 191.295 112.788 191.601 cv
116.577 196.263 mo
116.289 195.957 116.127 195.543 116.082 195.021 cv
116.721 194.823 li
116.766 195.282 116.865 195.615 117.036 195.831 cv
117.207 196.047 117.441 196.155 117.747 196.155 cv
118.008 196.155 118.215 196.074 118.368 195.921 cv
118.512 195.768 118.584 195.57 118.584 195.327 cv
118.584 195.291 li
118.575 194.886 118.332 194.49 117.855 194.094 cv
117.045 193.401 li
116.757 193.158 116.55 192.924 116.415 192.699 cv
116.289 192.474 116.226 192.213 116.226 191.916 cv
116.226 191.484 116.352 191.142 116.622 190.899 cv
116.874 190.665 117.216 190.548 117.657 190.548 cv
118.098 190.548 118.44 190.692 118.674 190.971 cv
118.908 191.259 119.043 191.637 119.07 192.123 cv
118.539 192.294 li
118.512 191.898 118.431 191.601 118.287 191.403 cv
118.152 191.214 117.945 191.115 117.684 191.115 cv
117.45 191.115 117.261 191.178 117.117 191.313 cv
116.982 191.439 116.91 191.61 116.91 191.826 cv
116.91 192.024 116.946 192.195 117.018 192.33 cv
117.09 192.474 117.216 192.618 117.405 192.78 cv
118.251 193.545 li
118.404 193.671 118.53 193.788 118.62 193.887 cv
118.719 193.986 118.818 194.112 118.926 194.256 cv
119.034 194.409 119.115 194.562 119.169 194.733 cv
119.223 194.904 119.25 195.084 119.25 195.282 cv
119.25 195.741 119.115 196.092 118.836 196.344 cv
118.566 196.596 118.188 196.722 117.711 196.722 cv
117.243 196.722 116.856 196.569 116.577 196.263 cv
97.299 196.191 mo
97.047 195.84 96.921 195.237 96.921 194.373 cv
96.921 192.861 li
96.921 192.285 96.975 191.817 97.092 191.475 cv
97.218 191.133 97.389 190.89 97.623 190.755 cv
97.857 190.62 98.163 190.548 98.541 190.548 cv
98.793 190.548 99.009 190.584 99.189 190.647 cv
99.369 190.71 99.513 190.809 99.63 190.926 cv
99.747 191.052 99.846 191.214 99.918 191.421 cv
99.981 191.628 100.035 191.853 100.062 192.105 cv
100.089 192.357 100.098 192.663 100.098 193.014 cv
100.089 193.554 li
97.677 193.554 li
97.677 194.454 li
97.677 195.075 97.74 195.516 97.857 195.768 cv
97.974 196.02 98.199 196.155 98.532 196.155 cv
98.793 196.155 99 196.065 99.135 195.903 cv
99.279 195.732 99.351 195.435 99.351 194.994 cv
99.351 194.58 li
100.089 194.58 li
100.089 194.913 li
100.089 195.489 99.972 195.939 99.729 196.254 cv
99.486 196.569 99.09 196.722 98.532 196.722 cv
97.965 196.722 97.551 196.551 97.299 196.191 cv
97.866 191.448 mo
97.74 191.673 97.677 192.096 97.677 192.717 cv
97.677 193.122 li
99.351 193.122 li
99.351 192.627 li
99.351 192.42 99.342 192.24 99.333 192.105 cv
99.324 191.97 99.306 191.826 99.27 191.691 cv
99.243 191.556 99.198 191.448 99.135 191.376 cv
99.081 191.295 99 191.232 98.901 191.187 cv
98.802 191.142 98.676 191.115 98.532 191.115 cv
98.217 191.115 97.992 191.223 97.866 191.448 cv
90.531 196.578 mo
90.315 196.479 90.153 196.335 90.036 196.128 cv
89.919 195.93 89.829 195.696 89.775 195.435 cv
89.73 195.165 89.703 194.841 89.703 194.463 cv
89.703 192.807 li
89.703 192.042 89.82 191.475 90.054 191.106 cv
90.297 190.737 90.711 190.548 91.305 190.548 cv
91.899 190.548 92.313 190.728 92.547 191.106 cv
92.781 191.475 92.898 192.042 92.898 192.807 cv
92.898 194.463 li
92.898 194.841 92.871 195.165 92.826 195.435 cv
92.772 195.696 92.691 195.93 92.565 196.128 cv
92.448 196.335 92.286 196.479 92.079 196.578 cv
91.863 196.677 91.611 196.722 91.305 196.722 cv
90.999 196.722 90.738 196.677 90.531 196.578 cv
90.963 191.169 mo
90.873 191.196 90.792 191.25 90.738 191.331 cv
90.585 191.574 li
90.549 191.655 90.522 191.772 90.504 191.907 cv
90.486 192.051 90.477 192.177 90.468 192.303 cv
90.468 192.42 90.459 192.582 90.459 192.762 cv
90.459 194.508 li
90.459 194.688 90.468 194.841 90.468 194.967 cv
90.477 195.093 90.486 195.219 90.504 195.354 cv
90.522 195.498 90.549 195.606 90.585 195.696 cv
90.738 195.939 li
90.792 196.011 90.873 196.065 90.963 196.101 cv
91.062 196.137 91.17 196.155 91.305 196.155 cv
91.458 196.155 91.584 196.128 91.683 196.065 cv
91.791 196.011 91.872 195.939 91.935 195.858 cv
91.989 195.777 92.034 195.651 92.061 195.498 cv
92.097 195.345 92.115 195.192 92.124 195.057 cv
92.133 194.913 92.133 194.733 92.133 194.508 cv
92.133 192.762 li
92.133 192.537 92.133 192.357 92.124 192.213 cv
92.115 192.069 92.097 191.925 92.061 191.763 cv
92.034 191.61 91.989 191.493 91.935 191.412 cv
91.872 191.322 91.791 191.25 91.683 191.196 cv
91.584 191.142 91.458 191.115 91.305 191.115 cv
91.17 191.115 91.062 191.133 90.963 191.169 cv
109.989 196.632 mo
109.989 190.638 li
110.754 190.638 li
110.754 196.632 li
109.989 196.632 li
105.957 196.632 mo
105.957 191.925 li
105.957 191.601 105.912 191.367 105.813 191.241 cv
105.705 191.115 105.561 191.052 105.372 191.052 cv
104.994 191.052 104.616 191.259 104.247 191.673 cv
104.256 191.772 104.256 191.853 104.256 191.907 cv
104.256 196.632 li
103.545 196.632 li
103.545 191.925 li
103.545 191.601 103.5 191.367 103.392 191.241 cv
103.284 191.115 103.14 191.052 102.951 191.052 cv
102.573 191.052 102.195 191.259 101.835 191.673 cv
101.835 196.632 li
101.124 196.632 li
101.124 190.638 li
101.835 190.638 li
101.835 191.25 li
102.231 190.773 102.708 190.53 103.248 190.53 cv
103.743 190.53 104.058 190.8 104.184 191.322 cv
104.607 190.8 105.093 190.53 105.66 190.53 cv
105.957 190.53 106.2 190.638 106.389 190.854 cv
106.587 191.07 106.677 191.421 106.677 191.907 cv
106.677 196.632 li
105.957 196.632 li
94.005 196.632 mo
94.005 190.638 li
94.761 190.638 li
94.761 191.466 li
94.941 191.16 95.157 190.935 95.4 190.791 cv
95.643 190.647 95.895 190.575 96.147 190.575 cv
96.273 190.575 li
96.273 191.394 li
96.165 191.358 96.048 191.331 95.913 191.331 cv
95.427 191.331 95.04 191.565 94.761 192.033 cv
94.761 196.632 li
94.005 196.632 li
86.004 196.632 mo
86.004 188.244 li
86.796 188.244 li
86.796 196.038 li
89.19 196.038 li
89.19 196.632 li
86.004 196.632 li
109.989 189.81 mo
109.989 188.784 li
110.754 188.784 li
110.754 189.81 li
109.989 189.81 li
/0 /CSA get_res setcolorspace
gsave
eclp
[1 0 0 -1 0 400 ]ct
[34.08 0 0 34.08 85.44 178 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 142 
/H 142 
/M[142 0 0 -142 0 142 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 142 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JcLB&JcLB&_Z9X\_uR.ErBo$6V#^H+iW+Q1LB.9u!!%TNpAk.ZO9"JEr=PY%JcNpnrHZ'VjT,7)gAq1>
bQ-2orBo<>r=Rca`rQ&M^]9AprH\2=W;umBh>mNTrBm7YrBorPmf<:uT`G$'quD<Kd/a,j[K,XorH[,t
rBnO(h#RC@gAq0ae,[bor=QR?PlUc.nc5lorH[,trBm7YrBo]Ip&P%'T`G$'o`0RDg&V-QrHY(:rH[`0
n,WDST`G$YqZ,RTr=Pn,quH[-MZCWprHZ<]ZiL%ldf?3Er=S#hJcLQ+rHSACJcPNFrBlYHkQ(PnT)aHC
aoMBcn,WH5joGC+nGrT7s*=G@rd!H&!."/9s*=A>rBp&Sr^5fJr^6YboDnhWq>gL^i;`jFo)SeXp]17)
n,WG"mf<+_rXnZ#r=Sl+rXn)h!"nf&rt4&eNWB$'q#L9lpj)`:rH\DCr-A5@pj)`:rHSACqK`&?q0DQ3
rH\>ArHSACqK_l:q0Dr>rW)mao)SPQqZ-R^rrDsar;cU[qZ-R^!!)j_rW)a]o)S_Vr;cd`!!)j_r;ccr
q*Y#Zr=SW$p_!B'r=T&0r"8l-p_!B'r=K#0q@W],q%<2ur=Su.!"o2B!!)j-q#L4&SH.%;rH\#8p3HQ9
rHSACqg&/@p3HQ9oQ^K<H$T73o)S`7r;cJ8qZ-A9quH[_oDnSPquH[_!!)m`rW)XZqu?^aog8]Zpd=WQ
rBpM`oL&KUpI"iYr=SZ%p(@3&r=K#0q[rf-rt5#<quH@$!!)d+o)S_$r;cI%qZ-@&g&RB<rH\&9rd"6`
r;cP:rrD_;quGu,oDni8r;cG7r;cM9r;cd`o`4VOr;cOYrrD^ZquGtKoDnhWr;cFVr;ca_qEt2]r=S]&
oF_$%p(@<)ob%*%kn3Ofr=Su.q%<K9r;cL&QiPh?rrE"Co`4o8rW)kAr;cP:rrDtBrW)kAr;c_?rW)e?
rW)kAoDni8r;c_?rW)kArVuour-A8ArH\>ArBp5Xr'UG`r'UD_p-\i[r'UG`r'UD_qa:>_qEt5^r'U)V
rBpM`s$Q`PrW)j`r;ca_rW)mar;cd.o`4n%rW)j.r;cO'rrDs/rW)j.r;c^,rW)d,rW)j.q#L<mr=Su.
q[rf-r"8l-r"8o.r=Q.3_Z9X\o`4r9quH\@r;c_?q>gJ>quH\@r;ckCs*=JAr-A2?rH\#8rH\>Ar-A2?
rH\>ArH\;@rd"GBrBp5XrBpJ_rBpM`qa:2[rBpJ_rBpM`rBpG^r'UA^rBp2WrBpM`r'UA^rBpM`rBpJ_
r^6Var=S]&r=Sr-r=Su.rt52Aq>gI+quH[-r;cd.qZ-O+quH[-oDnh%r;ca-quH[-r;cd.quH^.kl?J=
rHSACpAk,:quH\@r;cb@q#LA=quH\@r;ceAqZ-S?qZ-S?oDni8r;ceAqZ-P>rW)nBrrE#urH\ABrBp8Y
r'UA^rBpM`r'U8[rBpJ_rBpM`rBpG^rBpG^rBp2WrBpM`rBpJ_!!)parW)maquH[_rW)m/p&P"&quH[-
r;ca-q#L@*quH[-r;cd.qZ-R,qZ-R,oDnn'rt520r=So,r"8o.r=Sr-r=Pq-aoMBcp&P#9quH\@r;ceA
q#L><quH\@r;ceAqu?]srH\8?rH\#8rH\>ArH\8?r-A8ArH\;@rH\ABrBp8Yr'UA^rBpM`rBpA\r'UA^
s$QfRr;cd`qZ-R^qZ-R^oDnhWr;cd`qZ-O]rW)maquH[_rW)m/p&P"&quH[-r;cd.quH]rr"8i,r=Su.
r=So,r=So,r=SZ%r=Su.r=So,r"8o.r=Sr-r=S&iNWB$'q#LBorH\8?r-A8ArH\2=r-A2?r-A8ArH\8?
rH\8?rH\#8rH\>ArH\5>rH\ABr-A5@s*=VErW)map&P%YqZ-O]rW)maq#L=[quHX^rW)maqZ-R^qZ-R^
oDnhWr;cd`q>gI]!!*$!r'UD_s$Q\ar=S`'r=So,r"8o.r=Si*r"8i,r"8o.r=So,r=So,r=SZ%r=Su.
!"o2Bq>gI+rW)j.r;cj0ScI.<rH\):rH\8?r-A8ArH\2=rH\8?r-A8ArH\8?rH\DCr;ceAoDni8r;ceA
q>gJ>rW)kAp&P%Yp&P%YqZ-O]rW)maq#L@\qZ-O]rVupcr^6P_rBpG^rBp2WrBpM`rBpD]rBpPar'U/X
r=S`'r=So,r"8o.r=Si*r=So,r"8o.r=So,r=So,r=SZ%r=Su.r=Sl+r=T#/r"7EYPlUc.p&P&:qZ-P>
rW)nBq#LA=qZ-P>rW)nBqZ-S?qZ-S?oDni8r;ceAq>gJ>r;c_?p]17[p&P%YqZ-O]rW)maq#L@\qZ-O]
rW)maqZ-R^qZ-R^oDnhWr;cd`q>gI]r;cd`s$QP]r=S`'r=So,r"8o.r=Si*r=So,r"8o.r=So,r=So,
r=SZ%r=Su.r=Su.rW)m/r;c^,P5s;:rrE"Cp&P&:qZ-P>rW)nBq#Ku2rW)nBqZ-S?qZ-S?oDni8r;ceA
q>gJ>rrE'!qK_l:rBp8YrBpG^r'UG`rBpA\njEBVrBpG^rBpG^rBp2WrBpM`s$QfRq>gI]r;c[]q#L@*
p&P%'qZ-O+rW)m/q#KstrW)m/qZ-R,qZ-R,q#L<mr=Su.r=Sl+r=Su.q@T\,_Z9X\p&P&:qZ-P>rW)nB
q#Ku2rW)tDs*=JArH\8?rH\#8rH\>ArH\5>rH\;@qK_o;rBp8YrBpG^r'UG`rBpA\r'U3GrW)maqZ-R^
qZ-R^oDnhWr;cd`q>gI]quHR\q>gI+p&P%'qZ-O+rW)s1rt5&,ne(j$r=So,r=So,r=SZ%r=Su.r=Sl+
r=Sr-q@ViiLB.9u!!)`nrH\8?r-A8ArH\2=np137rH\8?rH\8?rH\#8rH\>ArH\5>rH\8?rd"HfqZ-R^
p&P%YqZ-O]rW)maq#KtQrW)maqZ-R^qZ-R^oDnhWr;cd`quH`srBpG^qEt,[r=S`'r=So,r"8o.r=Si*
ne(j$r=So,r=So,r=SZ%rt58Cr;cd.q>gI+qZ-I)U]AO;rH\):rH\8?r-A8ArH\2=rH[u7rH\;@!!)tC
qZ-S?oDni8r;ceAq>gJ>q#L;;quH[_p&P%YqZ-O]rW)maq#L@\q#L9lrBpG^rBpG^rBp2WrBpM`rBpD]
rBpA\qa:8]r=S`'r=So,r"8o.r=Sr-rW)m/o)S_$qZ-R,qZ-R,oDnh%r;cd.q>gI+q#L:(i;el<rH\2=
rW)nBqZ-P>rW)nBq#LA=o)S`7qZ-S?qZ-S?oDni8r;ceAq>gJ>p]12:!!)uurBp8YrBpG^r'UG`rBpA\
rBp/VrBpG^rBpG^rBp2WrBpM`rBpD]rBgPbq#L:Zr;cd.p&P%'qZ-O+rW)m/q#L@*o)S_$qZ-R,qZ-R,
oDnh%r;Zg0rXnu,r=Sf)q[oG#d/a,jp&P&:qZ-P>rW)nBq#LA=o)S`7qZ-S?rrDutrH\#8rH\>ArH\5>
rH\,;r-A5@rBp8YrBpG^r'UG`rBpA\rBp/V!(6`QqZ-R^qZ-R^oDnhWr;cd`q>gI]pAk+Yr;cd.p&P%'
qZ-O+rW)m/q#L@*o)S_$qZ-R,qZ-R,oDnh%r;cd.q>gI+pAk+'gAmK=rH\):rH\8?r-A8ArH\2=rH\8?
r-A8ArH\8?rH\8?rH\#8rH\>ArH\5>rH\):r-A8ArBp8YrBpG^r'UG`rBpA\rBpG^r'UG`rBpG^rBpG^
rBp2WrBpM`rBpD]rBpA\rW)j`rW)m/p&P%'qZ-O+rW)m/q#L@*qZ-O+rW)m/qZ-R,qZ-R,oDnh%r;cd.
r;cfsr=S`'r"5=sg&V-QrH\):rH\8?r-A8ArH\2=r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\5>rH\DC
rrE(EqZ-S?rW)map&P%YqZ-O]rW)maq#L=[quHX^rW)maqZ-R^qZ-R^oDnhWr;cjbs$QV_rBpM`s$QY`
rBpPar=S`'r=So,r"8o.r=Si*r"8i,r"8o.r=So,r=So,r=Si*quH[-r;cd.q>gI+r;cj0qZ-R,XoQ?>
rH\):r-A2?r-A8ArH\2=r-A2?r-A8As*=WiqZ-S?qZ-S?oDni8r;ceAq>gJ>rrE"CqZ-S?rW)map&P"X
quHX^rW)maq#L=[quHX^rW)maqZ-R^qZ-R^oDnhWr;cd`q>gI]rrE!bqZ-R^rW)m/p&P"&quHX,rW)s1
rt5&,r"8i,r"8o.r=So,r=So,r=SZ%r=Su.r=Sl+r=T&0r=So,r=S;pLB.9u!!)`nr-A2?rH\>ArH\2=
r-A2?r-A8ArH\8?rH\8?rH\#8rH\>ArH\8?r-A;BrH\ABr;chBrW)map&P"XquH[_r;cd`q#L=[quHX^
rW)maqZ-R^qZ-R^oDnhWr;cd`qu?]sr'UJarBpD]r^6Ybr=S`'r"8i,r=Su.r=Si*r"8i,r"8o.r=So,
r=So,r=SZ%rt58Cr;cd.qZ-O+rrE!0q>gL,VZ=j>rH\&9rH\;@rH\>ArH\/<rH\;@rH\>ArH\;@!!)tC
qZ-S?oDni8r;ceAqZ-S?rW)kAquH\@rW)mao`4qXquH[_r;cd`p]17[quHaas$Q_brBpG^rBpG^rBp2W
rBpM`rBpG^rBpPar'UA^rBpPar=S]&r=Sr-r=Su.r=Sr-r;cd.quH[-r;cd.qZ-R,qZ-R,oDnh%r;cd.
qZ-R,rW)j.quH[-irG)>rH\2=r;ceAquH\@r;ceAp]18<quH\@r;ceAqZ-S?qZ-S?oDni8r;cb@quH\@
r;ceAquH\@rW)mao`4qXquH[_r;cd`p]17[quH[_r;cd`qZ-R^qZ-R^oDnhWr;ca_quH[_rrE'!rBpJ_
rBpPar=S]&r=Sr-r=Su.r=Sf)r=Sr-r=Su.r=So,r=So,r=SZ%r=Su.!"o/AquH[-r;cd.quH[-TE*@>
o6L?9r-A;Bqg&,?rH\/<qg&2Ar-A5@rH\8?rH\DCr;ceAoDni8r;c\>!!)nAr;c_?rrDtBrW)OWrrDsa
rrDp`r;cd`p]11YrrDsar;Zgbr^6P_rBpG^rBp2WrBpM`qEk5_qa:;^qa:A`r'UG`o+D!&r"8r/q[rc,
r=Sf)rXo,ArrDs/r;cd.qZ-R,qZ-R,oDnh%r;c[+!!)m.r;c^,rrDs/g]3T>o6L<8s*=BbquH\@pAjl3
r;ceAqZ-S?qZ-S?oDni8r;cJ8qZ-;7rW)mapI"o[p-\`XrBp;ZogAZXrBpG^rBpG^rBp2WrBpM`oL&KU
rBpBJrW)O%rW)X(quH[-pAjjur;cd.qZ-R,qZ-R,oDnh%r;cX*r"8f+ob!Slg&V-Qo6L97pj)`:rH\,;
p3HQ9rH\8?rH\8?rH\#8rH\>AoQgB8rW)\<r;cFVr;cU[qZ-R^pAjnSquH[_qZ-R^qZ-R^oDnhWr;cjb
p-\ZVpI"lZo+Cp$p_!B'r=Sc(p(@3&r=So,r=So,r=Si*quH[-r;cI%q>g7%XT66=o6L66qK_o;rH\&9
qK_o;s*=WiqZ-S?qZ-S?oDni8r;ceArrDqAp]1/9qZ-4TquHR\q>gI]o`+tZqa:2[rBpG^rBpG^rBp2W
rBpM`rBpSbqa:,YqEt,[o+Cm#q@WQ(rt58Co`4h#q>gI+qZ-R,qZ-R,oDnh%r;cd.rrDp.p]1.&k5^)6
RK3;3m/W%ErBpJ_JcPZJr=OtgJcOU,rHYCCc2df1\H'AEr=R*NJcMJErH[N*OoYGJo`0UE!"o2BK`H])
j8f.(UB&gErBmjj`W5rL_#T&eVuZdAhZ0&ErBouQM?*Ser;_ELg&R<:rH\#8KE2$>s$MG>oDnh%P5p17
ec>YoYlMfErBn@#\,cI>cN&OsRK3;3m/W%ErBpJ_JcPZJr=OtgJcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&g&Q^)JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcP]KrHYLFrH[Z.rH\AB
m/[)PXT8;enc8IcrBoiMr=Q.3r=S;pr=PS#^]==Y`rP9&rH[Z.rH[Z.rBo-9fDtk;l2^cMl2^bpjT*C&
r=S;pr=R]_KE2$ts*=PCr-A2?rHZ-XrH[Z.rH\,;oDnhWr;ca_quH[_^B"4"lMpnbrBoiMr=Su.r"8i,
r=QdEr=Sl+nGrM"Q2oV=mK!32r;cb@quH\@^B"4XnGrCcrH[Z.rBpM`r'UA^rBn="rBgPblN$lNl2^bp
r;ca-quH[-aT2&8r=S;pr=Q(1Z2jiKr;cb@quH\@k5a08rH[Z.rH[Z.rBpM`r'UA^rBp8YaoMB-l2^cM
l2^bpr;ca-quH[-^B"3El2^bpk5^)6o`4r9r;cb@quH\@^B"4Xl2^d.l2^cMr;ca_quH[_^B"4"q#Ksc
rBoiMr=Su.r"8i,r=QmHrW)m/l2^bpU]@q*rH\>Ar-A2?rH[<$huN_$l2^d.l2^cMr;ca_quH[_mf:`8
rBoiMrBoiMr=Su.r"8i,r=T#/_>sNHl2^bphuJ?/quH\@o)S`7^B"4Xl2^d.rW)<crBp/VrBn="rBp,U
q#L@\l2^bpo)S_$^B"3El2^bpSH-G*rH[u7rH[&rk5bI+l2^d.l2^cMo)S_VkQ'68rBoiMrBoiMr=SW$
r=Sc(aT28Ol2^bpf`708qg%u;s*=Wio)S`7joG=)p&Ou8p&P&:rrE"Cn,WE4rrE"Cp](:]r'U8[rBp/V
rBo]Ir'U/Xqa:&WrBpSbrBp&SrBgPb!!)sbp]11'q#L@*o)S_$joG;kp&Ot%p&P%'rrE!0q>g6ir=T&0
r=P=qg&V*PpNcW9rH\>Ar-A;Bom,p)pj)]9pj)Z8om-*.!."9`q>g7WqZ-R^r;ca_rrD^Zm/ZoKq>g:X
q#L(T!!)TjogAQUpC[9&r=Su.r"8r/ob$Qkp_!?&p_!B'rrD^(nc8=pWrU$;p3HN8rH\>Ar-A;Bom,s*
s*=BbquHG9qZ-86o)SE.qZ-=WqZ-R^r;ca_rrD^ZqZ-6gp-\`Xp-\]WoL&3MoL&KUp(@0%r=Su.r"8r/
rXno;mJuqmquHF&qZ-7#o)SCpk5^8;r-A-aquH\@r;cb@rrD_;mf<$+quHD8quHA7oDnW2rH\8?ogAWW
rBpM`r'UJaogA0JogAWWogAWWoL&ESquH=UqZ-:$quH[-r;ca-rrD^(mf<"mquHC%quHU+q@W?"o+@bu
b5hHcr;ceAquH\@r;cb@quH\@l2^a-rW)tDs*=PCr-A5@rH\>Ar-A5@r-@o7r-A8Aqg&)>r'UD_rBpJ_
rBpM`r'UA^rBp#RquHX^rW)mar;ca_r;cd`r;ca_r;ca_oDneVrW)g_quHX,r;cd.quH[-r;ca-quH[-
rW)<cr"8o.r=Su.r"8l-r=Su.r"8l-r"8Q$r"8o.q[q`dNr]-(quH\@!."MCrH\>Ar-A2?rH[Z.rH\;@
rH\ABrH\;@r-A8Ar-A2?rH\#8rH\8?rH\ABrrE!bquHX^r;cd`r;ca_quH[_l2^cMquH[_rW)maquHX^
rW)j`quH[_oDnnYs$QY`rBpJ_r=Sr-r"8l-r=Su.r"8i,r=S;pr=Sr-r=T#/r=Sr-r"8o.r"8i,r=SZ%
r=So,r=PS#dK'5kqZ-S?r;ceAr;cb@quH\@l2^d.quH\@rVuqDrd"A@rH\ABrH\8?rH\#8rH\8?rH\AB
!I4\D6i-l^6i@#`6i@#_6i6r_6g=[O6iTOO!<#:a!<#:^!<#:a!<#:^!<#:W!<#:^!<#:a!!,Fer=So,
r=Su.r=Su.r"8i,r=Sc(oDnh%quH[-rW)m/qZ-R,rW)m/qZ-R,oDnh%qZ-R,rVup1h#N`@rH\8?rH\>A
s*=Wir;cb@quH\@l2^d.qZ-V@rW)nBqZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#7b!;liq6i@#`6i@#_
6i6r_6g=[M6i-l_6iI)a6i-l^6iI)a6i-l^6hLHW6i6oa!<#:a!!,Fer=So,r=Su.r=Su.r"8i,r=S;p
r=So,rXo,0r=So,r=T#/r=So,r=Sl+quHX,qZ-R,rVup1RK2%A!!)tCqZ-S?r;ceAr;cb@quH\@l2^a-
qu?_BquH\@qZ-S?rW)nBqZ-S?o`4r9!."GArH\AB!I4\D6i-l^6i@#`6i@#_6i6r_6g=[L6i6oa6i6r_
6i-l^6iI)a6i-l^6N@,[!;o4]!<#:a!!,Fer=So,r=Su.r=Su.r"8i,r=S;pr"8i,!"o,/r=So,r=T#/
r=So,r=S]&r"8f+r=T#/!"lC7_uTa]qZ-S?r;ceAr;cb@quH\@l2^g/rd"5<rH\8?rH\ABrH\8?rH\&9
r-A/>rH\AB!I4\D6i-l^6i@#`6i@#_6i6r_6hUNQ!;f.X!<#:^!<#:a!<#:^!<#:X!;o4]!<#:a!!,Fe
r=So,r=Su.r=Su.r"8i,r=S;pq[rQ&r=So,r=T#/r=So,r=S]&r"8f+r=T#/!"nMsL]IC!rrDutrH\>A
rH\>Ar-A2?rH[W-qg%r:rH\8?rH\ABrH\8?rH\&9r-A/>rH\AB!I4\D6i-l^6i@#`6i@#_6i6r_6g4UJ
6hgZ[6i-l^6iI)a6i-l^6hp`\!;o4]!<#:a!!,Fer=So,r=Su.r=Su.r"8i,r=S8oq[rT'r=So,r=T#/
r=T#/rW)m/o`4n%qZ-R,rVup1VuY!@o6L97rH\>Ar-A2?rH[T,qg&2AqZ-55rW)nBqZ-S?o`4o8qZ-S?
rVutE!:rSV!<#:`!;o4^!<#:R!;Z]m6hp`R6iI)a6i-l^6hLHW6i-l^6iI&d6NH]ir;cd.r;ca-quH[-
rW)6aq[rW(o+Cs%r=So,r=S]&r"8f+r=T#/!"n8lNr\ft!."MCrH\>Ar-A2?rH[Q+qg&#<o6L<8rH\8?
rH\&9r-A/>rH\AB!I4\:6i@#`6i@#_6i6r_6g"IH6i$fS6iI)a6i-l^6hLHY6iTON!<#:a!!,Feo+Cp$
r=Su.r"8i,r=S2mq[rZ)o+Cs%r=So,r=S]&r"8f+r=T#/!"kn)dK&lar;ceAr;cb@quH\@joG:(qZ$VA
oQgE9rH\8?rH\&9r-A/>rH\AB!I4\:6i@#`6i@#_6i6r_6g+OM!;f.\!:rSW!<#:^!<#:X!;o4]!<#:a
!!,Feo+Cp$r=Su.r"8i,r=Sc(n,W=tqZ-4"rW)m/qZ-R,o`4n%qZ-R,rVup1h#N`@rH[u7s*=Wir;cb@
quH\@jT,1'quH\@oDni8qZ-S?o`4o8qZ-S?rVutE!<#7b!;$9i6i@#_6i6r_6fe=F6i6r_6hCBW6i-l^
6hLHW6i6oa!<#:a!!,Fer=SW$r=Su.r"8i,r=S,kq[r`+r=SZ%r=So,r=Sl+quHX,qZ-R,rVup1RK2%A
!!)tCo)S`7r;cb@quH\@j8f(&r;ceAoDni8qZ-S?o`4r9!."GArH\AB!I4\D6h:<V6i@#_6i6r_6f\7E
6i@#`6hCBW6i-l^6N@,[!;o4]!<#:a!!,Fer=SW$r=Su.r"8i,r=S)jq[rc,r=SZ%r=So,r=S]&r"8f+
r=T#/!"lC7_uTa]o)S`7r;cb@quH\@k5bG\qg&/@rH\#8rH\8?rH\&9r-A/>rH\AB!I4\D6h:<V6i@#_
6i6r_6hUNJ!;f._!<#:W!<#:^!<#:X!;o4]!<#:a!!,Fer=SW$r=Su.r"8i,r=S&iq[rf-r=SZ%r=So,
r=S]&r"8f+r=T#/!"nMsL]IC!rrDutrH\>ArH\>Ar-A2?rH[B&r-A8ArH\8?rH\ABrH\8?rH\&9r-A/>
rH\AB!I4\D6i-l^6i@#`6i@#_6i6r_6fJ+D6iI)a6i-l^6iI)a6i-l^6hp`\!;o4]!<#:a!!,Fer=So,
r=Su.r=Su.r"8i,r=S#hr"8o.r=So,r=T#/r=T#/rW)m/o`4n%qZ-R,rVup1VuY!@rH\8?rH\>ArH\>A
r-A2?rH[W-s*=JA!."QhrW)nBqZ-S?rW)nBqZ-S?o`4o8qZ-S?rVutE!<#:^!<#:`!<#:`!;o4^!<#:R
!;ccr6i-l^6iI)a6i-l^6iI)a6i-l^6hLHW6i-l^6iI&d6NI&sqZ-R,r;cd.r;ca-quH[-rW)9brt5,.
r=T#/r=So,r=T#/r=So,r=S]&r"8f+r=T#/!"n8lNr]-(qZ-V@!."MCrH\>Ar-A2?rH[]/rH\8?r-A;B
rH\8?rH\ABrH\8?rH\&9r-A/>rH\AB!I4\D6i-l^6i@#`6i@#_6i6r_6gFaN6i-l]6iR/b6i-l^6iI)a
6i-l^6hLHY6iTON!<#:a!!,Fer=So,r=Su.r=Su.r"8i,r=S>qr=So,r"8r/r=So,r=T#/r=So,r=S]&
r"8f+r=T#/!"kn)dK'5kqZ-S?r;ceAr;cb@quH\@lN$j.qZ-S?!WW4Grd"A@rH\ABrH\8?rH\#8rH\8?
rH\AB!I4\D6i-l^6i@#`6i@#_6i6r_6gFaO6iTON!<#:b!<#:^!<#:a!<#:^!<#:W!<#:^!<#:a!!,Fe
r=So,r=Su.r=Su.r"8i,r=Sc(o`4n%qZ-R,rrE!0qZ-R,rW)m/qZ-R,oDnh%qZ-R,rVup1h#N`@rH\8?
rH\>As*=Wir;cb@quH\@q>gJ>o`4r9qZ-S?rrE"CquHY?rW)kAquH\@oDni8qZ-S?rVutE!<#7b!;liq
6i@#`6i@#_6i6r_6i$f]6hLHX6i-l^6iR/b6i6r^6iI)`6i6r_6hCBW6i6oa!<#:a!!,Fer=So,r=Su.
r=Su.r"8i,r=Sl+r=S]&r=So,r=T&0r=Sr-r"8o.r"8i,r=Sl+qZ-R,qZ-R,rVup1RK2%A!!)qBr;cb@
r;ceAr;cb@quHY?qZ-S?o`4o8r;ceArW)kAr;cb@rW)kAr;cb@oDnl9s*=PCr-A2?r'UD_r'UD_rBpM`
r'UA^r'U>]rBp5Xr'UD_rBpPar'UD_r'UG`r'UD_r'LGao`4nWr;ca_quHX,r;ca-r;cd.r;ca-quHX,
qZ-R,o`4n%r;cd.rW)j.r;ca-rW)j.r;ca-oDne$r;ca-WrU$;om-H8rH\>Ar-A2?q0Dr>rH\&9rd"6`
r;cM9quHA7oDnK.qZ-:VquH[_r;ca_quHO[rW)mao`4VOr;cLXquH@VoDnJMqZ-:$quH[-r;ca-quHO)
rW)m/o`4Urr;cL&quH@$oDnIpk5^8;r-A-aquH\@r;cb@qZ-J<rW)nBoDnQ0r;cM9quHA7o)SQ2rH\8?
ogAWWrBpM`r'U>]qEt5^rBp2WogAZXogAWWoL&ESqZ-7UqZ-:$quH[-r;ca-qZ-I)rW)m/oDnOrr;cL&
quHU+q@W<!oF[l!aT2'\qZ-S?r;cb@qZ-J<rW)nBo)ST3s*=JApNcT8om--/oQg95pI"fXrBpM`r'U>]
qEt5^rBpD]q>g7WqZ-@Xq>g1Uo)SDMq>g7%qZ-R,r;ca-qZ-L*!"o21r=SW$pC[9&pC[6%ob$cqoF^!]
MZEX"rW)irrH\>Ar-A)<r-A8ArH[o5qg%o9qg%o9qfr/ArH[o5r-A;BrH\ABqZ-L\q#L@\r;ca_q#L=[
rW)manGrGRpAk(XpAk(X!!)sbnc/Xir'UJarBp>[q[rW(r=Su.r"8`)r"8o.r=SQ"q[rQ&q[rQ&q[if.
r=SQ"r"8r/r=PS#U&b1<j8bADr^68WKE2#a!"jh`JcOp5rHY(:f)Yb:YQ2`Er=QdEJcOL)d/a,j[K+/E
rBnO(ZN0q9e,Y(#PlUf/nGn:Dr^-YcJcPKErXk4lJcOF'!-tXGaT)<.])]DB!"m?RJcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcOL)JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&JcLB&
JcLB&JcLB&JcLB&JcLB&JcP3=rH[]/rHY^LhZ3UBlN$lN_>qp_r=S>qr=REWJcOL)f`:trlN$m/a8j?_
rBolNrBo0:])_dAlN$kqjoBu5SH/V6lMpp1rcsV+rBpA\o)S_VPQ:[_r=S>qr=Pe)JcPECr-@i5rH[]/
rHZ3ZjT,3Gnc8VUlN$lNciDVsr"8K"r=S>qr=RoeJcN:\r-@i5rH[]/rH\>AW;ui`nc8VUnc8LdrBmC]
r"8K"r=S>qr=PP"JcPZJr-@i5rH[]/rHYsSli?rNnc8VUlN$lNaT1,sr"8K"r=S>qr=RZ^JcNOcr-@i5
rH[]/rH\):YQ4Sgnc8VUlN$lNV#^E*nc8V#q>g'dr=P:pK)bmsrH[r6rH[]/rHY^Lo)S\Unc8VUlN$lN
_>rWsr"8K"r=S>qr=REWJcOL)m/['0nc8W6lN$m/a8k&sr'U#TrBolNrBo0:cN*kTnc8V#lN$kqjoBu5
YlO]Inc8W6lMpp1rct=?r'U#TrBpA\o)S_VV#^E*o`4skr=S>qr=Pe)L]IC!rrDutrH\DCom-62rH\2=
qK_o;rH\DCr-A#:qK_o;rH\ABrH\;@qK_f8p]17[qZ-R^rrD^Zp&P%Yq#L7Yq>gI]rrDsapAk%Wq>gI]
rW)maquHaar'TlPr=So,r=T&0ob$ltr=Si*q@WQ(r=T&0r"8Z'q@WQ(rXf,BrW)m/quHR*Q2o).rH\8?
rH\DCom-62rH\8?pNcW9q0Dpaq>g88qZ-S?!!)nArW)\<mf<;RqZ-R^rrD^Zp&P%YqZ-CY!(6V`ogAQU
pI"fXrBgPbqa:>_pI"BLr=So,r=T&0ob$ltr=So,pC[9&ob%$#pC[9&r=K#0q[rf-pCYjSNr]-(qZ-V@
!dObGom-62rH\;@om-H8oQg<6p3HQ9p3HW;p3H3/rrE!bqZ-R^rrD^Zp&P%YquHCWquH@VqZ-=WquHFX
rW)XZn,WD!qZ-R,rrD^(p&P%'quHC%quH@$qZ-=%quHI'!"o21p(<DedK'5kqZ-S?rrD_;p&P&:quHD8
quHA7rrE#uoQgB8p3HZ<qfr/Aqg%]3rBpG^rBpSbogAEQrBpJ_ogAWWoL&NVoL&QWp-\i[qa1>`qa9lR
r=So,r=T&0ob$ltr=Sr-rt4u;quH@$quH@$r;cO'rrDp.!!)m.c2a.1rH\8?rH\;@!."Ngnc8W6quH\@
r;cb@r;cb@r;cb@r;ceAr;cb@r;cY="9<^m!!)tCquH\@nGrMT!!)osrBpJ_r'U#TrBpJ_rBpM`r'UD_
r'UD_r'UD_rBpM`r'UD_q*P8b6ULhRrBpJ_rBpG^pAk.(qZ-R,quHX,nc8V#quH[-r;ca-r;ca-r;ca-
r;cd.r;ca-r;cX*"99#G!!)s0quH[-MZDH2!!)tCqZ-S?quHY?nc8W6r;cb@quH\@r;ceAqZ-S?r;ceA
quH\@r;c_?q>gJ>quH\@nGrMTqZ-R^quHX^nc8VUr;ca_quH[_r;cd`qZ-R^r;cd`quH[_r;c^^quH`s
rBpJ_rBp)Tr=So,r=Sr-r"8K"r=Su.r"8i,r=Su.r=So,r=Su.r=Sr-r=Su.q[rZ)r=Sr-r=P\&_uTa]
qZ-S?quHY?nc8W6r;ceAqZ-S?r;ZhCrd"A@rH\ABr-A2?rH\>Ar-A,=r-A2?rH[o5rBpG^rBpJ_r'U#T
rBpM`rBpG^rBpM`rBpG^rBpPar'UA^rBpM`r'U;\r'UA^rBp)Tr=So,r=Sr-r"8T%rW)m/r;cd.qZ-R,
r;cd.qZ-R,rW)j.quH[-r;ca-q>gF*quH[-g]3-1rH\DCr;ceAquHY?nc8W6r;ceAqZ-S?r;ceAqZ-S?
rW)nBqZ-S?r;ceAq#L><quH\@q>g9jrBpG^rBpJ_r'U#TrBpM`rBpG^rBpM`rBpG^rBpParBpG^rBpM`
rBpA\r'LGar;cd`nGrM"qZ-R,quHX,nc8V#r;cd.qZ-R,r;cd.qZ-R,rW)m/qZ-R,r;cg/!"o#,r"8i,
r=PFtb5hKdqZ-S?quHY?nc8W6r;ceAqZ-S?r;ceAr;citrH\ABrH\8?r-A8ArH\2=rH\8?rH[o5rBpG^
rBpJ_r'U#TrBpM`rBpG^!(6`Qr;cd`qZ-R^rW)maqZ-O]rW)maq#L@\qZ-R^nGrM"qZ-R,quHX,nc8V#
r;cd.qZ-R,r;cd.qZ-R,rW)m/qZ-O+rW)m/q#L@*qZ-R,eGtX1rH\8?rcnKhquHY?nc8W6o)S`7r;ceA
qZ-S?rW)nBqZ-P>rW)nBq#LA=qZ-P>oDnmkrBpG^rBpJ_r'U#TrBp/VrBpM`rBpG^rBpParBpG^r'UG`
rBpA\rBpG^r^6]Qnc8V#qZ-R,quHX,nc8V#o)S_$r;cd.qZ-R,rW)m/qZ-O+rW)m/qZ-Wrr=So,r"5+m
dK'5kqZ-S?quHY?nc8W6oDnf7r;ceAqZ-S?!!*$!rH\8?r-A8ArH\2=rH\8?r-@i5rBpG^rBpJ_r'U#T
rBp2Wr'UD_rBpG^rBpParBpG^r'UG`rBpA\rBpG^r'U#Tr=So,r=Sr-r"8K"r=Sl+qZ-O+r;cd.qZ-R,
rW)m/qZ-O+rW)m/q#L@*qZ-O+cN'72rH\8?rH\;@!."Ngnc8W6p&Or7r;ceAqZ-S?rW)nBqZ-P>rW)nB
q#Ku2nc8VU!!)osrBpJ_r'U#TrBp8YqEt2]rBpG^rBpParBpG^r'UG`rBpA\njE<TpAk.(qZ-R,quHX,
nc8V#p&Oq$r;cd.qZ-R,rW)m/qZ-O+rW)m/q#L=)pCW>ag&M*QrH\8?rH\;@r-@i5rH\/<pj)f<rH\8?
rH\ABrH\8?r-A8ArH\2=o6C=]nc8VUqZ-R^quHX^nc8VUp]1(Vr;cd`qZ-R^rW)maqZ-O]rW)maq>^Kq
njDsJr=So,r=Sr-r"8K"r=Sf)p_!H)r=So,r=T#/r=So,r=K#ArW)m/q#KstT`E"2rH\8?rH\;@r-@i5
rH\2=pNc];!."QhqZ-S?rW)nBqZ-P>rW)nBq#Ku2nc8VUqZ-R^quHX^nc8VUq#L.Vr;cd`qZ-R^rW)ma
qZ-O]rW)maq#KtQnc8V#qZ-R,quHX,o`4skr=Si*pC[?(r=So,r=T#/r=So,r"8o.r=Si*ne'[XL]IC!
rrDutrH\;@r-@i5rH\8?qKW&@rH\>ArH\8?rH\ABrH\8?r-A8ArH\2=rH[l4p]17[qZ-R^quHX^nc8VU
qZ-I[!!)sbr;cd`qZ-R^rW)maqZ-O]rW)maq#L@\rrD9`r=So,r=Sr-r"8K"r=So,q@N]-r=Su.r=So,
r=T#/r=So,r"8o.rXf,Bq#L@*Nr[?'rH\8?rH\;@r-@i5rH\;@qg&/@rH\>ArH\>ArrE"CrW)nBqZ-P>
rW)nBq#LA=k5bHJqZ-R^quHX^nc8VUquHU]rVupcr^6VarBpG^rBpParBpG^r'UG`rBpA\rBo`Jr=So,
r=Sr-r"8K"r=Sr-q[rf-r=Su.r=So,r=T#/r=So,r"8o.r=Si*r=R3QNr]-(qZ-V@!."JBr-@i5rH\;@
r-A5@rH\>ArH\8?rH\ABrH\8?r-A8ArH\2=rH[W-rrE!bqZ-R^quHX^nc8VUquHX^r;cd`r;cd`qZ-R^
rW)maqZ-O]rW)maq#L@\p]0d`r=So,r=Sr-r"8K"r=Sr-r"8l-r=Su.r=So,r=T#/r=So,r"8o.r=So,
rrE!0L]Gj'rH\8?rH\;@r-@i5rH\>Ar-A2?rH\>ArH\8?rHSACrrE"CqZ-P>rW)nBq#LA=qZ-P>nc8VU
qZ-R^quHX^nc8VUr;ca_quH[_r;cd`qZ-R^rW)maqZ-O]rW)maq#L@\qZ-O]nc8V#qZ-R,quHX,nc8V#
r;cg/rt5//r=Su.r=So,r=T#/r=So,r"8o.r=Si*r=So,r"76TQ2pl/qZ-S?qu?_BrH[r6rH\>ArH\8?
rH\>ArH\8?rH\ABrH\8?r-A8ArH\2=r-A2?r-@i5rBgPbquH[_quHX^nc8VUr;cd`qZ-R^r;cd`qZ-R^
rW)maqZ-O]rW)maq#L=[quHX^quHHkr=So,r=Sr-r"8K"r=Su.r=So,r=Su.r=So,r=T#/r=So,r"8o.
r=Si*r"8i,r"4kfg&M*QrH\8?rH\;@r-@i5rH\>ArH\8?rH\>ArH\8?rH\ABr-A2?rH\>ArH\2=r-A2?
rHSBgnc8VUqZ-R^quHX^nc8VUr;cd`qZ-R^r;cd`qZ-R^rW)j`quH[_r;cd`q>^Kqr'UA^r'U#Tr=So,
r=Sr-r"8K"r=Su.r=So,r=Su.r=So,r=T#/r"8i,r=Su.r=Si*r"8i,r"5V&_uTa]qZ-S?quHY?nc8W6
r;ceAqZ-S?r;ZhCrd"A@rH\ABr-A2?rH\>ArH\2=r-A2?rH[o5rBpG^rBpJ_r'U#TrBpM`rBpG^rBpM`
rBpG^rBpPar'UA^rBpM`rBpA\r'UA^rBp)Tr=So,r=Sr-r"8T%rW)m/r;cd.qZ-R,r;cd.qZ-R,rW)j.
quH[-r;cd.q#L=)quH[-g]3-1rH\DCrW)kAquHY?nc8W6r;ceAquHY?r;ceAquHY?r;ceAquH\@r;ceA
p]18<quH\@q>g9jrBpJ_r'UA^r'U#TrBpM`rBpJ_r'UD_rBpJ_r'UD_rBpJ_rBpM`rBp>[rBgPbr;cd`
nGrM"quHX,quHX,nc8V#r;cd.quHX,r;cd.quHX,r;cd.quH[-r;cg/!"nu+r=Sr-r=PFtb5hHcrW)h@
quHY?nc8W6r;c_?!!)k@r;cb@rVuour-A5@r-A8Ar-A5@rH\/<r-A8Ar-@f4r'UG`qa:8]r'U#TrBpM`
qa1>`rBpQOr;ca_r;ca_r;ca_rW)j`r;cd`p]14ZrW)j`nGrJ!rW)g-quHX,nc8V#r;c^,!!)j-r;ca-
r;ca-r;ca-rW)j.r;cd.p]14(rW)j.eGtX1oQ^F^qZ-G;p&P&:r;cG7r;cJ8quHA7r;ceAp]0r3o)Sdj
o0`BTq*XiUrBpM`o0`HVoL&NVoL&QWrBp>[og8^HnGr.mqZ-F(p&P%'r;cF$r;cI%quH@$r;cd.qZ-Tq
oF[5dd/`faqZ-G;p&P&:quHA7r;cJ8rrDutp3HQ9rH\,;p3H*,oL&KUq*XiUrBpJ_oL&QWoL&KUp-\`X
rBp;Zp-\9KoF^s#q%<<#r=Sr-rt4r:r;cI%qZ-=%quH[-pAjn!blF"/q0;r?rH\8?!!)k@p&P&:qZ-J<
!!)tCr;cM9q#L28qZ-S?p&Ol5mK!2QrBgPbrBpD]qEsrVrBpG^qEk5_rBpM`ogANTpd=oYrBp8Ypd=iW
p&On#!!)s0q>g@(p&P%'qZ-I)!!)s0r;cL&q#L1%qZ-R,p&P+)q@SPag&V'OrH[r6r-@Q-r-@f4rH\&9
r-@K+r-A5@mK!2Qnc8STl2^`LnGrMTo`4nWmK!+ar'T`Lr=ST#r"82or"8H!r=S]&r"8l-li?qqS,e-@
JcLB&JcLW-J,~>

%%EndBinary
grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (cartoon_banners_1_05.eps)
%%CreationDate: 12/19/2018 11:21 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9?)dd[.Ef@Bn_0!r!MeGB<S`D0mb<[c=CTdDLU&s>(En'gmeq<dXp8@%?YVCa/%G9Y+;bL4UJG"_DCK&>eC/(OKahtYMi
%DV9->gp1?k:<nPhc*D9F>$-#P4c%h*p!gYAg(m\so;6-P3@D!ZR_^VO,C"(1;=7a[p!/#e;3'At6DN+F[9%C&?XZ+,)kOm60_Z`j
%eJeJKr*!4:J8;elo/N]"U7foF$p-I"YL#T6QnEj:L9$sJr6C@Af#tI=-/+.?UWV^FS8Zjoqj;gP7\("h%_\kJ;.94:[LCDQ:<D7F
%CMPDIZ#!Ka%Jlg71&0`XWaXVl`D<,"`b4&5521erT*B\3T5@eDT-jOfq#/A\m)@_d(qbW$1Mhc9C828X!!lC:iFK).SVGs(LEVgR
%C;JNIUDu1sPhU!5OZ$KVjV59CT]Ch*;P!T5.*F+>-.Vk,iHHlOk7#qfrdGIVcr^HEaVcFqf(]D`?O(gdOas69Bf2?G@I'Y9"hqe<
%NhX^//aPlaUGTJY@ojS7P?77r5mPBJ^`_u1>Li;Q8Tejmbc>u^Wk!E*U/"_3c+D)?#sUmDX3j-^\X-/qM-?G:]N44"qHmV`9*$4b
%$9rpbX[T?NokF_.eEE:C#'[ORM/&!QpuOdn6r&pP:@Gj8;:mpf3Zq1W=r55&-0N4[]]rhkKYO6^>;YObmkpm:;<'5/\nmeCTWMg?
%GuIeGS<hd/S8.A%c8A>4$`X7-R`m%O$Z$>X'E+#KmXpJb[AmliqT?)GXCGro(S?[f[?=(AXlUPr7Mt5-l/*6U*,m#fV\@Sa-E;5o
%fM,OIPl0qmn)NWEH[/L"X%5_)aZ8jG5ku#-;[bbH9$Yt/'o(s;3WE09,[5hdY2d-*iOeF8H_DRBl8jCZ3hFlE4KIf7C_4tTlnZc$
%C6jRg/.8L](07cC+:sOD0%P#JXQ.0U/pCU&k.4Y(^Yq7T.ho3kTn&IF$@&FE^cFc3B7n"*kjfk3$:2H[@R)`2)+:Q%Fqu_GkB.dt
%`t,8+Gi:_b6bEQ1ll74'moTgW_KWk&OFphtGi:a`6DX)kRps<F9d<R2::T=#4H+MnYDf=e!j%-TiB,Ts!^%f!M1B6'B!c*E_KU/P
%_k&$e^h;$!rX!g(<2'_H@5Yt8hm"UgO:62RNXm+Y_.ne$(hlGXFtr!4n+[8&A:/pr*-aT!moU$=`-4,,N*R9?)$JTihus0gE0;&!
%"sTg*<b'&]ZshTC":05V)XEg!/V]6b&ML5<#RVVA"R0r]3BN3[i]C1N]T+s,]!.+_*U=i"E4OnI+\@W?X:N>8Jt3(o#ehPA)9X_2
%&4.S\Q;O9ja(WeFB#GqP`P;cW)#.3-oZrt=%C#Hj`IVZRauGlM4X1MR,+o`^j[Asu2/p*fhF,WlYnB')S1\=piC(7>i?f`Da_2&c
%-_l5H$$+JU#tY90!bB\7CRAD-WX?H/PH.<@^GLq@8j:qO0\GjTPJ,mpdq"5s:\M)2p,i(\0?7M9*@L:2i@iMeVijjLnpU3nq.).g
%]NA^"P#(d$Q.YQdPJ*4U`Uu?R+hk;QA\Z2;p5(bD7_pd,a1&$Yr!\IK6^RZg5EY?>a=[mY.f;Wq1t[@01]a4fNQZX_!m&lVRrfr/
%+4H^h$p_6,D\&;XI^uXZ"*dZM*d7?UO:-Nce"C;OPRiY/6(n#VVSRiWLQci\n-)V!A.0pWElTiL"bgq`(W09!fWZU]D0B;<nZ[pZ
%*9g'd/6a.G>er\TFQh";#Y`YrY)aBu,m6h[i_&^hF'1rNA`"NW1#Wr6+@*jgY+m%<<(/tloLjWFNWIB6Q!G*.L5Ll1)g"6poGkb$
%&alANCsTTH!aoa4?;:9L$QRXf4SUQ'/gq6;>a&7mqnj'@jTThLo^%_WBS!>=V;u*=&(L_i_5%RA"'DF1?uJldK8N*l"he$1n6U^`
%H4PmF^d3&FSd6V8$:#Q-B6j`b7tBgbRLFD(oktTOF;KKsdbq$55Z=V?fVaM#"4Hb&(JK`H)$hbo7FZkMJ9>!>*^RaD*CHTG6k^SY
%=2mlG;4itHN!V?("meQj"sLt/q,_AAs7o(lgEP["Up=GCfDqg@p%c*R5SE!;:4IG<V\O;L/[ts))l1=#OS^l5Tonf$UWJokI.EE/
%&IS;W@/sRGA.?lEV(qBV0LUEZN0MDT\ckVb"V5#1W)5TN@t8A_"G%n5S7=UU5$^JY06=?ne'fn#M-M06'$^d8'NW`a*>;k37L:pW
%#1(,0!8>8=4@>@R$?4.Al7Q,RJH6&[/#EJdW,r3bjHq]CG"GatLZG!Ofg$)\/7aqGJd-WIM%D/$!:$nh'sUp."rc*mGPje;];CV'
%&85!4mP8oI@sX"9oQG2LJHjbs!IZaK`Ge<9LrZ22?-s4P5S/ur4k>2D4%)F/MaW:^1CF[Yn+_rlR4a+aYr!XU63kP^TEp7+B-#5?
%i#+f4)HRO]&dpuo@WEW834CsT*M\b"d($Ecpk^g4A;N:u48s#u`je@U:P9,](!a<1_]97:(4bIZ!&T<sM\R"jORk[j%KCVi[A\:(
%@*'e"0!q2t3"P[:G/i`T,1dte'MBFmgk8MV0Df>t!Ha*q6p.Df`Q$R8V2,tOPD=Rls+$n2=0Nrl_I;T&j#EJ/GXcnSOqT.9qFEAP
%-R>EV_ag'R&>9:_FXA@n3/A4-3te+fE'T0h,u[ipYt+G.3F1Z@<fM[%E*`#P1G-u(:S6Y=[hr"NmqbHiU6L9G#:TbAbJ_7n_.TF6
%4J949:G=,NSEJQSPg)U,kr4R2;$]^u9o)5kL6J!['K(=#l5::F583!g1+kO!6?Q_8X,7QM=P+]7$)G3rrlKYA*n,83/2eJ8lGkVJ
%Z]+'-$jshd1p+p"3FM&1+k](#GI_q6c]aXaQt:L%.ZX"14O2]0*5O(X^jG=n7[45`_;Q#^AFbS&`-IQZ.\[Mh)^GZo.XpF8?)H5A
%<_jfM^R<(h[_X'F'ERW@E*Yb\KXFKLAh1g5L[K<t%3j1B0pY"u].B!mMj1nWK"*UKpO'P8hOU:c53=oW'90HGJHKl?grIXGCd=D0
%;H*us0sHO/2'>U1_1Ys%L/JQu5FKGMN#fG@1'f\p:HJ&r,'TW:o#UGc-^oluKMLq.\I3ur8:*fkKTW6+0hA)WR15AAT.qi\*_=.8
%g4ijP_0'SXa99q00\/KCm$"qRnpe/ZQ4-^/\E"e-Z*82Hi.D6A24IHp4=aPPO`$jV4Vb\8]fr:j0<**IUR3r*Sk9q1B#p1pQ#n$]
%G]LI(6r=BbYp<ZalZ!SpJjO4iO[XusQOK/S"Ou4Y.ra[LL?$>q'U*<?FH1Y1&0#<97%bq`+c;CQ%9N,B*HHUb=qsD[XUDHX+QWG:
%0Lq.JIMBTA[jISO1l4#!_E'%<D,=&rD]<Y.csucc)!/jc-g(Uq$fE7pa%[Gg?jIBBW,7:$'=2M6-W;+D_'!Yg-V#a'4:K"Ga'#[O
%T_$4_16T-bU,iB$3II_A(;J:I*+33nU(TisS&P.R[eiH;,bGotVLj[!LQ=6N6@`r'rhHrXNgZ2negYo2!&8XJ14>`(djRU/b:$>d
%'a2B=#Qfm.NA1ei$lVl$/DtMQ:Qu.!1(k'_,iXC5:n26/cP5IWkoJeDFoXll;*h^"S.bIPklVMKU#9m4+l^ON*/8>R-^W"Z9SB:3
%#_C$oSVkY?AdlYK22*J0/n*O^@&HLc5Pk+,@k8TZQ^gq$SjWf:b<N4r)I$<%1kJDQE?(Q!8Mo<)4\n?Qk9]be_)X#c'-,%i8],6V
%Kr4Ok(h.Fa%6B*pggH8$0FEZMkK8ZE[j%_c^g^J%TSZ%SRV%4_"%`uJm)-bZQf056TE(4'!CDdh9Zqfok.*S''a'r$4rE:H!ZJpD
%#5oqq<+_:g%]Q'5=fuK9iWs.+%#NQZLF2K-NEoLT=\6=ip-;Tt-mf[5-(gj?"ks<tQ*X!IM?u)_`]iqV'h\Z6r:9JE1C7m=L`R%I
%$CO\XYS-c=XAphhk5OsgOX$A@MDm[Mi6!N?OY#)C]qc@a5N2[eCj88*>qk+Z(D&!4#+T8PrM/_Md8)k7I-d$dJ:m02/r.Yn_70sR
%/bVcM!:m#(J9RBf@CV.AnQRY,AX6rR13+a8pSHsgG[$re$+WFAkK!`2,@b:KcqYQLp2Vr--s;('$:o]=I$.jW^+s=tk>E%6R2<D2
%3=JdhUa#^I.'V8(f']b<PNRr\T)eKaG2f<-,,2Y_OBI*qVL&*&noa_-jJ5X=K@\S)_+(2uC<UWo6?nTOM]JNU6M5fu*4;UOpY5np
%%&O8*2R5\4?Tc1slc#G+>X)Xf+V]Pppe.51Ra<K6`fePUSA[8`N:I'BK;4t/5PUEj5Fu<9-[ED>C]T8#gh:k&Ymn*E(e#Xo1'V5+
%L=40"Z`oGEHg,`V-`293Ldmn]<o]Pp(7E#"6#Ig2*m$;h.E]L[6eI->dt^dd:4'3pdWP+(C;:hA5V^(OhdgGXh\JiW$I0@F?OMid
%SD])7L"IrNrDo]E39+Y8+*?p)l?&N)g#OPBE;Z^:(KB][;sF"X=6uGu]O1!Aac0>rgYAm&2K%DUoI>ia.(<-W7lb`J7qWq*(-h,b
%nl[nop2=0-F\@F<%K>=r!WNoT1Z?fkW<'M@ZP%u6SB$"ZD*AleoAN-f.A-W;hlM[llMYR!mPJ+ts$i:/hT:!:6%*Nh5:ZQN^@7Kr
%r>KY3eF7jGSM4l/6;9'hn@&_E9`ZZL*VYm(\=aVG`2LJZoM^-L\\8oO![3^24p,.JGRuK38RO>S7)\"S^o&J,Drb#)V>AN:enAOm
%XP#-)m+9+#fTHI3p\V]5(B\Yo]q5sg"5!krJn5XAM!dUU#Y<HjT*aYYeS`5P<Ia]K`7PFFWD$TOSb&@YMs?T$T2S7ffnDg/r%pij
%,esn?`-TQOPJ8_G)RX>W16Fs\9m;3)8/U.1\?mY=aK-ic9!XSC"@Ha^d5<8B:ihJP;6(V9JN+SGR&M3Z_cE[=Y!n,\g79W*$PpT_
%Xa8P*S*/=Bc>Rj[kII?WU\5MfX[rpKQqj"?L;A"e(`-1+,j/;-@4DRdD&Of??31q:c,`SLW)_`U1TpS4QtgrAi%0GAP)T2BCqNf(
%!VC;!-,/[5nfB_I[`0Ui@usT@F#8X;[5)`&0+t;C#YDk[Dk"Rp7Y`-4oTCBI)TS6B"LcZc)FG-@k?Zq40Y*S58sLn$1dd5`a?#+V
%K]'B-<):M9,ol-tC:s[*3UBd.&TcCM1cYtQof4IgBe^mXbdFdZa(Qh0+!qPda5C=Jrq#^Om9<W:YKQq<7OtQ>_*)-+:i(h=ScRAN
%6eA]D`jY\P)Nu7qOg+oqgVVJuphttR2QW(<j]'+t&H6^&3@1Tdr6"D2T5NOi]7%jO5ma's<F"))T]iNZ`Iq\dZ!GCm?-i3"Jm3n+
%JeE<cVaAe(kYM\DTIhQMbO4<L="'I$07"omJZh=9TkM1.)c05cU,s$Kmp];SpBrsaaq+ECTG1?R)AF3L;(uqG.TcinMM&CITNQXW
%$`*p%4-cODe;AS"J8c<_"iW)T!30+R-J?&c,/dNkD`oIqW?l@R/oG%dpj5nd.`na4$FEn\BWqX3+)o:h;1"2?Mb\41*-R5Vqt;VW
%!-)r`%oL!LpdNRj_lgp3/1FCp-lNejn5\Z_Ybl61%:`qcB^%3gWi*?-N+EUJoO3,Q(hXf-gOui`JI>FY!NmgO#R)%lcZ'uGYoSac
%P.IChhl)QEirlP0OOL[%gU/'[8]s#C90n9dWi]BS<<ABlQ4N?@>)m/uQ=X6S"TiG<Q=:&1#uE9_?Ma@I?oc97:!5@f_ZXO]W[>[$
%7L9?"!2f::/Kok'@Mu%O(a.UgC++D$Q[k/$h$6u&`@/''K3!k&9Q[BJ(I'NY>[46fEIfjlCgO3QQuOk?U;nR*WGtduEr2.@`2+07
%KM;ennYP6a`Pj%j"i8$>#7P<s_JBHBq>eSU!!*1mLk-QqJPlhg:,t'=ZE0)gMF*;;TOaBs^e-:/[r7O^n0OW]LO]DD!KZ2Npd3j/
%M&2:1O\]iR?0#MVB:VSQBIJ,S"6G-X$,5'Z-'U'I4d8EDOb-1!#uTi)E)b0d$L._^U5G\(Qhc<<O]sg=>D0HmCo.7a12:dN+IsA2
%&-O<m5]JZS&P,BDN>!6i*(??X1QFF6IsbmV_70VnL2dbKa>f*fN96#&"qC';5X]]133o1ZhM))Z$K_SN"$Bfg!gS]E\D+e6#:@%r
%>;T!=!]$I#FI40u2Fr`2E`9mWYl\,17);d[K#$-Mi&&/5?pX2fW%:1D",@.J$qiBL5ZTIu=^%Ud"Vkq&.1)U)/K2t_CX&X*TI"=\
%gX1#(1pmDM!NsEC/!6r1aAS\55T=.,NOXBEoLK#M"'>h;*K8W+i-d9#.Zd(aZD'4l,4'k"gB8@1Z4+r8YS(mo_$[L_3k#f*9]@@V
%/;D,d^!6?]hLQ'*JYh6N`7IO3fRe9sMiDqV5`:q!K;/@PJ0(XHM`<'kW2;R)d'>p*d3*j>Je<-ESX61)E#)jB_(qLk!S.R%_M:E5
%%379/!Ha_=S>641q(N?qBG#qTJZTj+_uV"L.?7je\h`=MRf>%Urj5+&OaqhP=;'.Nb(\><^l=aY0a0>kM4tT^`ocP5<]FJB%5OiM
%XE_8?$-4q>;sMEd7U7F96k,h613"X0XH%s#;C/.RE-;qQWBb6GaR:8V-<]AQls\,#_1A"KEdi*[bjqF06K^n5KJi"'ZLJ>cef_\?
%=q"n(1=j<I1P78Q2Da(2C^\/*9Xc_4b^A`tRZ>5n3%+i:`0hJZL7FZP@Eb-"(C$FuFCE[e=Vlf5S-(V9Z$Bsd*[dGMJS-<9(jT`U
%KqW.V?5S%2gk0hgguJj<ccj*Wr*]@ml.Y(GA$ZBA/(J_V'seZ;J'bGhWmrEW=s3L\PcMf(+f\RuPbCmQ'c!c9l;3gHW_;Wa!,bVq
%.n#Z7c=W]t/0&7RG*U0H-9%>A_gj7)E/ocJQuhW:N\MtENB+qQfGnp-IE<4!*+@M("rNa99[4e`.NgP")DLgo(jup-$\?Ba8c^mV
%.c-g!LV\Xp[P9*/VG*IaL`)Gi"%LHlEJ:b-PV_!en@YX7@,b@(`H;k8^Xt@K3A"kn3Rc3iOB^?GY)kjHZW?u^_LX62>RRSlWiCmk
%/5(VW#JR,H-rA^j^h$l[SDh=BDGE"Z.NFX[q9tWH4CAmU!Z<stdA[0'(uhJl#8SGYC%+Q8/]Dl=XZUu^l4Q4/g(M9_(R+&_7&SWY
%Z+Bd=N``!kSqrZ2;c9JdOYYOUWDKHSIAScrR"n*n=>9/OO\_+0%J3jEZJHoW;`XP;,t]t`;sI:+`JH(.76RRt8P,(k"R-%XK<!<C
%Kns^YW^2\FT2"WF;+H2k6g'uh*`IB`p6aiLC<n)r&RV2/8b%As_nsr2U&]lSA4dE`TFG1/U^3A<e3OhLTF_iX,8NDt,Vij!O;n;k
%\4;F$7&2%t2lX:k>#]`/,Q)H<KD3A@L#EUQ'o2^5S,;rS!%Co(<V2lW%4J1l[$Z:k=\>2G&6T"J2[dErs)d>Z+8>M?!'iF-4:e)X
%f`7R)1W`M-W!t:mm-a?E/LnX5OkcRZ+;F6>iqOe(QRTI*8_d<2-,Nq,iRVslLAZ4*>02aIpB=9[jL0$b+2%i14D#VHB.f$G(7B)B
%+@"R-?eQf_F==H!\QkkC,o5\&\XGK?4H!2@BgnH_H)0G>flae,A<R_6_VufhdGlF&I>XaI^HjIb.kE0EHq2:29#^6J?=2Y^J=GZo
%'PDe*SG.4iGhEn*G`+&M$pt'!&r[hd:B7]#K7m_cNuA'>;\EK,_b8iA7bK8)1)%#61(oHKl9gN4/^TjpY[`7)ef(J^F>RuSSIb'm
%!hTZdQ/ZS3mB=?s5T_4e;D@;7ZH1bYd4e#?`!JKD_Nkm5@k:nRcD,&TiR+l$Kaf`*V-;r*;m8:'nT!]Uj\E'_]XZ21Vb\@,O>O4M
%TG3.d5uLhS&/VIP)!"R5",]+M8C8@O`PODH^9K=;*Ye#c1EY;3#j$)&g#o)$a_!6:8mf0_ie[en`8BV3F!2l:^knC'SWgE:(^cjB
%n5@A@SpjE\TJ^a."9C(E[?K)B:H\D[_TDC%-><]6iK,=_%8r`D:H4.uJL`%-@q3=g@/Zrh2@4\*;E.5VgJUq:VhIFi]5^H1'fe!R
%Pg[I6+D-<rgMsN$NDmhn+>Tj2Q;ifB0med8T\+:9(/qt@cM/$jnJ[Le"H%bIomuDE!2FK&Un:;Z53?==+EV%k4cN?ckc.aLb$uk_
%T-`mGkm8b@LX$IF%!%R`:allW(Q[@N!Xo1*+-;(O_>-DnarlJ`,59;)7h(tYP,89i=U?*0;^($$6-ukt"tWSIKH/DMCcr4W,okbS
%W@!=^Ik$MN&Kl]MC5_(ORqrj==A39@.!F^o6&K%b;ILK_Yq3")U_XVuHlE`^?C)TX-GtO>N_@71EHr>A7#`-V,;u!`*4Qkt<_C#0
%0(2BCd>r?_Jp!nuAqd51==8nKBB"'5(d5k).i'Y^U=E3=/9#N!30,H79qFOMH/cKX;s(6I/8&[;PpaY2;JM_u`A'^`:(MR!'QV9P
%;B">Q'&^@^Jr/hlid?Sf&d:IlTeu1\"``*a\6TRTIDcR:G0<BM"[C5enmZgdjqJIHV)YBk_]]U'-$^dqG-!6DCWM<;.<;&2:Qup0
%W=W^24NRo8j,B0>B:X-na+\g=$HkYbF9Gjr0Z@/PfdNJ*Uc^inN'V;efZW?pi.V<+bF?#BUW,_7`=/Q*<e/0'!lK9[Q<>&$7bV(l
%H.&gSi%Mk-/P`Cd&q=PJ)1OmEiP:K&NB;.GcK;V)HAf;(B>h:N'!9)ik/Fn<XKFnt*<h/QaCG&>,g0MQ1[>OsVmBX>cEn;;;fU.i
%hFj"fGIYpR\^&X6:F$1+fR/hqpX2)Rf!:J]S).3q?(f0b?N<cG9dSAsggZ+XaESgh6:Sm&n&/fSaGoYrgWX]YpR]/iV^4^chNi(t
%UOOoE/P2*/]+?WEInB,hH&dBZr.PooFJ7dT\>#!79"NADmj(m^dZpXgBfW7/UuKSZp9",%Ln!57i^i=[UmV(?:m)0^$mr?[,jA,S
%)4F5*8J7^@!K*ZaM,/i'4%5kWlon3X3g@FU$ni<cV]cdT@5g73hR/Et06F>CF]V6^'bp<OP:C'LJ%*Ca`s62nI_Yf7(43n$BX'44
%kUXs*+qjHEJJQ4KZ`f=N2b?d*5[+Kml/@&Y`s"CXVcE5mQu0c$=e=nH>R^/*-ZO0ic;,c;-#%bfB/'Q],j(q64QC)4EC6PPEAeF!
%F-65XiTN7:apU5W`8_'bErq[Ci(/uCs(bm8[p!7C0coeqg$jdYRT^]+W(.Q.^Hd^ja/gH'*`/B@!cf^Fk"2FdH.(1o5JB^RPiN<E
%P-j4$0M\F%Vq$X952rE:-@$L,-5I!^`.U<%T(']HH\'[#)^$JR,u_JYcFiLUR`=`O6!5Iq8$_s_0:#>LHkMY0U<"e&=f!CIA5HS]
%Q!##o=2M+*%cb3ba=@!"AJV+iOs]:Qd^(!@jupXFT':E#p+gRVJ(:8+>ciO:]]'ZUfOF+1"^9,R[lD+?F+BLi>Q-sI4fXb/:Q6mY
%aJ,R?cZ-5&Ec3[2-2k-Gi^a7FGaqeLpTOM)LcLi3:4#RnWT.6k_G,]LA?>#ZPK6ps]Mjs#:@ctbS@98:CH5lVZIP2=^3qNG':%@2
%np!p@Qs09Xp>(Q<pS#N2.(TY+qj'(&X+)a'he]HhF1L:u>dPUSmhd?,\\pT_0oO5Qq`/Kl(7W"Vk&0/%/Y';(ZaSMV/Z4*$Q@eIR
%1PcI_Ta/BcTIjuK8`\kF.m.@RRVLh<@<<0]`MZmj8s(JHrCJe]G*EG:R:]CNXq&@ek?*;kEtt4a"R_sV:Y`033/!?,EV$?43&un>
%-3<_9/Km7O:`L;GG/JJ'2qL=]1n8lE?PM6KZ&0a&JE\s/B7.4JUZKn.OJZglKr-1V?d&E&o<m@D3AkG?o<m_%o]L;fkB$:!5>_:t
%/^EPCcfaN<kNL7c*<#]-hYEo&q4caAU>FR.e12:=d5P5H,WK*]%Ur(JE-2_GQ2Cr?l)8g+<oX&VqBFJ6CLHH,_Fc-%&qf@kem95=
%RJqsL\9K75%u%(I<>D8)56F9[19n>._#(``2`:q][m#kbkAg5Ym[hJTo=0,gGL,=;H/(QD]B=2.4RSf]h.,L5)\k;=f+&n;'5Q<J
%*\=AgLCpS#ATAB`U&F)/'cQFq=S\,*LIXb8Ga(6JJF]GkP$$Gm\%#LCh+W0L=L!-FQM:e3.2M\*bBjn^VFqCf]W`1T:Uh1WCmFjU
%V]dYGFh"^HYIp#?obr-i##1YrBL8hZCS7@OoLDm/Jd+rs6m!*fHrP&2MWJgbU]G3F-iLUjSPqWlYFe=?d%a0h!DPpl;\3f[UfFLj
%f-q'I<V.>,/I]GAki=.t#TOjQPp1.(O^fBAhp1+J&]`NW=#qSXnYBsj'/UN5kYYUJdr#3QHCq\*`rE,rBuo;C,Q6X#6AtEBnT!f>
%:V'_U^VMue869gOHY442",l#7H<5`dU-OWqQ]kmVMB`j;.VTA)"U#TE'FBi=8!GA*`Y/n02#'g"gkAHhggi(&dH7dN(Zfs*Qq`n.
%)Y(+<PqU<4nR]6p?^>J#Napdclua@ZpCY9rZi`>(KcKGE$68*VCuSGg/K+1,a$mKjG2g7*V>jFs!a8Q$9*pMr6GcBl+tUJ+3CuJ,
%:5n8NGdOr?m)$h:$[\3T(??KMH:'AM?*9D!lf>i6$13o6:(H_\J/<ucBH/]Mq!/=>i\68O(4k^)43978R#MM^gfYE?Tm]=Jrt(0q
%L(80$J`d>^aq(4P6]4Et$\=a-cjsuZfRT^7m1W5FFEl`m9-lm!1mO.l-0-4=V-#Z%Ep7Z@itBCD9]I'M(js_]fWp'Fg/+"lD:!5o
%4p2&[AdrRG#.@*UQs=Qnc(`F%Cpc`+Rg6AM1=dJHZ\Qf*malH87\f,n``e9t6`*8e2m1Ne9e5!9pOG$cVIZ.u_A0.4i(96&Kq*FB
%B&PKtq1F3::cJaQOTRo^&rm5'j!9d2&kE]P(+K1QnBN$L)\C4"MKA1+[Ofd7XdJJ&G*P<r`GHeg"k(.!7c1p+kgggc!P&V5-1>(n
%@!q`N&[p>3ci@pP-9CF0hU!t#OM(NVBS6U2VM"k'KMo6o=u;KY7Rs:.d#;l("Imd9>lM^n<7>kj+QFAtRPPA.+Dac46iLu@n[)K;
%<b^]sY$dhC6Q6_K<GkMgp`s.99cEGhEr<re9e9*B:Ah_T&iL$>TLj]4C)t#.nJeHtI+i<);]0gAhSr8L/RgZ$,g.gq(,t)EUj"JS
%[,Z`k-Ea!AUtiR+Epp9^j[s_57[HEMT)-T[>?CNSi^htT2n7kBe7.=#kr^(qPK!7k1#oZD*oG_-Xi!b3@?&O7PDU1PoeG.mCq95g
%H3H+H.eD1sPf?>knk""!Id'`bHIgM9/*]CubNnGV[<9Uf3bajbI-XlK.J=PQ7;/qSjW.!'lUpTr(:Y$E'_s%lj,dH%,c(kD'-6nD
%$,J?SQ`K_K2HZ)#J<>':Ybg>M`>+)Mp.4T&L8EeS>WFmr[m8tt>Ms9Q>TKn-?#@.BM@*Xjlqj+mLTC6.$<'Na\DOk[Mh3#Fe3[/D
%-P,*P"P$['![9gf^ZSYUfDFBp=,fg?hi$$*VqS))X^>R5Xl^E!F'5Q]alTbUBiRs?SZ)K8pB2slX]F(YVgMgQ<E`7jC1t/US+TNs
%'&PabnEG1:Ej7o+'(d.!H3Ng-)uk2JH[5r\eBcQEr![@HI`X#^o;5j]["hV`LR5(p^m(ktA3sCES&_.D71kT'@aEa_P[ehu[adtS
%,dGdnE)ROl,Om8d%_nk[KjfohU[XntT`Fp=!tscop$B>T!>A=M]$^>O>3VPi^kUHfOq$Db;j#dY6I`W6Hf\#t1WlF(jiWc*hbLY'
%1*3PueF(nnYcF]^0a3_AbjjneK^C1$76e@\]pqM9p=,]KEqRF\Vb.I/*f"-ml5`l?RJ8I9H]j??XT=!Jn`[6Y`o7^lr[1OCUS&[s
%,"5#^n<+n8:&?Bj&(UM1h3`5CYh#WFl`ecRQ(nf^OP26&AO:'Np^@=&6DDkd>%+>Vb(*)^Fi*]IBO!G7D0fN##'%1#-n&%4&&?Y'
%FIHF)7s<?$fbsD&DB@KU,J2i%kMHm)APa$2aDTFg?%s?T4Kt<h_!\QEJgf,T26-%hBK&XXD][WW6b@VW2q+H@5&F9@)U9@6Z5HQr
%8b)hq.:C[[8;1Fd"':2)2bj(L_+E*f#>M.-WGp9rd4JA*q1TTfo@NG>cCuE<MOLq,9*RDX<2uMScRc4g;K[$RTG!erlbaHMb+ETA
%@Ahc&@MkoP'6=Z(BI8#G7*i%BL%42hY!9HN3s0Ac9]K-@j@If?odk,`/pAt\[4mMu:K="=nDr)!:!'@]]IQ#;?\Rt<\I'^)j7/tL
%=\OjS3%6uEc!!!J!1(N+Go$s%5UiZnZ(+&`d5o*H=BSN&XPTaL$#BQo^G;J2MV=W*Pqc^bC/,,4<cm"3C15T*>:l>n<h"%6'@s4N
%R8hoT7f.@pjAMfkrN(_Z:T!KA>^`oo^K53BLGp@J5H,+b"D0B&Rgkq'*L0l2raI,=[bK?:mLR?Q\okfR'4k+7qTHrfdk:@GRIQaP
%6=l;EgZo?u;h(alAg`^$D-A&LT'.AVi*T/SmP?+O08AGR_Ej`#ka;GV4UVbrFH=>DS*MLCN1'2YVqrb,:%qDrD%'Y!cM;&$al9SL
%XGtGs$i[P'EY`R]>]FS`,(u."e(psF(*PC[GmB[%0u&K+^P=qdL]"XM+_Op:2SY"u*0^1]jS:t"q*!g74_1jkGSaL]<\mq.RCR6p
%GE'KK.G"<Cj8",`q0h:3)Jsr\G^eOp$LWPkmi,%fpi!rrisZg,9(hh`gPuW#3`qGh(*;eR@Ueb0"qB1$SO-"p#d-f9%jtY2;L&.t
%C:2&Gj,pD$3`N&^>]/%HV9XE@QrmIT<T@X2[oD`Df6u+cOgoYn+JY/=UNqT1SfsT'$s=ndIfn,0juc?r`G%*iO0"q\U8Yd5<\@PZ
%OfP'2<e"-h[A^FcMCPZd<`gGiDf;43S*/,[q6LLlH(I6i*bWU;E&So>_68gN1TBf\m&ZBOVsqIObAO2ZKAr=5:=BoXP_du6[XZbi
%lNDkBN?.Gpbp;&E2`7W;?HN^PWSETr6b=5$_:rg4gZjCt9`rHZ;]PBZ,\$X(R9T`Y*Pp0RRLgfO$,P\cH/`D,GaTpck)#FS8)f6#
%=]j[;B434g1/GR,'//sqb<5;M:V?Vk'/,PjO)E6*T;bC)*V+_nVDCb%D-?:lEY;<C@C^A><a:!oBTefu[Pt;/ZH9nhDci-5Z\N8P
%YTh7MbVuVjVMT!8D\[3EhX*7F[u+@sZQE5'k1f(=EJb4KZl@']DGG9532&$Al4%9I]fW]_P9-Lp/l"?@(T/dBl[/r8q$p/`@afh[
%?:Um3[kP,?[RRdYO_MX'_dJrVi>tLD`]eCg,Em&%A.S:HIe-m`7*)U6hLMN?Aj^%]T*K/gXQRE36>-9[=:o2im\UdZ-egQ:p0ru;
%R\ZuEo@mS^ciTI`2QAMu,F&Ff/C$RnK&4?R=d78m4`*\0P_N4<aZ-J4AlKR6mcGq$]i"Pu\(WmF2&[2fj*]sa(7$USF6l_u)4%=o
%?Rn`4PCN0SgSuf*Dc1tLEFSmjaAGESAjqX[AA"=pU>OAL1N5E!.t::*0thSucYg+6coqsjNIM9o9=NaPGm!Y$rMFK*q*4&1Q:]Bg
%qXaNKIT('(k?If]24HF>f"ekJMl$%S7UXd_924@?/D&uI:!IFPS$:_ogu"MoJ*2Q2"ugY=SI@hBe(a7p@6^H8j*!M*Ve@uYU:F(l
%f)_;C+<P3+k:=X:)>je$61\X]mgdTi"o36kP+/WtT8l?\o+g?8CDUpe._3*0S1`h]?U6jr`c8_EHod5HHj0?$2GW]XrG-91/7sun
%D\?c-+e7W/?>V"a[#N<&.)jjWO)'GY-9:'t4V0a!]tJadEj+7)IqIE\?*6:=UlN$gPAVtPB6aX"bhQdT.iE6HSV6AYBLP.sJ:*[E
%H9LpKKj261fVs&:_epctQ5a8GUM;@o1T"n_$G"Vd#QdkMeYm*%Up97*@MUme8Q.BFcDFg0X#Ym#6/UZHj2YtJ*d2N<`AmOfCBL_W
%O-lb%Mb<t(K]Y&Vb;2dpJsQ#pN^@Qne\o_hjQ!*sZIci8DNZb3o6Y"!hh4]ZQ8<dD;nkuFojsO<K$N6QBKb]-V144YRJ<?3R=T]2
%=7AAN?@m(M"?X8]J/j?lcHT8l1HpX<T4J>W/@s;3j1;5A$8OX[<YNcI'[=9XI?Q2no%NuiW"i99f9FLI`LF_J0#PAj:3]ZphIb"s
%VJ8nAZjDPXQ/W.^p%#pmWfarb;fZq;RiOEAQq]J;kK7V,\BLT/j:DZ<E(TOr/$-3UZTNeI$@2Wn$P'$tlZ"dHD<fs&)k$J/>W5e]
%HCjsM1cdJTc)]CW&^Kk9l[4TOoh;X'-4&`E:R]O`-`K"RBTg3(NJ%g;b2C"koZcjIJ,/nXo*N0]D.Kdu6TpjFEER1AbU<8dgEubl
%X^Kt,[@^#3:Krh%/4Q529hr%I)>LM"Ke"++_kIl'CLNMHb[I>Gm8SRIOg:eJjH:+?kd4O>[#HA.+::3L/9``.\s#H4Mli.t:%\FB
%cknujl2$U\dMuksjN2t@L9*/P_5]HZ=[];qmTt'P@?skdWq)t4W`A@^QsgBQE`aj\2R5a=;Un>^("W?jIq<"Ln7Xml/#2RVC/.O7
%?T*XRlu[&,/<SKs<7`le*nQS[$1$-b9QG0%M3qFQW--QIB[#O;:O=;E3q&Zac:s%=l?#.d:f:0.#Hm+%bn>rCr`Q]ep<[s"`(.9%
%XFd:TVm59sTc@]I2fd@Ld/Uo`Zq1V[Q)A*:AaZ!u/jkr_VTW3K'$Op)/p"pA%RnK?R&jEt]9-]oZ0VqST^Q55@Mq_`$7jYEQMeLr
%3%8M8VJRqiWK,'ebd`;?gLrIj)n![gLAPS(c1fgIT/G5J)+ZI5HumOkf6jp!q*<u.)OiQpb8S];)UZ!S=l:T$fZ%os\O9LqK9Ot!
%6W4c?UQK,6aonW<A4%Qaeg(paR7&p<+E8H6HXKfXEOsQnVcq47oJ'Zj7\,8/p/A<U2Iq/"kH$8FR/'bQ2dt=;/3$?#VGfG7q6e=.
%m5IhlB6]W>oM_2[1-Q,Xh>*?'$.l98Uj2=)5-k'?W!%JTbkuJ3)45=@39qFg3$9>uf6A542ZlqV42JF5c%a6FV^K\^=Cf`R9[^u6
%DcGmqXe&=Gr%g]$oe+(?gK3B<I@NmoUY4L#@fAVf$&A<Y3NmiNB&S<22s"J<2sn'Mr/$sD?K4#'61@l0]f1":U1kR/q3*eA&W6C3
%T_UKC=.]),XV7.8d:d&meiBA&0l^9:5#l)BmJD:2`dFf+[5d[IkCVONnEbHBAN)\Z_6f3G2(#J<B2I`qg,rE*k#h"(n*2m+q&SV7
%m*G+@KZ(5N51/PO:PN=7gP\i_XAka'1aX:0bVL/9kmBL2+JY&&LNu@!C1H+'PPKJnA"M)8[ZQtj2!,[8Gt)9^1E*W;+muh5ZL=Z^
%A2u3!m5SY2Is\B,air)$rERB;fOdL]=db:DkkmLt*>npLR<pJcVqX8C5mpVV]J=slekA7FX#'2>!toqHWj-ffNDIuXSj-;McUXGb
%U5<^_DX%luo-Z'4j1T`Np\XJe"t*h#mnF#oo6>3Md.qn(HPr^GcJuT0a*S[.Bcc\:?at<n%mlimI.Ml,*q7DV^3RM<ZNECTD5`L]
%*e#"3T>$9!DoD)>RHBo4H'#L_'BUt*Yg)diH'B,o,+i;C_i-`okGHI,^@!B99P0ol)\dd7@C!Y\UVh5"U/ua5d9MZ*R]kkrCD%<B
%DijP4Or'K9YQ%=eEtd,dg]3mfOs+S3*Vl;BIT+iEi%t;pPt](Lm=LI/_SFCO$TuPj1!YZ\.p;f-q45<NgRZ-Z's(Om4>VFJ1W.)$
%G1L;8:&&.!=dWt#n&O8jDr;lC>Kr,gb_"'gh^LY.E/U]7*nKXSm4bP/j_XaYr_"SlT9nLpi77A`^LY44VH@[oCLK67N9ZtiYW7mo
%8'-UNlhd]Z^5a:6qO5Bg',@EKM+kTdc]EmM)7=o26?="kJ'<X;SRH&@`M5'D'52S[NQuY3[k&'iSAbrP1@a#HX0<"hWgQ^m=cg2Y
%%h-N%D5XMUAX7Ug<,GNCR:.L*N@]7O0f^4W&NQcL0aT@qC8^naMd9&W:("$1b$%8/FT./Z(lr%8rl!H-QkM(/@Ec$6+KI@K2!U'H
%(A98F]9h=cZO]q9,ZUEM>.&*.$8ZM6<t9$-h+!_/W2-GW6;#A8E[T7;-C9>9RhR>\m@WlL#'@Xhk_-'sXp(jd.?mS3;=r`SZ?09P
%eZqo,Y>%!^#j^$a9HsMt\feK`)mV*RLttaC5Tj">8Ma5L+>YP4M]&+CP%bc1>qjb:C#bVNMGh/k;c2\HONls_9M+A/Me((il'_(P
%-lH:5)4?DGM5dA%0$91C#Keu>/kQmik&XD^F&DoQf&fHI78a'gF&=\AOf;FJo=69ul;>mjU.gPq];]jK1@a#HX0A'M(F9GEZQf'l
%o.J9=cDeoBQ<00N8WMnK5<(1B%'TItbhe@!ZSN0E$H486\5BjVdXH\WaYn@@^&IBaH?e$m>-oh@^ff@fk8GG>3"^P4eo4VGj1Dd,
%ESHnlUAH`8Qf1g-2dOgB+Mh=1bn]&>d=J#rn2=;.\5]ZM$BL48Gj+p&UV78@FJ,>hAU`FT=iU$#gUCKHl(#Z:mFSr=^.17YUTUUR
%:8499lF,#[]4!ib"-pILWW8"<:?L3^6<L9gc^4_%W^i%<m4#\lbNAt&5CJd>F+=7I1cX*;g(=#jK4,>N3P;\m)*(\okT>`&m^2n?
%n6L4_CNU+K^M6UbUg^mlpnpm%:a?giHD@(\1_"N&\-R^4k-00bX@7+T-+AYJibf<npE:STq6B\/nCJG'q[U[G!PEHb\PHRs>idl6
%4CD1H=.n[R&0OC79+:5RJ/lb#.Y%r`*![#HSTcX.E")N9)2b1Mn3q=k<AWltU:M,3dToSd08Aj2qYpP9CUtp.\[+n"Hb+mKYk>9j
%j;lLr/0pj%Rh!k=YuO;6nVa-A)Lg'jh4u]YpgW4*^398l;k$cfJ:=DR(Mm.j.on@,V@At8W2+3hY3HF_]Pa[JD%V\.^uIt*"fZa+
%0Rrq8X7g2\ZuVdU98>/)rd]LnDSZWHJaXr`_l%@"q&N?T&AkTF.5l4RD&=&ZOJP%)JuiJJY+al)<OXh!O/SL^=tY4X%6+%<]+Xi&
%E9t[XKCP8On9B;o+4d/]-Xt0aT--&#iS$,9QL1\)@:Lg,%))^+)Q(bf7Ik1CUSsk@l5Do^>@jFYZA&[MV,@+C)j@?>h7g:(*^o\?
%caG$t_arK@ZDsl%B7n$(f50$L`VCb/_d_RB$juo^JH,"Li*=6,/#K0l3iWEuPk5)l3l<3LaL`qm4bA<,@$2WXSK9oBF<e9b%)C!\
%cW%eSYg7rkU8W<fAh#.--tJZ,5\H:pZC#eJblD(s%#c,^A&lgob(f2CL/olB@<<MWd7H^+$Id%U@4N[R0k9cVNhtEKdsr&f%2AH,
%)1$nB@43a7VCT)l,=J]2Bn.%/%6@0MBE<-DUF)\$"Bn11-638Ze<2-Z@t[^'J7_J7JG3;=@D`E0+r+S(;&bf*D+J.;J/a;sY1otZ
%Mahf9&Ta$8QPskJ&R/$iU8ir_&As#5+fak.@;DqrYQZE`H#/>i9#kj>1(lW)$$Dn4f1Gbd1_#F1UDU!`^;<uc6n$UjJkC[2)cO!j
%"j$m*-uR3_JNt.,,M0:65"17HkmOksP9jgA(@$]/2Ih'\ZAj[@0(Op1`(b"W1glCkf1fie2-i-lJehmUnW&5i<YOn]gN3^DQ/IoG
%<DCMENIl/H0=p8<C_B)KZQW@'eB*N)2I26p[&M<'=)^9$`lFsMne`a8L;tW!-Q,hr*_'bhFHeO'Y;@_1[TUtG6aSWT,UJS\5P9c(
%AWp:u*0T<7+^II?</jJaCQ^fjWli?'E#9Tp'G!N!8;rsG,oF.OB/YaYDY'1o_uV(HJL2rgD,o&\-=%a_6%Z1?Noj.?^dP3HQ=*SB
%E9g2hA@<a`,AUC#3cta2;b&0E_o+Nl$$>$4l;][9d!1c4.!F%!@N#HUM5;)a'qtV+TrT01BgblL.VOeG>><V>ASWD+e1m'.&rj^=
%&.N,Jj"Q04)Uje;FjpkhQJcE?3/YXeVIg.U9YlHgH,Ag1c<!S_)&bAu+K6<qqIF89b"UYoCc>$rqcq.rZ(-psdSU[0(/JIBG=_X/
%b@t-2B/0:h09VtWABrsO5m*+C>M+mO6[Q8Wcpamh5D7f)iF8HR*(JMHT$Z>u%>WTPEhK]f0GNQF$]P51dBR/[7<>g*N%Cc:(m:S8
%J_P<GbXTjXbWa&_4(Vh019dW%)'%6S'GM\!6W+$+hc8.F^\:CDpu?^)@4J9h#e\5jUR=Yh:I8n3;*p2)U3=<;,f%HE\a$o$G`/h&
%GdXp)::8pR%B$hqEFfUXAhH\UfZD$<QR@b22YI+2/7d)S@6JSZMN)WmVd:1W%M3R;po-6'0`h8IA[UKIPk#l7H?f-#.`_AFs&Ck)
%WL%%=k(ViXRJMWt`<Z)0n^"Gi?6,N=LWXjNlj]3sRWePjb`h=f8l&>)5LgJ5!_Eot:6r#%#U6hUPGpf*dfqU)YLY+/6t>[C&gX4:
%hdhU/-cF)10al%T`k!([A6@ZF?t:/2M%BU9Q,:\iltQRe:'Zt-T&jk%e$tnLolmMh]$_'CQ\IC4'MWaGrEmXjiV6\(rn$Yp/5^;W
%r\F`U4Th.c?)s90NZ)7_+Lm14'-`sE#>nSBJb[mN$j=SR.FHnn\mh*>VCU[=)nVPqJMAI,@?MLLIHjqIZ9;W`5`qWm4F%>Ef?s2Y
%Y.8$sbk07jJg>X.nDs+lOn0NO;0\Wg3oFrC7&QTh<].dlIfrIF78r5MONqAmf]ZK0e)=M]adWVs/u)0D!N56:!9=&50_[%ZF-;CC
%UtTo]&L-PmU8W[Vpf;-7=5ri.VOQ?+G+.5^mN?=iU/ps%[#-V_&@EIbDS2VTk\I%Jg5XhLj"=L4oNBdF2Cm?4iSXF3RjS/Qk4f7:
%9pZT[D#T8+:&=iX,([5&Wjt*g"Q!LpR1!aP:f0Ajjn;nU46kn&fN`Ro8.<(K-`iq__m:c#he72&65Fq@ODYB;Rpi/AX#o%[L.$-,
%/?Dk+]uMbCp4^ko*2IVMeriOV%T]%KHnqk]B$T^c)DRoh>2UfB$"e'-CirJk@B5PAj4`F]Q9.Z-3sL7,+;cDK;25^t!TSX[C;e2S
%D>1+HogrD<7:*ec0fqM)2)X!C;[d0:8dLC[120dQWc_KR^"j*$\.oh<;6Ap5#slW*0-`Z6U/bV$YS.&9&LF(GCV.,hfE=BT=)%84
%8[qYM&f\</7_,;X5Fl&Y;XK,beQT@*Hofg+*BaU-0QeP?rs[Y;&sEU8h5E2+_V.<*m+0l^T4o<cJ<#Dd,grTO)GU%g+CcGTIc8f*
%dXR^F<X0j+Y72]/hN!$o5h4.#G+24A[[hbh?3SdErJXoSbUa,9S/@4`W7>cTA__HU!s\32Q!3E:SL@-:67u9kON*aT&(E89]-5T_
%[hJ_!C'+H:Ei61J!SP:@OE9eaX)S`@njQ9tK3p%+X:&r&kgjL#4Dt6YTH'IB^eKI8mf4"0,C>L3E#@,3L)oIaE/Rnh`AX8.lt"%W
%G8fSIL+4uZ>HVt!j+ptOA.>1/SK?@=0sW'`_Kr,K!s47@Fqi)%4$EdAb-j3A<;Kk,*nlioeL$)!VFgahidM(g&T-6Y(oK!#OU>Cn
%8c.#u5TW8GP&+Yf9d,<%_3[_9%4!>\>*Z$A?taRV?Ssn/o<-GB3rk&V[EE0%O@9?_:te.XmGQni9d!YoBnF_jR:!CR.jRq3iFU5*
%pKj0R:!8*Q\T2>)<JJ5jDLb_i?e-/&m;pf=NHq:)mDOJ%Vqn:Lm9WC*pUCS6kU75jc)kZ!O\IuLdmT%n&uT30]j?GT=bpf,O@9PI
%71Y-Y-lY!Thk.VobioXL:0)_&CPK`kk#$FJ&CldR"X<\7F[gMD-4G&[Lbd+Ln>(N`?A-AJD_R@7a.'J$C;@lHWmF@6P;qsopVof(
%UtW?f;'i"u4I->bIe2ps,(G40Z#P)YB-Esf229\s$sOP8^A@*pE73!TgCX],.H@ifidI0lVjVJr_*=lHW*!re@>m7k]#cF0;!#%-
%Xb'MW?ZaZD=Zn(l,ES-`m#[*aB"9Y!7\r2X#+E:\/NhbFRVhI-rI[jBUH,L;p40q2`@^J)q`LrJXf0k@p=>*^B`./Bp#q8j'bt^J
%MJ,foW8""MPG9VXUU)Y'QHG#\/r:dI)%8!d<)Keg1j3'k!.@Ys!d8ttL6;d$XI2\_ffEsq3\5no\"rrY+:MAYQ\bs3U!8VA+lcOa
%$p]QUCZ&bOi!s;"*f`Ok<cRr9Kd*V9(PAiH2;u/Y1Q`I4b9i>^&mpI,E(`J6D`O7.5d>L1QEN]S@COf2K+\L*H>pJuS_'(T_hbnK
%$B@TXSfN]#ASeF67V5P>+P/PV]\Y&sLJ#3d?HY(Q]W2J]/#\q00Fqb3W)^M6VbA.Ydl$_agQZcjA"$(nF_$E3ZHT>DZ"!B)<c\k_
%&=Lg=)]5k$\n"1TVBD)&3EAE_*>9ufTs9Ja<OZZN@9/%)D/B(-/8$/,3SP[]C(7nXs0tg&o`gg(oPR2J:3]fa-rX#rPXu`i$(It`
%mHRh[c>a7>*S)6@Vdnp/Vq"tJMIE"MC82?>[ITKL*EFHr5#,j$=X<JnHXQMI-/WBE3#&7'_gr7)pBlLY5tZ2hUD33VBb@A9JnoMc
%B`3-#57icdH,5-u@#"c`d;IM1dEKa;q`-u/Z)5\:f\VYUo&giPgZ<%Lr+dig5i#Vr*8=Yp>"cgiUK]f%d2EnJW/eEOd0>+N1<i";
%TrDWCVg+5?&=C42m>PtD498;.YF.b+!&,o?JG#kB_2Vn2"sSb@N6a1rNV$n`:)!8F[=6gH2(iUX7P\#^HcGF#8_@cjDmhG7elJWt
%mMYSheP<aLngI:k<T7G&]0/c^0(U8A<PJBR0oEf2RZ5U<lkp7H<)SL0Dt8\Zgq2bq=(m7-#`Lu$*kpC`s84;>;]Fl'@:-<p*b8rW
%'"VC@Jp20<7#S9UDe,f4Efo]S3YZ&!FLlBJcEh"]aV-OQ;MqeFkqXHT1G5@TLu*ujWn#&4LA"/SkmH4.+fq;qed#;UZmjTJAi%id
%%Qi]c[4eOSY_)P+&R6Sk25[o""B_dLe=bVD#*$f,j(&g&5VAUP(8ITQ8MY;#qOa^p+14k=rp`(OLWt&+^m0[_>Z1C1T(BRRT5aY:
%*M$W.I;,\;H4^"G&$JrKL&[sm$I=1_BS3ifNpRpN_b>8,\MYS)G8U=<G/:/]!kW_@m'4Y'-5qf9d%.QR^,a5_0gJCYBQb5BVDFo2
%dbGm*,q$WIa-![7l"\ZFUu0:`<U1I/FpC".)iM?Gjj!Wj%MooQLg>C4VC,I#%.!l$A9r1dhuF$rrMkCt4"P2c3bAtsXjChE"lmSY
%K25-Un")[I%GsD'dN@g-qs1ADbO_"*qOObHcBH5&Kkcunhm_IT/6V^Jf&(:+h_e`Am!O8l]ADh=m@^9B3X_rrgf'G\nU'fmM/n)o
%okXQsqV%-FHbI+p4b[e)=*O)>7'3SOJ+iI+cMEtA*>Y[$SsPB2r55kT^31tJTL6=./?IJG2`eqH?[Unone:JtZ-rokkaX:h\*eBk
%U2g4(s1S-q*HY4B<OPX,[W^PO:[PWp5CN6c$Mh0KH^3p!Hs'gg#emCD[.BVW`?u&L?u_r^$Jc9,JoA\Vh;[[cGICj_YJ":'p!5^R
%F8M`$U<'eK`Nm)H@t!a`_fr1*!4lJ2HM4`Ih]D\DDH8[aprgtWqqg<&]fH8TI9>`#2t$FZV/iPO^0W@\)oo!phLb`7aaa!EgX:E,
%iL?JOFWWht]63Ri[9O1pn6:%7FLlP=\lP)oU"ua*s0bi(\lJ99$SNPR\!B4%]q*%G57iB9l`47Q3cnl6^AYA*e]SIVQ_*TI5.*%.
%5HEN3e+Td/[E>!(d`%(^2d%bN[GM&Im"^`%:0/nqe\]cH#$Kc1[^c5\nn[su-,\]ZcGFm9F7%hrdM(6N"m*_J:Y*5BG+nGKC$fd!
%du&<hmgHQ#]Y4@o4guKi_dW@O]sD%sO]9[*Mau>RB@+,Q*C]pIDn#Ku>^I%;=o-dfDCdp?Q!0k2d#E'dGLN3,9@&5Jrb_%.Bq*X+
%4=P\gX_Ala:#Ot(b0onEV'fI:`S!'(d(<q+X-N.W^=$]7&4:ek^+$XE>5hP2_NtB.Fn+,ceqsksB&<'9a$f?)e:(h.+0G!Cn#6#0
%WHe8]qaW(D+5ZaoP;f]$rIsua]Y/p3?T^KQr`K3jA`X?3nVn&La,HZ5Xie]4Z+BSY2r8n.61Oiaj$NFNolTm!EoAPtS3Bu)L<mWf
%p-GO;FQa_D\D6fOFrkQ,`CH217NFd1-3D6iSS%lodYkTn%u/MRb6cd%O#hKuUTI;#+1WHP8sBm>n\0-91j'':Zrb%c=f%1EKer,N
%g5D[<HsYE]&(\Is"\%@3a%r$!LASB&][F``#?M<<A"OS#m4QcmZ&qVc[Bng4DlLZ6CJ2q&Do(GtG2?0KN]q3=mXJMPOJF=7FV!7U
%=FAJC<&h>s/kSbuq&nWtOFn&Q;Ds<,$8Um-8Cur*5jmL(_V'46D6K8_*-h0Im9T0?m(]X89f7BDUU9s[`#UZcmR=KgJ8W#ph9$?Y
%S*+\:ht_4G#[XM\e_Bk,T7ZQs1e$.QG5KsjZQD<`YH8!to:rbdI,c0K>Y@lq]ZR-<WG(#"[Cl7"FAH4kq=Y-f>($1Kq:P`(WEf;-
%qV-aKFT28'['@:Y2pa*=BtVlG#Kufgn)3j9+^Fa&JT!.-S9*6VW-J1.V$6?HcC%9U]m]oYBQWHHqob*CXIhY&O8Ai[n\dD:kIk"H
%\'t!kGR$a2C<lS-neu5O`%GFV8VP0MZK>LF2QO[JL:Se4qMtlB6^]K5>9qb$.OX'#ij0`q'$JaF()_G'A"NdPd:$AckM+GMB)<;7
%GPRipX52JWn*o(4JY.(uDsM0l$[J]Am4IOSSHln*Z$YgXG)qUC/6,01#"L;t>NM+TCrg-QI=&O$V68BcHTSm<St*PX:s7%K0@]R0
%j$;;onB?TYc#rgWqG8d,*u=\*qe+76fINo5E2PtYTGtI5^+t2Q+K@&4^t[%\qFP=bXc#eKfm`#Mo/H>h!T#:I]Uelf(9T1BMsm;0
%T9&n;3el:k`p[9;bM<_[%.`f;][u8R7f\DVGLiG/d,V5[IX2$5'q_,cm&`R=2_X+VPF$AY-nu>S*V""QOo0"5ra?,Ih=9Ikh%B+;
%.d'%1&IfkJ(cZbl<?X>/+#9Q&D+].1j[<GW6gTBnP58Mq;WE:H!YEN*a+pkNALD-X,5'*i)$rJ-OeNXKhY'l2i*632CUm%E3U.rF
%?QX;1n*Gi\O`)(B&Y&uH(g$""O8J?pB5G]$8[sj#ifFQ5^HP1o:>f%ifXP<T!@M2#iJPE;HO3%efSI^rLIjH'SDM;_7";28-DM5s
%_lfg*h3R:%Rkg-N1J-ZNI=[B.(F>K+$rN&39TQp+0,u=,K9Ieu,!Zlt%AK.BmoU4pi=?nW1BZq]l\YTY2M8Lhk!uC(,!ggujbr1,
%6/`Ub9_M%"0FBHkOji7[];Ug5,B49X+Q8fDqo'6YLG='HTeM3ro6DM[)&,mXDbBjKej@0F&uYD:j-2;HH==Duoojsi=oe6>kHp0D
%fK4Dk?&*<LonUp,6meh#CscLk%efg:-ht.I@3rGT3.J)!-S(3r8=&^sHW@^\Is:A+=eY]b=Hd2XeV,trgUA5UU\Et03CM4'o8/L9
%\kBr@^&\Jl*$!>I?IZ<B`N@_OD`rXiU9oT&)Fc4o\it]7nDd]pMbriD^O<WU(Funa04\:6]!5=$mKB,lrq&qTj^S1[\,G9iSiRg>
%[T]kA+q(KU/_bK->>+_7<.kV+0S\%$*"Dr/X;F)QmA+\a#_M),GKpL"Ln'KSGl*tk4sMrf]ab!p"men.n#a<6Y[Qm2[d+/^F(qi;
%iKKo->>G0_4FHAT2k>=_Ne]OXbKn/3^@;\"TWO-FUdE^[BXsS+2BF:?q7UI"\V&Jn31,3`*GOK-*`@h[amt(ldcYut$Kaj6JdGjF
%d>!F.fU?Zlq%@N\:LCRAT2t\NJXS.g-nq`FmI$n"d4GrBi7Oj#gNVOtc5(=60"CeI3=b%j6A@s-(!i0f]jQfi>6!">[bnd5%q;p<
%UQ9G&rEUBE7o?`k.RBbKq10Bt+-L<@(jO#UKH,DRORiQ<,"0t*c^#5AkRDCi&4d_f%DQMGI7g6&,VQF.V(F@k^dDiQ*:Lm]U"ZYQ
%`REpEqq@flRkM%h;r4RQHn&-dnlILqiCiRmlJm:TX/o8QCPoF*Tl,u*l]Eje7M`6RH[U&6_qg=7h=E]_$`maCZKE6G<5&I44_nct
%Dsk,/:nHHlqWZ[B=,[!C7h8AJM4!Is>/'Z-IBlsoqa0(G^"#/nA$#%2HU/+C.PFi;@<bgL:>Nc6cZaIq/9lM9s.sXUI78STVB$'5
%QTQ\D:L?8/FaH,4EJ3#]+8MqWdgAU+,A$3&h,U+nIVJIcjkThs>sgQ'H6:QmQf-`MOS85(?K(hRSJ;E!O,m4ajgY2Hh51"E"nk`O
%oJh6k0=5A9OqY)Pe;DYEf<>*UjK"""SPKb^]DA^hb5HCb<5/.tJ4@KUhK"8,lY5Tli4[tMA\[b]0oi%ebBq$Ip%p>5UAUq$#G4.q
%>YjpTrHd-q76Mg6WMZ%"UELI%aY/ujX#NS-h-//b*@/Yg$hQuq$k,\t`l17IU@<I<PG#Lu;:r&E2Mk!9=koVFe\_-[!f4Irq^i:t
%j`],KM%<r7o<+_c\-,fNG%^coMfL'InmU-k:7>fH6NPDM"L<%@Tm3$@@ks32gM4-]btf9oU]n9Q.]mN@-[ChuH)3c57nYM-I5YWF
%7=4k+Tm'Jg4"TM).a.-.Y:ci3#tqdhV1Tl&4F$>J?Rh[=V_rY0T)5ng3,+B80Ia-.=$L0)NNdm&"r]-fNY\h]2_`(DIk,DT2c^=D
%/pma@$u<&V=^HC`a,Z5b\;S-gGZ$L_&!joHmc%O8E4,MHFRiBkK=?olPuhV!e^DReK-+h%L()9RkNKb\_r1=HK7i*,hs4[]r?Qr"
%0Jj%#CuGGMdCkJ&Ya<^Ian0BBlQs[7@E-Dm>?l(u]3Xmuj5R&Q]Fm)KH<jC=40O6++8.eS<2gVc(YDl:[f*4(XB`>4P-+i'`C2I#
%&)MjsY8O;Q&'pl>7pj#f"sW:_N8_bs&C8MNocLo*H_#b/ddNHen)UV-Yt7rD^2iLUDi_!*C&N:fWqBAk*A5^k>_#Z=J(ja(._g49
%(:Q6k*4l"Thh1Uqf$8K>b*>[c0,:L2mos$<=%WIGhgEkq+F(3r[D:IZVs!Aa:Z(q,dS8D9jK1"NI'FbVourb02Uh(E++:'PLS_2*
%p;VHmqJJUiNqkrOW7-W.mJT)e\Wu&Sf_Bj\eMl?<l$OCfNA4bRZL4<6p1b_n`EhrjB`3_QQ?0j5JmZ.]fX!fG(=lRDrMW%Ap,cQ@
%]HaW--T@K>n\[:-=Wb?RbJui![@l<@puV<-9BY\OA`7s`cd+%@H*Jf<>+/<iHZoLNk\T'igjee-?>*Haod<87O7c2%nE@j1qV(Q'
%/+:a3mBtBa6ZZq+\&\VX:ER!l5'jJS6@uqa(DOM8BCN?W*#/-k[Ji)<:Y$K.7k[/Q<mO?"L>n)j1I3t6]-0-*WV@>N%J(<rqtYLm
%<1oqoNsb&^B4%HV0<9-Rn"(D)0Flg5V8jA-oTG_gG[#&,qd7t4hX>PaEr3!)mVdOO+sDmp=^NRa=p_=!2p]V99(<BQT;olZ#;9j0
%'Ul/SGB@b;2>Xn65(IQ&ZtPr%HQGBW$GQBS*Oo2/n9M-6q!HP)4J_*3DXm)Mk78,n/=&q?ld;0!4Q!_<QQsbaX3hlg>hn%]o,`#>
%b@P)K:E+"&=onHqFJ&A7jnGrR!V23[Gb+<<'t9e!>3YA0ad;#O;*CO.$Jhes/0;R!!#/,Eaqha[#I-\3_YiPBH]<'pI:XI<_6DE"
%^^2S5H+&'=Q57X3bVaujkN$h5&V5)n_UCT-Mr$aJ[ob[O4atu>%9,%th*%tob3Mt$h7D&cBhJ9E8'6gDHh6`T@PD=%rQ2Vilor4)
%-ks/YS14WQ0gBjUHJ4H!GlG]2H01%6SR?Ga_bEHJN_Q_,AeF_NpHJ`Rk*o6uLEE9Xp"9]X@+rmR\)6EKc17E`\Gg"-/DA:dbtW;=
%T),j([.a0q\,Z<b.r^gP?.fFnhBfZ>n*]d<KAU#6kT-6O:P3+NobHjsjNBjJ-TPI@55T"V?eI746N)?p%ZN\5o8\hHhSgQ0%^Vbn
%`1-34R6L$O2QtlN1@*hAK&b.ie&6f0+A_>5FT^Fqq&<T<Z3`Yn_sd1^NXd^m<5s@56D#o_YDlU#Ga(sh]mckKGQl[iB&u26[<Z\d
%UN-)"hSF7<SA<:"61n%^LoNrnO"09-l5L,M-pP(SGOM+%*Z7"p*V>q05P7PhhHQ1HG,'[6;r\(Z[/!>BQ,LZQ]$6$T(hF)l</:U@
%W`8)#d:rB`I&Z7Xs1Z6SgoS0V'Xnho"0MecfA@WdL4ND6M0U//3Y+.;Lp"4u_Sc;#+_;P4S%Tcj$iHlMU3g,=.dLk'N$g;;a5rsj
%^/TG!W3'rmHsV8!S>d[oWDq#1/$H[YFG"L=[7bK5?g+9<QsGFQ-CU6N`)ohg5%,;5#`?6>cg#=jSd!0Br)9RYj3_?5Z+]^Nl&bh]
%?7+,CeTF\57d(^#+#[Bsh=adnfq;&%fqaFVUThJ@;6'fX0.N6<=.13LTjthc]L7Lc$e-``?!hr\Ig+,#],TWmB/&:84GV:dq#kWD
%]qsB1<X('VSkOEA=[,kETR,2\+-3mgj[+2hHsD)'?J/W45Cn&CLnf<jW+$c9l7&RY`,pe5O7pu1HS#Zd5bPh@hlInl]3>!DSp06,
%AH0Ko1Tsc_^tsA*MJ'qq$Xi#?\s3,&<V@JCcDIsbfjIF;a*1\UoPEjR((5>^1&oZba(Zn30kC.iG3Qn-s.];XHg,&9jC:uLfNs2u
%7.9&/Me7eg2X,B.]%]CU*^AB2,-S`TCp`b@<?g>Bqre#jjS?uYUZ9DLELN*4r#SOVF3-MB2/m]Hr<E$d,Z9J*mo7'1X<)5+FH54&
%#E>9mfOUu5-VRHG2CEm&g)SAhMo]VKib#]4^"KSO"Y"ij,b9@k+RBI'@?U@Rnatdu#H00!_0T;DHG/fo\+o'3hX@H1ltq.E@V,/9
%(c]i+;BC-\j4<q7s4Y)'q*qu6g%J:L1*DPcUT^a^/=!hk_8l%,?)Y'aOBLN7kBgT,I0XoKhY,uR3-D/,D"Os\dp_%Yn]IigHK[6!
%dm]\\6pohffBlI44J@^Y?N\A`d)O3(lLnNhf^6fX?8pfQoc!bSh;I836L]$5g"S'G!e35FT'-FqUHWC><"g:/A!?0u`6d+YT'<-M
%-Q]#kbkd?'#tiLZb9T<Yp7tnT#o8Ti/DBQm7it8G^`"bROJ)bBk1RRNlWsLDlKPDX_^9OKn$CS1FeAh<2LK;RS<n6',Kmh!HN00(
%%,:4Xrb;us[%+gjG9/32a32(jG<c,CX?*r3>=R@\]FP?V*^9[]?7uEShn$VsB1iW4WIKLYpNW[E]B"S(m=,B2Cj+E[]Qj)Bs.1TZ
%#1G@AMmQJ[C?AsnF?ko$mao>PTJb!Va;Lf6AinH3<F!tlVddZhg+9[OaJA'g\]n<[9/GTIXW1Q*F<(bL##2eL8XB7mi0a4;n<7#D
%KBDQY]"RuZ$u&e\\jrm,fo.DU>;`X^=I_Kgg:`"ZhQSC1Ak/ugjY!]8*"<!9He8YjQ*?Mo#(PDHm"E)hBr]eM,SP9"^?uChJ?]@i
%Zt2kqbKTTFAld;M(8&u([9ihe1gZ*/;]$&('uY[#Qj!>CTI:")ei*2>-d60AHr2bM\(JZ%a0p%/0I>]DGk%7AoCS=C3"NFH0gM,U
%f-=$P>5W4S;F>ho*h=,Yhif$e[`>@<&>MeM\hk7Yb)%?DR@AecS/@!Z/.&_XLiqrk4eX'm`kKEVm.`<>=u&.?^!m%?!>UM,kn7:]
%&VCUu.C6jS>Vbc;E=E.,m[^RiE9/@>)[UP*<<A-KdJ9GI!m8r4knTA$]C@#"To,=;,Uf>*B"]$90QF3;%3+7NZmgH-Jff:D<9>QR
%9PKSYEP4Ig0q6mLV,*9'GbD;N6gLElEG0fWaqd%:(q%PhC3/1e&LfSZOBr8T<!s^7B<j!,<Ab':STiK'gM6@VAh]67Y(I?epVX=N
%1Kh.D8o$1F?QH\G,]8pO@?Q9D2oPhZ(W%NR)QOd9hYBJp[G.W=b3,nHAQ3LD;eI%$p[)*>E#$dN[M'QoLY-3c\3Ep*Zd72qTcN$/
%e>i&57Lc/43!pV,nCJ7)BLu6:%)I2LhFm-)3ZWB>g/052e2moFW%Z%2+]o%F\#]1!/)nQeFZ!i:#2.u;<2i%.7am<DTH9he6=pdu
%814r#BB+l=.?9.+"Fgp:[ioqRBX)a]Y_,=6:SW&pfoa)_/0t+/n@d1<?T<L%Zr+]U"^nZC#/Q$H;c5;QQO].QhkErAgb`l(kRSSu
%:#'m,4)+W:_GNXTH0&)e,jalN^S9@*2_oBI1c,gqNeTMFPZIpRO<)IR=U(eNW)mZkqITm8WHqa-(]%ESG[qII>&_pRp.O4d*ZhSk
%gfXM1G^urBS"nW7a.!pO%Bnhu;p:rh.a'HI,7Qik8Hh8<,AH3%Ob8<,I<D.2,VnE*$%;*uC-3e2R%mg[J?<Yf2.dYn+Y#h<K2HlE
%@gLp"dJjP':qGrB\?0S%8EQ:f!."b7G>W\\TWG#$4;ldO."YkT3]c_9T%(YmD2^DH(qjWR`.^]E)`\=NJ!m)P8__'..oW,CPFk13
%B'EY75&bME=0!?2GY-Do8+8t>l]CN/)W=Ga?F(N'Xn5)0@XYIqY_D5Lik3`r\"Sc^m*A$j&$kSJqUP^3^C/Z=hNj`67YZ[](0BTn
%dD^=ac)I.qUF5Nl9K]n-Jrb($eO;2/L"JEY;/W:,kqPGNcpJN(C_h(B\\8H4iBijK;i]hZ2t>1[#lZPBH&Wm2qu35KdD8tW/pE!S
%!ABqFR^ZSWat4R$Gh0`CqD^m@p^BYK[tD^A*M;6Tic0mJ9*eNkM"2\Je**H^%j*[eTV^fl=(<gAGmu3*^_Tm"YMc`[iOFFL,6S'G
%b6h4s9PQu)TtY)*,Dqdg9R]fllRW:T\o(hS/:p1:i?FVrCcG5n!(U:11U#Q95qO#c5'p1;a0iRT!\VZNmF"@<koc`G4/hgKUG.?n
%d.6Gg>M\&Cn<WC44S]VO[.8_q,&-6nN$OABA^>?ARcW1l;AtWe=%=:_Xh4gc0`53i#G2npl8\6VB*^U.gW+4L\j0-uT+Gc-.^#L"
%[P;%\PZ.B;*7XQOCg2'Z1PjO5ndOj=c3'];\M?$Mj:0X]"KX(g^rX-<.NLA:QD;&T#;pl/.-CZr3,jY(d^%>K*!iA`PN"kue*36g
%=5b8`Ai^^$YJH=Z;j.Au]&=98.\Pba*"<]+Mhq\0]\sEc^d5lr"(WXo3P5M)T@diKj/Sf`N&mDB=F;qWL7=X`F[e)FVCT6N%R(V2
%-h=8aFDPG/NgnX+?0;H0f1"&_!>5X:"UBM?:/>-tT,]EWbV0;-8&GS8RN,A_0K9e4a;e7r<5=8"kNJRV&Nu4d/i:ssO:R!U;fQ%N
%geR<X?k1rR/H^B0kb0Un#kH-*"9dO\A'f`OK$SRe4tkjqhP.n*:"<r[i#k2SQlU9JfB+XbS-nF.#DBnPjA?XZYcjcUjFE^>;[@nk
%RsIb8:^$^#N=W7J@of2>4s^mF,cFC'VWNcc&?qO6#XL/l/\^;/#LX4mZcNCZJ@/W*q6in&jW=1_"sOI'kin\]G$]Al[AR.hY;is;
%_n]H+b?RCS2cS=<=IQ*;!7jh4B*WQ,<]pdRr`Z\%.B^Z\cnRCQ-cHkA9W#(GSh?+e*s>U2,]pI4e*AF7Nl<J0bV5-Mcn(_."BMi(
%6!Z2Y5qj"hD6BYe]WS-Dr1N;cDVmb1"E#cH(AMlG.#.!OS<'N,,V5Z%PNc%+#eE>=n@Csb-or3H*[]>)Oj4(U&]3,p5uJ"W0bsH]
%B>R495`f&K*-'c^<D<m`D=E1hU[Wnrj+r>\LpWO@\E-""B559fgS#Nje[_!r_dqb7RBrl(ECH'jG*/DuSn;8UI'qK8!Q^=e#1gb+
%?ZTctUZJ3`iG*ctE:Kpp8e8a7Ja0D(-7p9\R6!nK!u`soN"-pb4Q`U%+<Oka+QnE0BRh0@S?p[oS?j(S[()Q])%mJFWnGS."L02]
%T//OeV@)bS,!f2TKW7`,a/,\IX(c!0qRV[u2Be>N<)&1V,f)/s9M<Id%Si:dpF:oH9ib$"'+335i1%Q53C4rWkG7T`0ZThgUr.-[
%ptg+GRfPYrX_^u*r#dD1kab"S",j2W31;dm4?_Uu`JNsh"'Rko-3gi,JN"\]CZl/lb[X?ff0H7F(2Lfe<1>\"Brh0)jtM)1'Llp?
%RUS).OJ,[>j'f!n9*(>IB*U<E&dK/:Z`&ijS3%6X"%Ir@8'tf7_'V/HLH*j!TH%oabFH/4V8XL06^N?gY<&,A96gh%=BC3UnruXQ
%\bLi(,@)2"jL?seB+`B?$O+Q.^m_:?WF2DPG;P=!"9]!_Kc[lFMm#LR/ft4RUMEog/]>[QlnC^4FuX;'NR>d(Hk;c*kd[Y&":6&i
%KQc;!-R-gF)\;5dE(g\2&Hc$i7dQ'=':n/c]E-2a_M[QF9%&6,CSJ+$?!-;4BI`0XgE`u@`WrV[65Q(-r36:A!(7JO"[)%Rb(e/?
%)<t<NX>W8^4Z3qQ/lXb<Zsk?(?R)_)K0U&,Xj>t!"#3`Hncq`eD+3ciN1/-,0IY/SZ>gTGp`Mb-?*jSM=hk$BT[)4'K,ou+7>/V3
%;g/CbF;SNE![q*gNTm5%]EQIm`XXPR`f:@__a2=_j6I^e&H`1+VSh]1NadoDA%k']&-T@La@o=,=<%3.>mNUf"nA8-r%.K)R5Mp8
%&.]+c;B/7f<EjD[[s*'Np+BU8d(s4H'D&=P65D]/Pr'C+7J%op*ec"s.m=5L<]0=+8B8PL[o?eQjPtd*:9onEE+0>Q@Bh-,=1<m[
%Z$"TR$*:JL6tb?;beWUIm$@d3ft*;d<X"\%Rat\G6,-C+#s<$ChD[hk:k<@4-`Y$(8.08X(NkMR>l^p@#k>=L-fCj7^l1\sU*>dC
%-gOM4@Jkdi[TSi/T`qeDISb1'Ar%4%K@:2fdoAC:^hpq!:i+2=3J[]q@roW`s#GG<SQh6s47!:O%Ws4-F<Q)h1Abs.DIh\@YiQ87
%QgI\g*k5uT(hr?gG:rkG1,AU,Z$J5.C=^K[G@Ui/_&sQ9K\t\?Q6/i1\.#^I^Yit.RK(_MBH&9u?h!D+(rq%/[<6l6qgF+n7F0nH
%j4kAbECWB1H;Hr/(LDW\8\i4Hq!I$b3,Y"ff#q-Xna$o,'1T$:^+]9\!UobII37s627bSQ#RTC<$MsBU?MKnl8p,@8U/ZMU-%(3V
%iX54)J&8Zj)']R4N)*-[C@)5Sms;hIj6t<Bc3RZrHE5k7,iRL6gCYgZ(OR1=L\F#gE51RP]AlJ;!<7rb,k'SDX8:a+IE;dsj[_=(
%>_B=Pi;u',$VEMA&ZG,@l<N-M>`m2J/d^?%lFbG(=2Ie_lL5Khf-OM&L0`Tj/TL7O9>UL%U9ZjSdG456T"II`Z@Cj/XMn1>=2.8C
%@7[GB?D_AnIQ7nQl^htGZa1Hl_d$+MOpp3b4teu%&q9lD_S6!E`,G$kheIVFT2V;?444h6/jn[<W>ogFi3^&mQu0lTo5H:M$<-nV
%R%1Z`T$r*G16_Ro)`PAdc1rplG!S_."S^[4#Ba3EfZWPuQ?BrI7dk]mE#DdghStA>.hJY!\-q_>@L\.W>n=h4am!D+huCaenCQLS
%TXMjUFbsjg8's8\=@)e<k*JQqF3-)m?uNrrGX[[u$F?iqGi3\n2o(S>r@ZuL;JV7RpBdTg5TI/M9uhB-IfnK@DR7Y813mA$)Q&se
%)8+Q9&VV>#!oispiu01`<^iI\5K%!%bi=]?X$5TT`H9h9&Vg(&E1PNbQOSDh+1<;@_GqTJ1+ub+7Usn@A'FX,2f&/CWMJQ&Rrp:?
%lGrDrn,(B'L>P[Me^^6%0=[E1L2n2Whu*geUJ`d=48^V/W->>F##`BKY-Ot`]WTG[huPK]^L2f>k0VofEGrKbSEcW\VJMSPIQ>`o
%2dF$XI\6R52c?WFor1tT^n\MaIGmH@2r#W:a*gBujj7Z+3-ibLbq3"Nk#\ss]2M`oI@60r]itS[S%BgbF2#EtS,S2X_!kQ0T(hY-
%0h_<2)bKla\6Nhh_&l.5p"@g\oN#5+O60)_?_?+`@E*-sP0FVopt8)KHajO=dWT?D=\B8Y/:?&3CRpJ]Fm.`@4M+hGEg@#faI7[.
%GZ:ESYuH-^AkLt=/Qk8h@_1LS<8H_F%@==#s1$qt%_XmZi&s^CN`/7SBsZgG.gKFcgr"f;Xfac^]#2gW)PH\L>jfrCY-CK&8,mp[
%#'E/="ghbYpVn^QE#V]mn9N+D-7*bdH3Rs),jE?:@GM.b]$CYGYY^-_EEnu&HfK&scDoTA[csD9G@U^bgHi?Nn`gS>^8g5Z4A:Uh
%LC5,L)W8/eL3=>ni>#IXIZDW`97NQe94]$XRGjj)Wa:eaGT'kkq1uM5g;<!QDU"H@1>-[B\g;OgRR?90r\BpZP;7F,e2@.594JMJ
%:<i'BE+ABS3Bf):V':TiNcl1sBT2n<7J?X(g0#\YB/:1JcEb:oA@1q4cZMCFSJfZ!c@g,`cAXR5H%W[F.G@oMT)F[mhY:s^5,+VB
%BAE+JLj%e4/9J6f3t#YI5,+TZ7_HO3SRk'9]VD%loQKsF1>5kLmDpuGdK4!\Wa@-lDgSp"#NEOG['O-6=O6f#G'8]Q1Zkac:4U%I
%nBu"5#,Z'H`cJM._`c][n6W7\g'Q+8h\>G\I$M6447O?ZBP+VM5-BoIZkG7CqmApUqmGA,g7t2=08n6=BIDs:/9DE$/#cklXRerl
%o>;?t_O[Onkha1IpYVN3E#7#lFb@$%7g(XJ69ZL7Xln8[4q-m#"/c(OgMCT1jtZ($hOi@dq8q;"E*R/hG67-5]u$>Ul0.ZQ$G`qP
%?ne3S/[&icb]Bn5ZkMA<c^"fe"K_86mF7,7ma4c1O1IhC+!@>L):-^U%JPC?J61F!SN>X#MKWST@SBO0@d_W*RB_t-%Yjh1-];%(
%Uq/g5p1a_-ACI_h3S8R0]s1<V0Ni@K\booNep#\%fi5`Vq\JdZGCmM=kAGV5Xh]tnNd'@T5tthicN4a!nHaBrC9\PCl4NM:YVFEn
%^pAi7Gm$6Jn6Xmo^_?KC[oLm5N\P8VG\/W74;5F44EoQ^ScDE1"?\Dlj*CkkA]2V6i/)ANLHu8l@MTaX+qa=_XKB)&2h7_HO+?CV
%kt^3Y!Dci?l<B1?gu(0WXr9LgZ;1MI>Ed*Ka_d@6llPKUI;pe#bFNeq;"l]AVabhTAperSSO)61JnOg^#Ml8iS\Y2Wl(DcN3>+-\
%4oXD]_i&a=n+Fl=q]C=`:]F9_FnM)Npb2Z^$'/\ib$Mgl^tZ.TSW8Hb>?73fhu3j7ggI\8@M;hsS(^9>Z&G)a4,A6'0=k.IiI?46
%pZ<4*DuMba?sSEP0fB8dH[Lb3IhVVs0[u-M-)14b)%]$AJSE?#n@q,*IX(iP:=5tb<lt?XI=21smP"V8k<K!%^]*rarpikb-[K6a
%Q4<cT5Q3lsrSRUX^\jG5rqXn?r\+<DTE"W:J,.Zf>):*3lEWK=H[G:Ts8:oLs5fmPqChm-0E:his7O/+q9RU?%fYGe&0ClCQd[&U
%#;ge?rrL@B5QA8VErd@Ys+>cT-CqqU4cV0krqjIu9l?4!r>bLfrqX&'qu?Ub[P%RJq*lH@L#EMkbND+dO/[3VJ+n'[4PkkBI?%XC
%9)(0I^EN^<5M=MpdOb.ApY#71:]KlIW;l[cs5j!ir9aBCoWr[*rK.rkGk?L^Vgh*Yl2UE`s+6PDs6]:NL%b9=;>GPd\G[EUhuDOT
%l[R6Ye\>UI/Q)lrqtts>bJ3u:p](*OT6E'g^\Z>l#D8QQpj[Sogo&a8Vo"+BGSk^^+ATMkrH@@PO>QL^IE0BV=8$%r`$p!0&Y.aa
%%X2B1`H?u$5E5OXfg;M5PWQkX@=`;`\h22WpV.`_c+3/_hk`/jl-NSO?aF]Q3\L`C_`_+NRpqCbla"%qFim]o_V(j7G48T2[1en#
%#^,%Ea^t6`h;2O*r$hA]n\?0^"7b'F5(qt)Wg1.!f_g:ZGcL'1i2+)e%'Ee^YENlI%LSI\_suGl6TEQ)l<MfR$Vi)LLd%8uT=nK)
%j;GunE-c3p^7J*;ef#U35M`NT#sc>_]09)2NT<\e_*>d7doUdaEY\V7VmedBk@_MNVn^&l_?0bnV+<6@`-k>R4J*K-clB_!:GpuF
%$ocp3pK_aF&>]24\.$-s:Eq(.FUhaqdK9b-?#P2pnU&AjT.[T*)u%JmFq;S7lsh>bdo\5/)@QmpPO-pWSFEB^!sF*9B?fr/$D^gO
%o,J:&FsS,j2fqOXOe9@j\'3@>%*GrP&*s=da:-s-*Zr4<&J`mVle1EJd2a8eX?0l58A[a0?6AcJ9AI-OfhqQ\':ODt,3ljJl79^8
%VdFBA5h'J1MmWM+TUU+ro@I4(XZsbqQnUJ&AP)+Z%Z&,PT+hUX+8-]Ko>ARgmqr'.K]XG;)/:hB\7kVObM;8a078-Eh@+24<[PZI
%!s\2m03pDR8"?_1^i"D6q;LKa^,RM0A/>4,KtK)#S0/6N7`PJ(T`P/4:rNT&j<af(>ODH:\^u+W7VrbIkD@49&MI/oe!dUh1FO;9
%;\07j6i?G@c&QuUHk[)I5r9i0,iC4k[Z&E.1Dj;h8uoAS.,$Ln@k'?'^fujp"!a=_J+Hge5+#^lqs;hka)EJrD[2UT(]6BX(jjTt
%>*HCV,Z!6`q;eGAfQ;FLJK3/U+F3%JO,&cU0bFj/0._^+mIW%NLO4+Tj0PLX6CKZ_Jaeh<nGA!E#A=Jg$^>U;\=ZP:Xue?B&0/%0
%O[-/u*_qBaLOgg.^jKgtSgHPDKFd-SrJW)K0?*(MLF.i!kMi,+p%")@f?g$[/@D,/rNbe5I,*&n"[:kaieBQakX!0dj!sMSpBK>6
%o(Sk:ZV'Y&E(be$YA-:[qsJ#GICU-*[>->?HG+mEftPuRs8M@ED'S/OG4ke1!;u;TAtd9[/"N=dB=A9$7)BP"4>%^V--bPCU?ajf
%hj;7Do27V!(A+3"WSi%B%\DSi`$A.!N>)E?'i.bsW.MGSPN0A^`#B,$CY92"=)S:Djn`WZf!ORN9di]1iM;e\Daak_?RiLpmg1GS
%p)#=+WH2=r96q/?;aRM._W_<#&Hjdp]N>UNkNJH1dk=bh.+MCsqHJq-Mfh._gMGtnXp/F1`T=)QZdXC58IFR,kSF>,6(-1b57H.X
%+8]9Y<?:N/SGB8[d=MRDe]2kW=lGb:8N<9$O=(H,hY!DmdhCsel[X6+3Za2KJk]S.%2;t?_.-;]Q(4IB1kZ9Fo<Z]\n`3!@$h!9R
%Zn1>6[_j3\rG[(Gk%""QLhSs=47*7,EZOCknr-LogVB`MK]_*>YNAF#eA>.<I<*4M/8I8hfp\(c`-P^n4-"j#*RlV'4[.\A/*l2n
%IX)FA:#Fgsl"iM2MijplMXrhmI7nF\Y7\5)?N4h;h60$@&5"?ETZWbUi'E/IfC^ud?5*"bIK+9Jb=k8\[KB+k[fLRp"9(LPcN6Uc
%.CD)37r+9R"M22Ca+=7nSg=mXJOX&Y,Z33*2<20FmaEit#Tt#pqZ7i^lBKJ2YQr^#qMO%2rqnO?VhL#4ERVuW*Wa=OGJgUjLgMjb
%-3B:,S9k5T.L?A?oV<\0_2!Vul/PnieXhi2<`!PW49U'uFiKp+%HY;3n/*&Y7.#_c]aO><e1UoBFa*<a-`9gu$G\LS#Zq`qJ.ut$
%p.O'*LOVW8.K4k?3)=m'8Q5qHV"<6DWqeD7r9k*/D_LLJ>V:ZlD:BV16NVHG*S1F^W7Y38rHCU&(h7(`[6SSJ<36]uo@0G:K1.2V
%H#Xi%c'J*'$RQo!B]bbt<`GWCXfp#)3!2g0!?0V*nOnMeLlu+;@['ZP;`]In%ANeWDR9'.M>I\`]UG^LE[_,r)Y;/<-=aAu!%tPm
%jLC4E)W^5<l/FtM!Ih(YQRES)J?q/k'BXi@Y^s*6\o!N*(Y5U`&W.UqKE\^:Ne$.n[cr`RMG<R31Z67I-,;C;'\cZf*VdWAW/4XB
%j7&]+Vt8MjQf[,WPb`uYM60bEZ^3#B!YVeus1K(2O6/X6Mu6e0X4[KCgi>4tIJXE=4An,aZ<o\Rl>LOg-TQaSSRt,t*)u^^%Y5WR
%-AV,4[rC1/:#EuLnXW0tS::bh=Xf6mM^R`>a0AFd6tMZ&)oQB0,'.c&Z;!?&\X%D1l[tbXh$k6;H,Jf)J(`D#iei((]79ltSataV
%KT.M8M+Qu_p$8FuNdgNE%ui>\O01\FQXmS(Si>@G5boY"$a)rF-05_,7p46*1k&$XFBs!?C?Sj([ba"tqIilsdeTr@pq09&5U29q
%D!;FsIp#GGf8.D7G,@+0P/ss*!W_\s\kZ:UML\D7T;IF^FRXCg3)PWkDs2STP!9Z1\fReF<.&'['M8;?2]-Fqs7;3X6"g'Td@BB0
%CtN<#9k1L?3@nlbqdaMM:^ji/_+$Y9N>]1H'ZEo9/G<e5!YKH[?6Z<dVnM3bKPE"1CVK/0Y)^*:La]\I-_Un^Q!fn?d?qW8@LCrV
%k?+$ai(#Lha+]#lc;.16d8[jr$]eg;0]NiGo'XX-f?lVX%K&7_59CEl,ei70F@4<KilCR@6X@NW:#B):9)RVi8<%%\d+;ed4A5f2
%a=\b9Cmb2b*(/c^jG`9/<eQ.Qr7=B_J,!@U/pTuP%6o/]KlO+go0Q$3mZVg$H0rXIb5ue4^T0#&%"B,I;?q?!-Don8't:4Q/`:G9
%Ip19e+l/-@:NQ8SK?l_?>Z`kT#n96g*OVj0<2tlIIIW,&;eo:"qpFfio.5?d>"W!'Ws0JlfGfVkJ'r?d'+C^;r4SE\0e^eCck2N-
%P9iV@+.619OlJ^$<+#qIMLlWiJY1;oG'Za`l;A'0S5jVrDXcjp>W5C9W*Gg3lYe1[$2_X7N0rESJu?U-1:XKKq.bl.$^M#V:@$*[
%?kGu`3*f0pJMG1Y&MtcITaW!LF6Na+GR]%]/:26A^l&I^g`ZHF$L4r>8l_G,W9/9m6I7Tn!FWZiH&g15>;pG62cr]FcX1'EkefAm
%1mqbW`U397hb[#,h)b4FK0jUnptrr,F8^FFm8kmIFCXF2DIaR.Pa&RoY'9?8:$7D&UIUQXdSVZrELNo-O*/M5.d-YQPDSr$I;fpm
%'A"r)d&<c\.ZH*k#@;[)0L$K:`(H$2?"8j1GlNo,\.+c+$U:8ir#HSHpk<p)"$g,FjKK0B/eC@GH&2/rT"Qdgm<I["$A6tRIN4,@
%H7?)Ce".AaBRRVPT:];-h7a?%82bbQ@M1OK^,IAJlh_`N)5ohb(&!f6m%RoOe4'XUWAN6[F4d)YPTj4VTi)he9[O85gMd>Dr)gY`
%\98J#M/jV6,gVW>!8#CX@U3E4g\&+rN>SbkdeSL\MJKV#WOS;1ieb%Qe$:7b>W.8c"O'Z5b(%gr<tdiNL:jCe:u/TaFR;u0C!,>"
%(_^4]T;Qgu9VEP8jP_>Gi"EIn4un,MiQ^LN*N+Pdr#<A9QY\Y#bM^ibnKV$&im\`LBG@).)^b/qirA5oj4T^R/saD/_I>B.a6[V*
%OeY("a0S8UR.45HK][UaP:;1L=U@$.(.><DCkR3`+^]`8D>s/%\[:MQA2u)!C:nL*_+Uhfr3/+>^0*TS[.UeP2LJ]ZnHZ_8C;\?*
%g=>Tf]NDr`\%I.3O^2(X:4sg=SJ,h;l\R1BYoUCS!fJ90I`c!6&tM/Df=;=>'RIp:0B[3@3o2Lb)?Ho-Mn[2UJS?kAh^@fe+71#]
%:ZdE/ADR]$g1)aR>K"tG[^eN6;FF4?l(S&<Pn<*<H;A+:K1SuJ=3,MJVD@P`D(YqJNTld!GhURohs&;i%`0g_^HZ`!i476dR_$3K
%hf*qgcS+b=+`.1cl)X_0Rps61X:GXgn9qk)msf=+0BT]p\:bjqh]MXe;[]1Yp)_qJ+4)4WjZKp4Z04kU:0EZ0Y,iMh$[dW;f$Wbh
%.*0cl&+a0na]Vil^;Y"V/c-K%%:rRNe$"DC+l_dk^c16G5IrZ;&4WPKBbc,@=`%U6%qUY?bbg,:Q4Yd;[%pE7"1'J+\.s1`m3+Q'
%q*p;]ZbS)P:oepdTUgr4lK\Jm^&/-8qA6Q2,pi*EN]*5/5crEQY)tX\W'QOg%Wj9`AGKnZAX$odH!GG?MZdusVd%j7o\k/m2"?W+
%Hg,*!1uKE.XC;Gn_r38WdSu;/2e$3=LfR\%:0]o&B\_G=FMITIJ^IqZm;S>!p?E*5g0'FtM'Vic0Q*5%-5X]F+-\[>?PIrO2ND^k
%T3jM=c;_LOJn=M1qu/8_)'eP=4.6;.]iF+OH;4FdmS>0D?S(FB>g$h4*ar/&XUTRE_5l&8hiHE-UCZ3pX9dlr/L>Z,1hd?U*%l.'
%m<nF5?310<#P$Tlb$HHJ10S^([erF@,AP!h)sAki3*Z;h57F"Dct?0)X-p)TESF,N+#n/QC5pDe)`ROh$oERF)ZHKZWM@ML>kD-W
%3Q$ENU3P\3cne4l40RuCY[=j/>"qc;CACcLIn:Z.UuY4A/B/lLhsAV*W_k%(HHY29#GkD8CKkI1MO:OsirWP8ET_!XA5*iJ_eo#+
%hOD8`)/E(lEp$f2Q6?T+_OU[.XmT)YA%5]176Wc/4)87+n"$J\=@kl`L]mNRn'N&gEX)B1;<;b'S?BD%gCHF*5%X=!?uEKR_PaV!
%>tXA7:B/q^K[J=!@[Md68p>KnXSP#cZD9(Zc&E'J_OADkq"G(q48T%:jco4Aos.$%4]9tG=O[ro!mdD%jXP3)m?(P^#l_&BoGqoc
%,sZKngu^36kC\`;iXlX#c@V>eBCe'hej=6oeC_5q<qfs]?!X`F*2/o]grQ0JkaA9Q,nG?>?/2@:o+>E*ktnd*'ZA!$e7@_N(9-,L
%U:sq0m,?5PC?[B+Ct2EkCS5@!^7ciOa#L@Q2`VaA'&ua'7c3,Y]["M0?\,8DZT4pbAFG>4T9g8Z#B,7&\N&4GerZANfeL@!d16o>
%F3n;o%g8aVm`9KN@&$jY4[2Q>$MKrj#dqktd?ej#%A&h%Q?p1DT![h[H9tj3i.0uMrNH/mDt27@.HLB%p\W2"@mu'u\.0]&QOA4!
%'b'N2d:S7O8bJ@:js,U"'hZhSVI//?3[qY>bI+kYXS*B^`e3KrHgcTF;qC3g'.k2V_R++T>EA3KD9mhF8s(0]3n'H__%Yb2/HV2V
%l?kIe3GV`g'hTDQ.mp:\J]rJ,BbjgeBMnBN8kqatYkW;,\'D4Ee0?<ZFr<V/=,ZNc*l!>#Wgaj;Z[Y'YT#]]+c`:-@-XIkY<o=)E
%6Zp\5$Q,1Ee_1s55-cdU0S!$kl8O%j#moG2/$GW?i3^oB!Z=D31_Y0n/l9.@PopQb_/6nn0M:Qo8Qp`4FUpl%2de8>.&HEE]FYkD
%f=E1o]T>K&5"_?AK*@errTe?^#YnP<+$R1Bp#iudFH=V#'Q9/V8GMo+#8saQna/6+hu=.@+`e[Bf+lK0Y%JHT[U;rFNjg8sL$_tn
%Ktk/:'#&huDR](ghVdm^hJfY':EE/5SCuS*f:YKgP\m'EdkQHU&eC&mZd[fWK0:&&oSq!.OBt,#(5oeO@fN72K(HkkRMR:-SkZ,>
%3CaZURIk]XF7^U0079Nm4dRM.q*m0-h0B=a-)?5`q$#[2Grop34D;dO[53<(n1Go*kl*]L"X>jClBB>JCAp?^l>YM*SVO?4%Y)(]
%YX!@`%!UP_4H4N.k<Y'1bJ1htUB8kNC9Gr)9QM*H5%g(]ID4\;>].'tj[9cbLS+AHCP6V8/s1ZDY'i&Q.\hsCADVNs;Ei=eoW7%7
%Rg88TV:gg`\P4F0rJTP_iKZ(+kc!5gD`>t?+HJW>AU/0-=C03XhT(9c-JsKE(uZ^d\ni!M3d?m5Z-kFqn)kPnJS'&e5UP9h5#VeU
%OeSb]JcN7=Z6pePNpU<&E:VuKfk]:r9"$`O%E4kKJ/anlV\[q(9FMj&8nSh1iB[m^cs7APM0:p-/`R=El([I-3^0h^.HFNl7.HbK
%&0q%L<j*<YC/.pC2.2EaL?T*(Fe^d[V-+go-Y^[6[$L.i[U;?k\GM&pJbVnFTjZrKTAhZ>8SNLo=8]c@20Zs]&:JmEgBHIIP2:rE
%CO++s(5'@$h6m1C@(Te.p".'RR*dl'b-0)tSg/'Xp%Q+(3VE&9kE"`jbp/i\k39_'W--!.1maOcfUoiYS6kJi?[`31;!,i+i;MSe
%O/"^*/$]B;P12V@!/9LO,u8d9[$[I]]QqC4q7/i\T9b;YR`/M>PikZUOu]E/`HET)V0K2u8&s+q6.+!"#SSJ<PIS3RAd`O$.(n[N
%S'<<C;89`Ea0Ta2SFc:%c59\Z7K?0r27_VC3cC"=JgEUc-((J?P]A$CqlPnVo==[iN2\uG,C1<2*OpIPaaj\17o?MP1RJdf2EYOr
%A=P(T1:ADf<Jh6qg-'DPPQ[DHMl)H1,fgBID@9N`/Wl]hEbd47T:Uc07>@4A,g:#FR5tCn'&9^f.u@E,Qh6-/<l+Ah/8^L,QB73u
%S</j&R,T%&RTPM@GL+!DQ,Z6rB%/nN&B+eSr\fr4PP!Ak"a3`FbE$p5/sPg!Zn'PV+t4T7nET]*%@rKDKUIoEo`2/)!4!XuG3MEt
%_@dJllR(WZBs2B1dWhWJcs1!K!l3GaQFBPZba+AF)u0SuOT9>hjJ(<-a@OJl$,E/>$'TL$;F8517RBG]F$da(>=([S>3$p(O_sn"
%kpmr"+an:i,G`H7ne';4dUAFg4Rs*4lHGcZOHsoj6:,#Ml%K$e+>XWCZ7o!K8B>71hr(@TkXD!a^pX-Wc&q8q>ds'C_)r_=0Zj6Y
%NZ_F,D1)!.Ma@10F9LMfW6g10Z^E)F&Hm3>0X;;O>j6@=H<EHD^K^b$q&SlHR_U.[^IKisP7[fk&^4bg"\ErN14nFm>[&LH!P:EE
%2&Y?R1)XN<;_l2l2_TCO3@6!3Z/oMLr#na'aIg[eKKMIZ)'Md&P7c6E1D_2f:sMMNX6I/#C!E''OQ@^b,%P+Sl7\rnW<c'^F!a5>
%AnE54WSb)R6\BlsVPNnXgV9!BD!_bD^VB1@$/U[?pY0$i?m[Jec(#`GH,ZEP'&T#%nM&>p\l86&DCP)@q<0#0.D6GiBbCZfRN'[W
%M*Xj!3!XNtdh+Z<<19j+kOCN]V<?EimVt;(0@"fMkBpj,!cNOXds;k&$(fA"KOmM'_:ahV36X>j_(oW?N5K9CP'+X#_o+*@3A]\L
%[1Dj,[PXHoLW)F?GP$ZQ7oCCrV.4ggXkf'XW14Kb<@a+m]cpK4j:\s?EZ*2X>fL9.B/UZU.F<p7=sgB+N/L(T1.q>i2KNT"be;[5
%#GFnUCg>+pKNphbhqMd"jRVHSQJ=H_dP@)=h%eo7@@QF$2C[Zpa5&^"9iPZ/B1Y!A/@lK\q/"'1l1L@*)$_iROr_J76JfpGi!32^
%c&;a<nOAseK%5'S.Ic18Fr\<=K/5T,#K)SFGdcXU]MK%8kJE<RA(qF&oGqA]V(W<G/ksZ(aJG<#+d]&g%(W`/RirS`8NSQ,H!!C)
%5dDCHZ4pnUa;g2G>sZhr)^+S!rd=?qX..d^!&%Xa_iVL<;7ZI+eolDF]lG#T:'B^hLEQmbW.UG96gr>=Q5i0U^Rd#;S11l7H)1Rs
%T>nS"$RDQM?E)k@bX&G]"]l9FHo'jejRkB(\Jq/pD`1Nh^qSus5/8l617h4N*B-nLrEP_1Bl'7fQTcZg\b+!Pb,+pe9Y!!J@EPE\
%%pLY<d:URuoqX1+Q9C2;,U8d5QNSf&^lZ2_k)u*Lem+C&Yi_,<Dn>bDa$8:!U]5W\n(Js'hZAEhDWQQN#`lXH+`ko/R-'Zojs>2h
%?%,nZEc;]LH)1U%`0=bEbn\k5G^?g^W(ccN.Bdi,5O6@R&`'h4dSWSCSN3rsa!7i'n$j2L[_u&X"`0<<Wk"i@CC27?YnS9BW3kPm
%-Fbk:1f&!]/5>VG7=SFg%lFJQ2ei`q8<9>I-PlB/$8$$<lUfPLHKE9!lR]K.aEm'I1:To7X9[*tDOIS]&kA8%\WQQ8(ZJ'<6^=F)
%44;2r;Q#KgK:qPhduNoK.p]>30@c<\NYLJfS$D!la<"u@)"A8ciJasQ7F$(^T!V]>iJ>oK9a>aB8Cksd,3qDM^7KgMZJG[/=g(?>
%KNpYKeT6SheO'L$^U7UT*p2%bKl('X/5Bbj%'R?g3mB!kohZTC2BEmA)Bh&%9l0P11`.7NcTbq*m9m0kG2,_N,/?P6P-O\U\<cG%
%EqMhdQkO@B4ig<m+5"7/2;'/W+tb=C!;DA^Te]o`U?q)2$,_\D1:VYY?%Y_`7b0p=`"o5$\fO[*1)rVHeq8qOg#2.PkT-HY.T]E#
%Fuj;A4c%"M/,kFSF<s7N7b0pI]A7TVeI5[U]D5ee?G6,E\geUs&,#6XW)PPFUh^mJK#Z<XH:8%P)QZ"9>eM.:Z6$dq(:JgfBD,sB
%=V!l(9UrESUI[o96>K]'Zd[RHeUs<pHg/Q#PA[jAYEGs<U[CHfoqY$MOkMQl:V+tW`6#Q9d\LjY$]M,6*=DUME:k>]4Yls&mqHSU
%<tATQ,IA7l4m<a-]Fj8j!NY;S)-9U!VB_;*QXT(Baj5b8;bSllj,"FK4j6p"f>X\7R-jQgk'T/[T'Rnj6$4D5kD3\3kCTC=U.8M(
%iAjEp_tuSe/H+%0LugkC"rD`_0`geh^)7(rhZ#><C(AK]#qKq+S_3dFFV'9iJ&^b&[W(PTm?j\beDeG$>=FKsA!]cWdi*oEBOkJ[
%8.#m!Q4mgUk,i!EKTt0h%6Vn\p7BSi3,\+o3C&m!q1`hV.59i>l#]"Y`jreG,OT4C$Q"`a(W@T_Vi-8b.m&c.<tJ>HjJ,a.*m5TG
%QU<d2*I9*]5'hN@?-J@cLJ*]oMIu,3PHX&DY/VL'pcr2^_,!]1_lZJB'#Wp1nBXMk/Z6pSgnZ=7`mkf$DX]^81cE='.[,KL;Di6i
%6'$dom;Tp:"3$sR[P[^-E+<;'U8C(41C.-,T%AuUD,AoI!^qA+Ca(A0kD3f,'7YQl1+HHBZNUGh5^q+H]57_."a:WhG49X4Z2Ab@
%4Lh"!VhSAJQlM0%U><&OoqC$8gV$UT]K3_B4j.,:<GeQnL<Z2N2:U4=)-8]?X.a%ll+Yd8&o4M@i3R]I+?TLJVS8]dXS`,,K@\50
%\blg^;c?PaU_U5$G$HZY59IC;$e8SCbVHH?6it^k.TiI/XneI"iL7.BQ:Vtj"jh=4N,B_bT7CPYrTgVM8RDBM;UTfP]M4+Q!)[pB
%)RXq4:Tr(HdA`Zj$NGLheaY1-1I%%qdV:h5L"TQ6>GanJ!/.Q)Sm.Y,.Ion,?SK8aFSKf*`KpKe"!6\[D(@jdp,?"s#fHZ2$kF0`
%4qWf5,I\2c'RJp]b2B7-2tD].2240gPU0!GA7l[MLP-VoroXs`mY_6NC$2!RY+.Gl)ml0b0!1]kQ&g%nCIBSI(TQMeiZj,&h[+1C
%is1Le-EhOBMpNb(&mjn_bMg[qUcmV8G)IcUaH`'4i%RlQK`:2d4U-8e.($c`$0%u&I"p,):?#KP*a9S=D9*I[\=tgi][)9ErndWS
%*J0eAbP)4tl`kAXJ6G2Di(4]S#i(K]p4mD3N,X0!Q`dH^WJ\e^::KI6PEj9BaKW?XQi!QQJGUd^\Ai:YWeT><.SI`AW:uEugA6)&
%Zm*cAerQdk7lu'rB2?dShT:)qfiFcO0l1#ldPd?(F&T*I#nX>PX^6KW=(c$"FMTR_irttG>(+7(%Qcm#X&f7`,Fo<O@7*teS3.>:
%C3CY]3Rk^9&&8t&`P_#@"!?WM-3HC.9Kn[g^4WK2/%pM@JGX##21@=+CW4,#)X&uC`T959c!.WpYUR%jp"S>KCpT3%?M%K9U`@B3
%,N5-NMXof"%-ARk%$B+m4MhL='NZC&dP\/@lIkA;UT@sP5$Tj-f!7JWE7%n,";19J@6ld>Q%%i-6@5UgpO3W<=r9]4fcJ-nT)@H>
%$YljE'DWe1g^h\i\b,40_IA]8+rSTr%11q!]aQL`dQZVo;T"N!;?Ij.p.2:4UkTdR^Qd2t.I'S2d@:F*d7Y7bVDOtG=1I98V#akJ
%_[s,<"tWRY-C:Sd?nD`mAs(Pmf"G/SnMNT8i5m+=-&Cnqb[nZcPI$uNg)o>/>jf,H-+X7-?C/q`3ibqdJoEJ`pkT9D3gjY4*9FSE
%2UStk@ZA[#c.4(^(pf(?fD1r]ZobbM%"/*;[oR`7#O:r!Du5M$9d(SPWCeOK;"H1fXrOt^AR4.Z:"5ccTgXrsK@_0F6^bbqLGInh
%%V:6if:eGc&`cDb*D1FA3$TQh3g=<_G!r0:X[?7#!\m_L#+[@nPtMgc7.7NQj40k;BXlIDB"ZjQ7R2hH/c#aM$oU:S=!X&H+\K*O
%M@@'E7#;+;Q+!uh2/#0q0H7t<;;U4>kA(d+X<X(;o_gso50Mr$gMqt&o7OOWF)%un-,:BY#[3&tTU1GZPpkt>hJTA^$1Jpn9Pa@f
%%Rqa:_.eot`C[/%f/s"m7jZ<:HR2:+5k19tX@+Lq^IZX^,t`!?6<B"DU6KOIj>1"J#sp?aY`:,2&rQ)8HNq>2(^BhZk/aAI+Y8>E
%JsE'`U]eBM8l>"aPbQt'-om]nq)]Xo-o9.HP`VZ_>V[fu#r.rl;FN$,aDsmBdo)G*E0^NFV=`>GgGL:\CbA/E5;ee%h!ld]RIJ<r
%PQJ.HSX#oPkkW6/'IE5d#E\'M"'d+8R,NpVXMN$hXZBPgFg;]-^looX.n*V8)_Xi]6CpdpO_XQY\oHr8(+#EK79/*@74D]g_bU.V
%k^Qd1peANsFic?_Cl&Ud'lobuA1>[4AL+SrV<l;Pd&!Qedh5HBU>4?`8l:&!LQA8[d11EJh]>PaR`P<s>i&k/B:@GbZ5)Be26SUg
%9Wr`\othjCR0s]</*JcbpuYe`SbhU^n1aP0pO'ueDnI8W3eAOtna/IcV,MkpdjV]7I)It)H,eZM%P3M8W5lQfZVClS4Q[CHd88K\
%17(EW):?+T's1GZf=8R=EJ3?13_l]&PJnG#bLpHuna&$ORp1QVe7FYKN:=lTi4YuZkq]GrPSth9_r:R+iV\gB>;U8bM<F,b\s+@C
%Y&MOf[;rgPfGeS1FISV[.\@0J6NQQ07rN4t*=SQB`OUK4:&'Yd#P=qm@Ua;)`m%ukJ<(n4"OJrfn2XrpPfl-+bD3DS@Y(+*1LPNQ
%Y9F28ARK:g\\+j?a('f1g)BAol[CejRa9.""f,VQ=jpQ/AO\]]Cb8_T2gu^UbbcCi&#7NN<"cIIHT-1E7QMfAe_^r6&'ErbLuL2a
%@FemqE]:G]m'4;i1'_!/dL#,K>-Xul*-D6/9sEia=VC<C2MU"e!1ju9Q/r)mLuR[e1=(2r:3Q0[E,kS$R/HBpn-3!_B#D'%ppfNA
%@S,:@Ss)$X:QolqUKfiBi)@'L_pHu\2e[WF`JcI)V<#]gX"BN\U/8-6i[Q@%n49@.N!8#hXs,frdb<a?ei3^ULDC0BhN:.^+AjuD
%op+WFE#BoifP"k#EA\XV_Gg"aN)Z7?WBd31d7HtsBtaRo1jE]*q-85hr*'<#6jYXUm7>U'+M!htR6J9?-h'P/p2$Z**".INW79u<
%]MS%XLVI7%$[hd?R-*QNmdKt%>BeX;]NRjpEdIEoEDB<G8ODm2EI)N,#Q70[/l=^C!Ra;eoL/?SHPGSp3:H0pM1X0t.DJBojKO56
%Y[5kOK-mnjB8JY!\V%EPcdVN9`Z*WMg:=`Ra-8q\IZEPi=f8sD:Bmd[>;bD-,&u-?(s7;9F"FqK@<U6!Q<$J>*6lfi#l(p2%U-)G
%#oo.IE.S8[%Zs2]=dXlV"&]H*Y"ABe!d?LAD!)3-M,I&B*@#-2Ro#MR;P`"\;dqTu;RC5Cl/_0;9mEi&5'ZOpCGJN.]%&%MJe!!O
%>;*4'&(5(Fgcdrp]BC2Od=;c&cu^2ZbR>L/D,GJ*NC1`2,#Ar<!N35Nk'.a%57a5n2F0YAe`5X.o$(IX(JnkO+PLA38Ardaaa7W0
%#Y1[GM^m'kMF+i<'U5GTg'5("KM9cWCK1jR8>X?R_gH^`)@qJ*9=qrH)DMm9rPYjP]r8*+,5_(Yr()ZND)i7?]p;^!j.R!%`id)M
%2KjFLJBYurNfHtE<-+\Y\M;OP/PE+nW#:asWmFNrHm^6oc(3o#o<a%=$rfYn=)#LZ@g3c8DhQ/9Ymfc:]Su$$]S&dA*en+FLQR[R
%D_'ddAjRPN-X;InOGEY.-e]++=J4Ig-u9=/LER2;27D].!?<t^FtcZ=n9U8mV!`,N9_7k']F<qM]F@[4GT6'l/E#'e`K26Fc-<nA
%Jm[#^]$(.Q?CT(>5_]i5lu_LVaIo(2RS;%!TiR<R["gQC<8JcY*Uh#2UWTt3YuE#<p'M`37BeN;n^-/HLg]&J@q^3^`rjmqVhOA[
%(jJ57,TT[rfLsc/Rd>QhN[Gp_8H7:`499(OMLuoo(g3WX`Y5kgntTgW.9M1sasdg^fm"I-ZLJu\Tb.(H0cMbT/LTT?Y@'+lra$r3
%jiPWdG^1@$gRKWRP4?ucbaaV..lfa10,ApjR4S`c9Y#Bk8!CK.8`7J>gU'<bL5#:/o:r8qS6J0gCKJDa4D?hqPo`Wpf17(YiE$q3
%1[!ahCVc>'?%I;I:0K7k5W<jb/fr<&atSt>iW1#J%QWoA)4i+=F7FdQKmCWU!<[R84!Mqg.oEH\bJfZW]R7'IiX$Hm!/_:<JWYkW
%nXPNHj-GdgIP,[2db)!5]_!A0MjHUfEq.TUCq4e)1(WO,V.i/]MjKanaLQP04V,lX9?Vc<(GEnOk130,PnY>EmpIVO'%/#&i['FF
%R#74uIoFNd*WCnaESk5NTutlDN+WC[II^o<_)M;K.b!n)gGd2Z>7-DlN8C[cOO*hI:]2n/(13t'$@U@%/"6]ENHjT)k%h^CJm`B.
%"2,0Y%+T=il[44\2Uunm^tI\%+&!t$52t4Njf4sB<n-u5;3:T1lWWEpRc?@8=Q!/QVQ5SDC@n8T)o0s<LfN5\40NgSpkh7jb4OQA
%o+D,lO2j$Ehu"7bT23YDYt.3),^/E&<qi(K8$B.9dhY$jE%.[!O84:@:DR9foKOm1C7V9eIf^+WSMC'R0,TC;m[3tYr'"MV^0d1c
%/@Cb/!'@tM@[R+L:Q$:FRf!DLbRi[6!'BR1hWFpG1KchE1P&JGs17i)A@i;JrrG?ShsT`Y!*R1ndf23Vdf5nX?dHL]oY2d;l$n:h
%+tE3aA@P\TSJ&O9?d#kr.K<0jpLM5lk5WQg/ER-$79X4I@e#oe#EZ?>,6(I#L(t9\p&^36?Vg]KJ5#uii0sWm5IQU)H\]:X<edpt
%(%6K.:e^p(Z)RDq*uhEM]7+SL)Y8_7n*JL:!!.Dn]pTK5JO^sNZe40%1]!_8qO`9C$dCL+:KBFe,s;3'"qft/2#g?P4rTK_Y7TXf
%F;9\'7qGkH(!;Pm)k9I3bY/?qRRO.oD)WM)f0g@fALb4QmS_7/"J0oICBgF_)!@a!#K#iB%Fs5uH/H`d(+PCI<h;<aW/c4$,Pl93
%<>C,5)?,uX5Cg5RlE"qOs2h'+%p^O^aU0luUs\6f=f]EQVoaFoYft.!m[qQtA]%Khr<(&cVk3c5Jn8_gF8nXiR%&*KT6ha^PQ1JZ
%,,77Hrs<"6<+Y:P&#s5OHq';!"C0.Vo]3ar[cBXn5]gBKZ'Fj7@E%RtR?o/`&iSVfh>oSVA+)5Bl-Mb@]>g$eN^[[\3;;$uBjGgG
%'al,9U+Rh6%3N\0FcIEV)r!Aj)jiU&)]g!.$p2L(I`uKfjLB>HR`C;'jL>5'3>q"i!DKs`jgY=2;:M'T2rM4dKH@tnrYOrn9b0k^
%^^j$N/I@JOQH=p*?u/LsDZ*g;cR*YeJ02T8;3"kINeu8^b&INN3]rSc#/!0'QiOh[%68;+=naCcgjkaT'r)a-!?9itb&P%1Mn&C+
%NgnsbGCJY`$0[LWkI<Z?Engd^fZ\tQ2QRMFj*\nhESGHm\-^_gPZBe^](dj.RMK@t!YWXq';:fZ@;O&G45SOh&rQ)8eF?[%DOBH7
%$BN5ANcqJ^Y>^INJ;#pcjg[H=Enh]q\SU"WJ&fZNgMl>cM.iF<?If2f@b>?;P2dmpm);Gbj!Gjsln7j)$7pN;\!9Z-\*[*-a6eGA
%j-F\*g]WRZiQ?-RYgHNHNgns5ptRlI!`%<1;3%,r;/DR=2phitcuP/9WX+d8PiJ&u,]h`D%l6s@DB`VT&U<EI!Na]/PT2Uo;lU;g
%\,ko.C,^M,l]TL:l&sco-fM]b?WT7*!,F&MZXTDL!Gc`2ne./Hp/lNZgciit-]VCq&cA9U$2D-klZlbu#CFsaGLFkIGXRprnIoO"
%G,)DX@&XdCdS9c`;$W5j'B$6jN->?iXPEZp3tX/P^<Xa5B*eg@SI"Eg&"RlqD-SPD:SaNehSVu5ZkEJ8=cq--2DENR2E]A^*k9Wn
%"DfVlBTW]3Gd1<nGpe2f->P+"6tRXs[4(JhcXS;naLi<1j[qXt'cPJk\esS;-St8qG\Ki^<T8kVc*?").V-(%!=]0&;0grs:4thl
%"EfD"4A!gGnHA=n%F?\uF8"hlm_fchSmdtB-c"KpF\TdA!0^;WQSuWY"j_HA!k2R:$Ld'4H1ug99<>c>!GBPPR',j\Y0X"`3!!gA
%MFX9lOM$d9B7<FDSo8l9SNLlQSHp&9L@$V(XbYd[Z#X9*fj4.g.Jq1C+emE:>A'\">&%2]WU*%cB-j+)`eg]U,b:m(Z:n(N"ZrK(
%T9E#*Qq8YESk(4>>Y-:E7O^;CS]KG5MiX'D,-(6l=P[5Kn!3]*KgosnRd?o6Y=\8'._Y(uMH^JKH=WSfnuTnk>\`Kq>Z3H>rsT]+
%Bd^]7IE.#sV:ON5G&j+<Fs:=&$8?0A,"r5[Kh=E=d&ZInmmKFl"=*;%7?l*:_j!oZF/PQk5giCc4OHg1:%Slj[$(`4@:S!6-]\o5
%QH@-"ETioU2ZBG7;e[VR:SQ^HdS9p=4<UPmLnYerGmj"-<*Ci/cq["-0qptbM5\S=W\3EM5D,_$g5.H\U)Vs'-Rr)T`bJLhG=7f]
%>7XM&j)n#8)>UF5"8oeQ<GMAub*=sF*[$q4-c/#c^=`he!52^TiKSZif=O^N`b-Kn@hID,l8p%1SGbUCnO0LGDg)B]%F=KGk\/33
%kSp,5\\7/NSk8YqDPVVeC[G\J"=rpr28G9oAJWS)XS_Z=;Zj8+GF9B-.Bh)>?Ir4X;f1Q[3!Y:]^Yt#jO#OC&VK;0:(tYNVbpPf*
%atd-g#DkVQCG]<l5GEK,m?t.MCKZ'\.s8MI:8`6sD`+HA\tU$(SPC'H:8a$uVc/33F@)=.0AT3tds;_hF/RJJF*,g":2"B*aPo(T
%dlK:/.%F&uA?oE!S^@62UbBp8`0EsKAt'FX]u-M$LV<4Q31X*Gg2B_6FM!Uf`o_BS_:0%?S5)"&U=<I.SQ;u;_s+Ogkab#;'>VV(
%bA]ME_m@gUdg7/#d->XTO^>Q.S:HBsBeCc`c3:&fBa;Q;,l$p[&`Hn[j76^Z>BmZJ1@?bB@"lQbbiQ30l20gfOtPiIN,C6qLr=NP
%/JjQ%TVk%kO/DhHF#^9H-VoK7BcXscU;?,5Jrj6bq+CT[3uIso*=on_T&]9apmX$6IhSX;8D-^X!j<jCOU-FM`-?G\e^WK0ms\6^
%ql%7fLJqO2lu:,)RN5-b*Y,*$LVl\Kp6dXj':,=3iEe+@?W6t;F#X3eli:]/-WrtUdLM$G1dUa6<.>Rc&J^_`hioBso/?\7_@NLB
%-BU#hP0Dgj(2;Wp^Ib5cV(p3QFG%&KcS;nG?1R)k7FSYhF=Xq:*[bd1PU[T@XKt+#q4#e>LVIP1p@("h&;Q>G-M3@C(Jm$[cpGIJ
%m6nY(YpFt#M'q,qrDX15DiO*f1(-m(DUUOT(*:7>Tc4bR_Db*n4m5O\s87Hr95An#B09C=k_sDLnuqi^T(]F\b6(Q#gtqW7h^lF!
%]7m_?:6ecd&(mA#eQ9?,dDD)2nSrn5UTI$(T5<J[Fa6TPjMNuF_kaP+$Gg?5,s5CVG_qdHUP4Jpl4:FP$gGjIX&7V"FoDS/7_8GP
%hZhoLSWW':^B'LVRTb1C^J[Qi4/GgJ0.cIdl61_XolnE"!C?MUSaDp:,?fS8YdaT9(e(j?o=)r__:3&II03dkHdb^<X$t.3p3@Q^
%8!!/bK8lG:JTo9Ph]DKarSa<^mi1d[`B5$OnTTSo00W-sm/;ZW`2iP(06$4QN<,o"F-dn<AT'<lK(5)"Vk>&gX_]r]@)DY65blj#
%I4sAq<q-F/JfCIbquP)6/(6!I!)jb"<q-E$U*bn4h/m`K:X-\oloV)B></R15D(AR*Z\*`8F-$YaSIA;j1iL5i\/%^r(!mK&!5>I
%]aQ%!e7+)2r8iQ`A)n.B;<l3&phu?8<W"YcbKYB.T0,<:m.Q"7YkJqm>7JTI[B4&+;h2]-$[Uiqb4'_>ds`QcM\eD0^f9CeJSXXD
%!=N$Q>#7qB.gUW2j&FrMQD?B5qiTU=HAtjR_dWYW`i4@?`QE4)itPnmAf4q8<2RZ61K'32i*Og%2,5m:WKO`rO9'YKCFX?S$cIXs
%>2p<!\)nL.ESBNH%l\l3s8Bkjp)9h/O!')M(R1k6QYN$SE7R"nq",K&!_/o]ei3gMd3=l9"ajZ[Gu6F26U<V26IMm1ppAQMJgF0C
%]<9m0505Le3(^tbJ^YY5qPGGpm$,?WVE6?`<MApX]7:r^<E?cDWPF50<Ee3X`%LmGCNWR@V!qm`PS9bL_ckkq\*oMVNTmHi*gTUs
%86+p@iPJ.&o]i;ZVLoeOeP1TB@ZP4Qd6t)5Wmsg"R&c]oGcGYmiEk>>^rRMDlD@kT?@/#WQd_C^T2:,neRab?hGcmcZ+Z-_2\h`s
%["$R_"d'cE"j<CXek/)'%UY;s45KSl>KLc,>UeH"?`2L7Q$$=?K1Ltkr+HpaY5SbIG9<fuWI2p_P?R:AM@e;$;6+$t]Z6e]km"'^
%VLi#i4R8L!Xj?j@nnWq>[]FD9pHIo4b'+Oh9XMO5J5IJTohB!Agfre29k?mYKuE;HWab=*5'hWU>q/`"[D&W=<biGgqPF;uq2uIf
%JWIX>dgE"b_H)DK?l*1c&uVJ>]Ub7Q30f-3D-nf5.MtC9'i"qH=NJAB*!SW3ASI!"4jOub@Yn%2.RBBP&uPg)a>$\m#/J(Ch^ias
%G]_,LOfVl9l0o%X42q?")><p(3\#kCbr$tl&<0N"^8Xf#GPq+0VQr#jo<Q($g1J*JEZLf'HnAbm]1I,)7lsno"hZHknre7FB=%gS
%(P+Y4T[$'7O^9dkkgp]k@(YJhA.V)gaX\7D%rRJ:I_Kep$kUZX7f@b7FjPD%QTC$a2Ue[hk2HnufFEA3,rQ`Znr%Maihnfpn-Y[k
%BJ>g1jDE>T0oYB=LJ,%LWPDG:5`>Kqo:(Q/D+WN--L)Clp24qH'F'U+WKL9.-"G=s@](9uGe=E7pPE)]M#]tSfC5)2j:SaB2UjjV
%a+1@DBD71pJU"Q&mIu*Wfrd!tG%d_]I)XLRfY-/t7!@Cl^^`QJVF^o6R_V+`HTR-tU5%B%pijVs$CY:`nZsb$gNEMd*+GD>^F'5%
%kYY\S(S@ScPi:6>TPeFX'8@9N9HjuS/,XX4Z'd&t=mX%i@4"q6J%Z&-(sI1/nD_?$XgNcocJk!7*"$u&9s\kHN6iO1kGg%A\OQ"e
%V'kPlHj?RY2#B1s'$:UP>d_nhD3-TC]@1S@l9`tI-e_,'?h)X:k0s5#`ju&sk$Z8[OrXl"'C5%79_c=ZhX>r#G%VM"O;_$Q7R24u
%Tt7Z'qLTffj/dJK70./_OH]#8rT$c.VgR&Z"1?JOj5CqN]K3Yb%+I1CiMBS&.uZ"Q^$eC!82nV)%ucGW>gMW&RYPH<""u/;\s7Y'
%:=:#bT-R)3/=IL4-DeHW:6<R;)QB;[?tY>Ofu5HF0_i,?nEY!`RnkYq#*MVZ0?Meu61H&qi#>cIIt=fto81@kWqLE[YqC$-*A>7>
%da1NND\e"lR><u^1@9]sJ#',!E-aTiml9tr&.g3nkti9?<ir8p$Z7b0M5)3+O]uac%Le^Je^g9CQ/N5H5h5p(A+3aMCZd8-pC?Kn
%q/rkR/qP118[S"AInYL;H)l0`oZ(GLq+gk`H%Z+Oc6h%PVkoa*V@l>r6RA&^k2)ZF-!qNQUpJRK1.AO>2LhgS$8tkih&&%\B6kHb
%\:_2<g"&kKZs$4/m"<]IMqNl9]eN!__un]T*`mpq6+fFfpK=%t<4BYn8#m`D4q1(cish^3rW'9MR;ptV59DjI!uc?I!B8p9pXRI&
%<>j^FW,3+j7mD]RCh5=Fg!PlKOt5Ff6iIk3<SHbIDpjBl2Bb=rrHtTs^P'lB=kDgc>KfmrP)4l9;G[,cGflab^$GE?b%<c.VW2'u
%gK-M0Z6.rlVel4-m?GkFOq0AE#o_hGna2S>nG_T"4%9c)o)7gm4cptR"rc*[0O-Im*'NR_c?#e9907IfF3>#Z0'BT-/N4ZB?^PnP
%pmAUf;WNRB(`.2:%3IC&JK%$kN0FDcWT!WZah0d[%DTa4=HCl9+dee2@JYQsrEeL:qqK0]a:06d0?/U2)Es*ECVm24^k!%<"(mu?
%T!=LurdZj`quLPIp]G&A3,fXUZcqoiYU\D"=D%=F\V3[eL<J?f^TU+=37c=K(m,\bK.Q]3bjZRA,760;'eNnT/o\uB^Tl<l;;O(G
%G;(eiGMFska-P=b:39#ZM.sfmJLEs\:.l"Nd)>%uXhDPGah)9>hjp`7(0\kJ(q+,FA2f97$qD7Rni86W*3GqcbL]j.pkTOm>@oi_
%N;>^N_ae>UVFV-9a?%#r7coI_7*RESX?AMp2)bIt%Cc&ee%N#/(2rqXUgTZ\1-Qdcd/_0A_oMO0B`F23%^CqPZ^)Gg"e0u!BkI,E
%7;DT%>AcF)b/1<I)iienUq*!uGFXRd(<[.'fjHZ>b72LYHLZ]Z)\,#>%<Ju5E%Jjg+1^?4Y"nG[jb@:6G2?UO3?5=]fS3"^_afah
%P"Z@@E-4>]al+IZAls(5UhdK7[G:6jA'LL5)\.8"Mlc&q",d@YQ5^;fMR,#r4N!a00#&K@\E8P+Rp'nSASsISX3b!Y\`&qD($;in
%A+)eR).=VkCj&;9mtU#Bg@i7t>?'\!N>)rF3H-pKlF9q/go.ae\_e(IW0:2;8:j3eqFQIC-GcB=rJ:/^RKPQa'V<TQE$N>[R0>NI
%S<I)p!99`./@_t\OY$qNi*luDZJ[L*Zf!U1Zf$#^ZJY]m')*pbDM6nmbCU\4a""FR7a7W!bCWA#3HGt+9K]N/Q3DJb?BJiG(>P!j
%#ZK"3$G$DXachokE2-r&R@afuf\2CJ'!uF<gooL%gToc6`<_,9L%9s.%7ea"V8;gTpJS@T\@si?MDVg^Y@5CS)Gn2ChuLI/!943<
%4?.''c>5b(mfG&fX$JDckhI5efcgq:puF_QH#N`g\XA`g[tBeJQgcTa/^;U#I*7/sEQa"#Qa_WB8*@T1IWY96k@+57=]dICcGTTY
%`M550-h=$6P\I@$3%1@al>*34M6M"6=XkDuO_O#MKhL?i$CC:Q$Ff&]$7A'YZC7'dLTs;:iCJ[?LX_.KW^B*2bk\Wf0qe3U.#2#X
%<dd)8;OMh<.m'6`<&iQ:<3);lf>W&n(p<=YXlRqGDn+=E$'?,?JV["J9e@(i@%:Yf$3q`d87Au8/\m"(mO].`T\Bi7(Tq[?"S8F"
%=_BAB%Rr'U`cKF0hFQPnS-ugd6Z_3s5I9FKh%+&fpGdI]A./;ZCXdC`TKYE5_K+VH=Sf[H1)I*KKCiP(*;!F9LuuQ?#9HaZQ-!uA
%QuOX_A2qe0UJYH.q&\CW/K#$2FR]u]a`()FFjGF3BQH;\P.oT3HZN4u4?Fkc&Jb)TiRqB(iVi2G8H6%W/+T<CVaTEG)Lo[aB>oZ#
%5FiO;H8D(.!06J31SP*!G<DlOG2,b.YHho"2cugMTqB1b58ct78):.f4W\LO\"D2Dln'4D\R$JkdRR3LQ:pS-+%&A\Q:oG0.[QO\
%I;4,mbV/b8jUudmasHba,PAD@ZFLeg!u!sK`#M4]e`nIScF,@a($qL5Z'u-kSpG=3RiWX?XO)jRHAQo9;n^*PmiVKBU8O6`Mp8lP
%Z!GTGn&S>1gQ:@qZC(Jse.mM*/-[0^EVZ]#W#pgN'&oYMpGlr]c3&o-HG\UKB,UtKSDEW$PmM=Ndl)].[hAm[[>E#\/);<j]q0\*
%mPV^r\o$3DX[@`0C\/u$mVr.glai]g]]AjiPLT@f]+&.SF@u8l3>jb>8p##.V7r4-[<g$0YimG+FEd:Xh^IRFZNo&Be$P.pj!)Z<
%WW:$E0"U>T8sg%]8=^pXq#Xc?2H%O\_4()6^%&OI%SqJ)F`J'LOJg+V@DCJ6951$(lD\#+/8?eY$l?5NcR#q=)&P.c&%a"'pNkO,
%kFkb2e8i([72O-GWp7at7%3+T-#pTB9@=oce$_[8;KlREaGsq<qP<S9qdAFBJP3;!XY::8'PTqEorW>j`CWkOT"/%*75^S,@-&E*
%*[XVKe<&X]ZMUVPi9oJ[V<Tunhifj;4e!EES\HL[`Z$I+Ud?PfhXZ$^=D!*7iQStS:Qn`&DNUG.kKb1!WK;?c&pNItm*1gNg*Ic:
%A-e/dgughDNjhH9qU2u;5&RWb@HksJ@8_%okY=<Q^4kYq+XS&_OS[E_fb4?))q,j79ccY]K=7i1e<YuBPr+-s<qg"gn>Riapb?EZ
%<=S]eZ6,@W/mcpEdK84$2V2!A=:bN*3Z)]XGEj.k!F9_=d+.gBSoQs?ZsfCWcR>W'fc5Tf"q/EC,F`,(6Z8dZ?C54RA7JO[--3O!
%\b0EqGa^1=O.Fm*HpWE5rqj@/ORE6iZDO%po)PB[XkPIa05sC2nu1s=cH4/kTojiP#lXlsgl18IMF<J=PMfMG:W.U2P=@mUiA()c
%L*a$G`OB?gCR2<QUF/utJj2q[eS>;]nSgKr$hdu:2FNPh8i$up]-?G5r`'W66ug/4I4(-ZgYInpOY'GW9!_)3gllq*BsgIuP@AQ,
%aA38AcDH6-O8]3I-*ZbrU,U!`*LgV68RBe]ml_d?MS:&M_HDfO5fR)G=6rae9-6j.NR-0RlbFqSp?r3t*\pj%lMY!s`tTJde*bU_
%YOra+G<(:1F"KHbQs;Ds:U5UllX->B'0\L=PY"fnaRja9"p1/H#&c1Iq)EC0c*N'OMOej\dYo\(ng[pGW?++S;qNhP'9Cj"T"@-B
%1_&gYSk"WIS2fN,V7BkmI4kJiSI3/-oaLXcoX=-h%:Ru6k&L\l>.2HYs(;#KXCsm%\kXmW]aR'a]'Wbf;/ge$^;n;,^MeKWCkPAT
%q)g:acg9_G3\[JFTmDE3["",QYSan>''r8Y@UHN@KS#eY!#!"E<b.gYX=<Q@PDJKFaJC_X(,"''Z3+1@TeFaY\Ymf79K$9-?@ZJi
%_dH0J;_;f(Gl+Ms9s%$?7R/#?MZkp'@@V752V#;R=SY^X?6$Ocma8<rh@,FHR0qGD2]*JeOLOo:d]pakAi]e'7:o^\QdS%?Ki,Nf
%a/)-RR^J+7Wd[-#&Oif),.EVcjQh78l-uH(FDBAY^^,]GEG*=TiLY"QBjUK7[K+KKrnJ-Y-nJ:XHDtA>3[NLICSH;a9qWWH3/]3]
%+RBtr`kt:)O^Z93@)&'^j?a?%2UXW&\jO@EZ@OuPR^OKpn>8mTT5Ru\=8=jtPcP5Geu>;u6]aZP63,XU*(VHC"*."0;[lDO>e99K
%DtSAoG$cpb?Vmj_s+8W$6P-TfZ#,#fpKq`OFji>FRn^F0RS"*788<9D8sfVN$?hU#CBiFUY*[Ue:2:LCoKr'bYW28fM1@7nbhK-k
%Bk42$.&K9k9EFeF0p7.UY:\lf7KW<Fr$r\6E=3(0qA!DLl!_,uKA($I<HD"mans1=R#Crumjj,UlTt*lbj"s(YLQ<9)Z-$X]qYP6
%"_s>Ro*r,4]e=b:.m*j77-2:R[-B<Qnp6<`W`q$PQVTq2("'/af.qo-DeCX8#bN+>?NLfM8,(!aKffAs#AQtEW)=c)%))0uGUERH
%d=]j[k7\e\>5[k+"?pgjq>$Q@n$jW"]l958eCd6hKu-\odmi>]"-b`bB![;u[5aKk8^/<b><qDIQf?0Mi'RhsK_5056Oj(k`1,<n
%pji*m&M%N6V-/:6!A3+r`4VnjC,PZ\MP51IC7Yt@Q$#jZmZnZE$4ih*47bP"YqlM=P0=QBf^TN6)CLm0`q5C>$cOu`0pf0"cXh._
%XeiFk5a'J[XXUeq!50Qs5d?<WAZ=Y'PRV%Ze+U#8T/$Q,AX;1(+(c:ADTV;g/BsIR<VF)8#:N<bIs_ib:F0RaWMJQ?!hn:rJ)JAH
%(M=JF6=S>$gu%_pbPNB1jFIMck12O(0YFJoB#`dKpJ,#Gad+8\EI6$X0CQAP:&_'goc%3o%uNU1gAMt^^AcUY?XJ::)R9k7<r?k1
%I72YF$g9J`hD\tL?AfOk:q<TO1J0JjMDl>CNPCdG.Y:]f`&#B0gF<iZqI+kL]P8;js&a36qA%m7-b\[NNcg#qkGN_g$'/H_rB7Z7
%rrK]j0tlTd4qZcOLg.n\J@0D10>fnf<n+jm]L*bqCX.H!ONXu5GoV%V8eGIiH40G9I>;m*d^.kL(>iu/$KR*s=%Efuo79&DC#A&/
%FBY(g8=4We0aRB)DGp3CdGLNn4Q']!q*os<o8PTd2jVIlJ,8b_F$c9InS83<:#9WXAfC^i<o4eF^P_b@]E[i);Emj8@=WLskguYp
%]n*HoJ(P^k.PHdhiGb/XCS$M\8r_$n)7R5p#Q3r"7`j"[RU7>TkX8U%puUmV0=LJ;a]$J.50'*<hr$5Uc-g\0Ilpb&C>*$"7(`<r
%5-=IE>8uTPQ<.d$M+lc+aRt,k_iB@_<TDOiTq-p%m+%9N<4_K,,#i'lp!BFP5O8j8.TERE1s;MO%o0Xs9?Yu)=Oe>s5\e*6Z0L6E
%j0"U#7'<"HqRCY):hkO'm*+d,XU]2fF$1R6]S@hM&K_fSYJLDGYbq(\7#utY)HS*mK%8&BB/Y6T!h373I,__*%oE.=5<pkT-b.]q
%L]&_%@i;Hhm4d(%qTuc`S8K4&?L]?4pslYaJQO+cM/G356rG@K_c(;e!d%>t8d%^#+'Uc;,ca,pD?a45i\B.Pcn[2QoYB!5$ujHX
%C[EkX*p-YCmEi$M.T(oo91eFcaZ4XFaK62E(ZNbB>`k.h4e=gSj963?fV4AN-a.-@@,U^P[F]0$2g?i/fYLHr;a;kV";;?r/$?,(
%GMjp;Y006.gr;Nj[8@pNV:@((JbD632=&?hk(QX>9USV-e)P,sb1sA0RE%KM?8?8Bf\"VsX)P1l>unsV$1[cLlF;$Q6^-i#J2(L(
%=R--ndfN&NgiBLt)RTkq2@]hgL[SBA)NdKhVR41lp&W3f?@k?:[?bcQKAm70j`.0"<6&3qbMu>Y'`O<;OKR^0TQQ3IkZFan,qT-b
%FKA4PC-[esMSt.%fYlJK*AV6-5.#'hs#i7&Y^Ep2"u*biL/qb`cm\TH.+D^S"6p9+`]3-m0/t?*KJLJn&[5.pH"d)+*tk<3?b:R:
%B^2LCfKljCQQD@K6p)pG3qQQ.0[Fh-I0;aY)!S:\oA*U]af#gk00<W3gdMKf=VleY,6Z:0FWVd@Z!-T3q?T#6q$8oAq$8(Pq?R*;
%X#i]kTo?fsJB::ef^i_>,6[5H;"kRE#8d4<kp$=;(VPBG+JY9\2).cc&X-EWV>?ZU]&s37%i<D<UPj)]_]+MH%jBlk#[CV[!52P;
%4bNgK0n&a,!cO"r4nT?foU<qp&.7WMZ/d&2mS.EZ+V_.W/#nADUn[nB6R]I@da1E2@->Gm,(+q/,#iftNc8>Jf#Ilehr*Q>gi.HL
%!i5S.?%ffY1qHkHK9nHjLJ['*f;HkNajJgZXs=PR@8Er#LJ['jlE32-84RS0itB^+-rONV=PQ9R@ECn3_!)0\VYE5J&)i8TLJXe`
%S]pLF'ZoE@cp9'XCt5]P+9^n.a$Ul\1fsA^5(nG-_X0^SLN(.pL[]kqLJYhOkG)<c!+(G=1HgDs2AW]sLJU72g<`3cX6<1B#[KJn
%E7,b[+p^?k+6"EuUa%l*Abm`:O6Rieq'n3n`'F[5\dp,-KIWX:;6#6[+>9O!l(h>4bbCL7/q5k7A@mIjp=MY=N"/21ONg!l*JE/k
%]7]SRdR!Y",!J!mLU>Y-E$R?DR^gJtD&c]K(<-5JH2H8]3"FLk*RXqb0YUA+&UGl(Bk8hS&/FHlTXlB)[5PqK-f0+.l5nrkP41L6
%[lBk[3(N,I.:dSki>O=biI1d&R=il]=F<K!:sEPTAm$R@SVo3](7iL"@.;=j=LSXXPe-;.`cRPI/-?&`]m+]Ac#W_mGrd%5>)0DJ
%c72Bj/[CYbOhopkh*"P%E#nF2)C(.!k>$_CfG^KOFa4&7NoI;r/LL)ppu[UYn,JF"8^17;bTtkQ25]WBRW]buHWQW#9i3(DYjd-$
%]_8YiqQ!*EO?NcHJC5",G'\U4%5\p!lo"E^p4oei-(EUOQ9)Ij4,nd)B^6MelerP&BRSOA/A)kC/@jQC&6!W]"#TQXCs8W.cj$)l
%Qs(Gho&%p*jbBC?YmoVon2QVE]6n;aq])BMa3f)hh#bG0cgb8"pX4KL"/soOiWG!'Z:&Kn2L/)>#r:=kUY:>O8[lf59f6Oo9jFe!
%V5DrZQ8MluZXQQ]obt&8*Al"f?=#[#6F-]"'W!<$Ne>Y7)a<e:.lM+pdaBFI+8'N@U"I:N3*^`^@M=+VEb/a<:!CON93i8O/0h2"
%]I>b$M!hc%2RTY.2[EYDgRF<JdV#Db6F"?02K#-;2I-r1CaulHmg9JK+')#)$be'or;Q/0-oMM(TH7(GL2ZTbU0`1>oqp?lDFmd1
%_=q]4dBSo)UK.UCoNE;Eenb/AKjICsVcm<P^+V;XL,O8KjbquJh@^>pT#deZAEUr<W7G"V4q4osDH[QeRp+R_:hprpC2M!cXi\oZ
%C1M'2CR)!Pn/^q>U0>I,Kj3CMj1TITe_6.5C"V8/YSAe7:(U^*@kB6e)9T+,_tFY75H1Kjp1oF#eo?Gu.k?OuqsXCi<j3^$1r9eu
%<(M3EVq[i^Hu8d1;(DEs`g2%?A+<BOgS6cP:YK6MqnT#q%fbBIggQO?d\hWeF<?l=NHS.@bPgoh3,[uV5G'q+=%'l4'Y^ED3OeNm
%Q@Xl!SQF%<\(;3$,l`_cSR\R$jji&V)Rsi#S(;3an/eq^&&$O6(Q43m&8ZBI.m$&@c$;jrF'dHNEA_=S-K0`nJ[eG.cSo_t%.N=]
%g0.km<luho)drCqEfCU*S.5d((ljO!n2A*KZO(i>;9FnLBI/n`&"@35T6Y@2F2I[;F4%m>J\?1qQr`cb!E,>R-c=Q>/QrT!dDVc*
%fOS/XZ[eSNP3=<D")X9:gdhGbFjV@l8E;"J`\kDT^#4\GRMK'@Cs[AT]r)ROjC2dKPgSCs4BuZ^&-I>2Bp4Jr)b<s'_8#1$WkQ)'
%GYe\A;b[Y?m,Mh!Z/E.i,G88<IfuknjVi%n""J#CWGN5)3IH)cIqWL$/MBlL#(t^&^62L6Hi'75.pBFh#`SfUL(STVn^XJgd?0MY
%1cl_rj*=slB5;Zf](q*4dhcKH#CfXT`(:/sUf<a*GWn<bZCEAZdje'!DCKKFB_mpm7_W;ilJP9Y,^8W-(*\Ok6`AO]hH[<te'8[t
%+ffcKi!V(b;H.YBn]lsgBJ,6uh-A&nLm9V!lWT2_aC)*r+oGnL$M4@V2#jd=&3&SJq8P""R"#UWdsoYu2RM6lLDHb?p#sR@4OLmE
%5%\GB3Y('*;`V67j#6(!b=h9h1USF)^OV4KP01/NjK_QU.GSJ[1M3pXKcWp^GA+_+-Dj9Q@p,N:^I`%jcg(>"b!2@od2Xaq&s32-
%2aTBWOOK?eS17db!V/#u#DJ8DI*oC2TFfP"Jp1urTa^(V:r[QQBZD\QF@93S#RXuKSQhOKTjtEq/LY^se`mp-WGtn=CZJn[."pr\
%1P4U)'gaO4gWEru@!9T3i,:O>[%6d*`KL-C.O8:V%f`X:$Q[VI42O=Ih],=6%1=>UXAiM!)&AAr,b=@-%1>a6*#3b\CMT]g0>^&=
%D<KX'U-cX&q5"iA6Fu#_N&dV!;GQn27"kVa5&=)i*Fr.581aEJrfO:XlOVqo(!8M26BVEmr+Cur@HH+[FGL\6i<=TQ/-LOfo_I1C
%7+t`\cY^3#7"1LeF,#Ak&6IX"(`#GY]Ve+N/0pYR_[!&IToA*;d#LWk-dV=,4MjE&B37^iI'ta%VN$8aaW)+K(jicTE?V<;G!%V0
%96kC*ln/JS(Wp*Rj$FX0EM4D^\<)7%r)d4f8A+C2(BRoWLfdnQar/PiZFH"GU1s)3&Fc?+CLB\T6QnN^"%-3TEaT1Ek>u'rL.&n5
%lMq;$8`f1aEEps0a^MHaO<csZa3<hkX--16.2?hcbW0J[V`/j*#eMW9oar"'/P4^Ci^.pQ)&M#CL^SWmLlZO!'WGk0g\UXlT%Vdp
%`,VkC`%u3+_u$"4Sc6_oB@!4,W5-iW-\r!Lna(i(nGXeN)nC-O7`M]feeccO.cnhJT=!r7%@*n,?:ggMKi'lfr+9kL6#tBF=%T&(
%%'#pg,\mY^ja>40kKh]P]Pm@e`f6AW!S:Xk>4d?rV"Wo8fl65ne1r,\fdr]^^,Rt(:\,PD,W*g_MFUXG3VR=r?5^3AB2K\D`fE\*
%F=t!a'Z+Q=k#KF1DaofKn`Hia4GuUVcSp6O83!3.VaIj0Wa<1Q*5_63UaI[,%X'_N#3[$XB1$f+'5`KR?1_VUF<(U/GKrTN2<HOf
%\9L,ib[#`8SXdOOSMR3pRCPDgj=t04@VE0[\=,uK=h]&(mc)])h+_jMCieuHAhl7B:"u4%PNMhsc=S^qgRUKT@@=Q^L)a6(/9ne5
%LNXt^G6`c0qnR&sG#3Ir&!4H[R1=`;G,M]eB54&"*RH.O$E\0X>tf0LemRujYs?U7,]?c<p'eOHD.CDd4.'AChQFq[TAo.hS<F-S
%K!q/b9\\BCU[@';/KLK2]SmeAg+L=C0H7rD]9&NBH"iWjZ7YVV@s6Gh8.TpQZO5\E(8rqA1l/cMr>H^tV<uPD0m:ug!EM5_K!pR@
%p7"^Pm/gX*W#0Fh,I:RQbDEhB#$M&DgRXheAA$aOg"I]f$gaL$kND[G*1\ug4FG'na,%?KA8<`P]/P0RB#bg0(SD;^S7icIdV_O6
%Z4!V[`&,Uh"Pa:iRBh`J=n1UHm##m=Jngf]I-KX+K<mY7b5933`A2[Q"$*tq0L+dBfnIpLIkW:_2b[jD3P2W<on],DLmP;i-LF-i
%#/('&7%9142M8=DctX&,SDDlNL,VZ8!.,+:;)<2UXGP+ig>-`nmE-7iX\!q1pp)%*#&+lP<gds$UtqFoH[2@!%_pWc#]I_jR;ou+
%na29j5Vo,31L@JFRGoOA9?k.0U\9]BA^usU+q;RXq,Xl>R<(P57bLT3:+X)]TTr<LCS7@gQO)W2o7VpTf<:=Wmk7sd"kc?Fo'`t-
%%j+*b_aITYT#edS&A>iP-d#W!3[)8$KP$Rb%%U]:2keoN)U[R?.pfX\oETb=9Bsa3q-N,uTf`^NHe76JYg?N+/m.g&'Z$LS]\'6g
%Ss4m,L9$!IXQgWcfoB'mK%%MFmRb(*Qq+A2UtqSmc*d/B[uqbia\;IfD+J+cIuJ<p\`#`C(X#mWksX(Fo0&QZgL7#5]Fo)1-PPI*
%F1rt7]k:O(K68qJQ^X;cI<3D=ApcDYhb)jQLXW!rA5k6V/j1Kbc#f`B9$o-g*E>hO9C6BB,k0>*:P)2&cGqG$7V<'<KZS/&X?_Ld
%d6#1EF[Z9D>o(:+c=#g+VND*QV=+fb[0BIT+3*Cj"^@g?%-oEG?l&]5Wh3'&_;2=$OXE+Ya:lbt\MVI&@&Y#(dZL+'jHu5KmTfFD
%9BR0*NQd.#l]M]@/?C5.`l!cV:Ei+h)QV,d'HnQS%5EHH<lJ`lj^Nm*K/l8inJi_0EM$StCUfD=&<.^G[RJr<&\c%4ap:fT5ZFCu
%-)#$(]Tr]%=^H'5`:p^n>`/E]L^6#p:4uulVS'8+<<UCjT;+2u&cm%FZ\Yip"bs7YK0ErVOJ>*sB:@l]3H-WL_Z9Lgat/L4".K^P
%7sl;$U\DY-j8f.)blG:rs+jJk"6@6nL@-TX0&UhubTc+0(a8I/k8=#T&'?&FN^<4u[N$R=+2T.Gra\L?oDGC4H(%@ZpNb%%,gQj_
%KB.;8)'mPoc3SJ,OrPan''2FM,^I&GA1>b>+)+Mnp=I4F%(E;BaiENqN[X_U14^uKNWYs%`:.[^6.F(To$hh/U>u<lZYNEY*$LlU
%iJ<X!Nshb;alU/qA'q0E/#2[L)I[[ESN.]+-6M5dnCs7_aT;5i--++2?PGY_P681@-kRia_2+:f4NGQfh!XD%k85SmA'9Gor#lK5
%k>,]_4O6e5Pip/!TKH"3,NX31EhkfN-mRi!kntqrEfq[/=f=Y1-LkTA4NhIHQ"RX>W''O!XJha`rF;oKr>J-B3ps"9)?43QPQXV_
%"cQ<<jrJNW(tBj7+pOe\4YhU:DNsDpAkmKg1T<FqA5u8q,&0h^<<Mm3[`kb;<ZO#KNE(r=T/:eP<BZ66NEV`MNNPfBficjmLNP^:
%:)&K?=Oid1-YANA4\@?JAuo`(s#B3L$W].9VpksP>5EWborpE#G^)1%<mhp73R_NS4hBl=X1G'6Ioo`^<@<0(:\R:nn/K*prV?EL
%nR,@,Lf(TOeXZ9A8-E\\Ui4B3XId->&':h@%ui)1.dD)<c9Bj4<LlXI=k3D."fj\DS?-Ia]EPW?M:1V);;2<OP+D%0jhoM[a'YjB
%C>$6S!0X?*9Hg0#W^^oe:</idWcp-feJZ]/l5_f][J\g-OK,WraeW[!`h7?0;RQ.ql-Hb^0AL3bf%K+ujZ6-"i38q\Ro[btRprcd
%9g.51X^%d'O8NVG^$+`8aMY<oPu\DX8YT$[`cG!%FEUb[@/c*t#?ZH$(ORaS,Y]l1p`k09&'Rq_d6H[G37E5giON(>Na&b8J<QQs
%X4Get7S)Qr$G;Q"CXnkajWg6c_mei2iigVgRX0ktIXX9EmM::B&!B]a=B'(inYk$g)r2uMX9iB=&T"?.4lu>#0Lagc8BKp9/Odpf
%K\d7Ip.#!9;ieHb^?KItY/-8c`b%RON5FeIZ.Un"fk_PPCpk?C2B,h6%*F=0feA(-(.'pK1]n',]s?=eJ&B5Fb@.#I/s\X+2B,9D
%*g&4RThA@Z4lX\mj0<F52]e#W'g8-W_.NGePK_T1p))W,Cf6ajR/f]g6W%;gT-Ka5V3RSSR`T@oCJ=K)]&cb?4#)`^V;B@@lr:E:
%#*"aM2CTJ<:9nlmUm1r?/AYn]c4\D^0e-C#V]2UO4%Lij^o'[Sa][rWa6ah9WGEG"Ptc"Go5HE6Rk/o**Eku99,`u9-LD$TGW2[+
%$KRN_HqFL5D:&bFQu%k=PPH[?r'U^,Y5gg7)aqW&DE*h3A!tHIj2"j@;u@XH-<nL3A:p\riFP\@Lu61Ib$_M@L8/::1"fC3SAq"s
%U6j<^mB94iK#j6B1_\OtSr%8FDD;S$&%>oiScd&-KAa!8NiW<BZ!k>I5]uSK>+u13*ZOU4%RlBM5S,+pDEP?Y*LXs&fc.#:CcjV<
%07q2R6^;r[dNg$+aCc#29"3VQ7[T,!)9JqBh'gncA^<ZhNRNJ>HhndV3V4T&oi+_O7(0bL,dQfF&D96<`()!jqSX)rBHhhknSG>7
%BHmHkcf)crb:Q)%k&tH/Pa#W>Y"eVLfRe<a6oDZ&GUn)M+i-(h$$V:L[ZTm#qnkQlbBRm(JA$pCZ/+TLN=F_gIX$K.89b_2CiC52
%HH\%iY_pa4iXSH1/*$G?-UXqa"QuH0#$]<P[A[!FQre'#CGc@10LI:9:4llT7m4+:?9<L8D,IJUQ`_NeCX`_b<*4ptU0]FJ-0M4.
%b8I]'5no8YN^aR%=A3;C[lK)uX8aog:$.3-Ca/Cq5%bNFQL\HB-fPKr@lBG^9;79hk)?mAgMGk1+!FpZ9cPJX3Leb59s^8WmAo-5
%i>G"!E9Z$2i'_nrdiAbOF@:rol#4'W[2<5F;BC3FZDR<#^*20qXCs/t2?Ql)Vk1`[Mhb)O#8D*;W6onqis3LMrdAf(XY,@J%6FC>
%/a%Gc!@1oKQb0QhMGcm9%*>h+8rfWoT:?/eUY,'(b<LKm$=C;W/qAYrl#hf0ggF``0.3Fp?hEi1C"+J;A?[-'O8&aImY9"@=s7),
%ed&@%I/,K0,3Nc+=se\7jFcsN)P*<K*aV^&?TLKrj9/*g@_g*fOdoeO,L/IN8[]mFXRK8:+73\lDl#rj>2oYL*nr]V4eIO(ig%sG
%\a^op)R-th<I?a^+J.2Qn!:_VG`TqRjeF12?MQlc[ZUoMa'-?&p\k$&.=Yr.Z!P78#tH"jR&VO7F/\ZTFBFHDrOd*\LSU\:.V["k
%Rbn*<UaR=j'/4'O("O-<F-u!OTnYofnGl'&$+jP&`A7SnSYSmEiC/X+7@=-N]#[M<0atNt5qP7Z"fr#WbgY^)V*0MIpqjnkSoNRP
%5Mr[_UbZ%eIOgd2F21.eesP67c"pSS&rT\_&?5LZCV!8OB4jZ>Af;ES0M>2BCBXCY`?OS#@5Ct0FnEfT0BR#fc`O+GnKiE%*K>4>
%qC%s)]>9\8^_e>>C_aU*s.kr4H)o3N[,I5.A_pcSUO,<SV:6`W)PdGi?ooPo8N?l3(tjqc0;qB#@@W5UlseKj,;%CiDD-k)!;L$K
%P`[,,E)kcbNAe%o_+Vmp-Dk=DbS1pu:d)b:_3Z0.G9SgHF44eB)`+>9c+@I5n(phfNp./@2'.K@(l`J+``@FcekF;Pg.Bd:0r:aH
%7hS`UR#*70cbu%gpDF/?S`LuB/\jfHmrdr!g\Da8Jhi%RZQnH^3'DUK?-"2j/#;^CEAe?D^+k5+;@!*DKf92tX%*k(M((CII@3$'
%8fd97'ld>,BomOtQr;=@No_jEQr6kJHP09H4abh:.DX^JR#*9-SbYfc$G[9KW0EZI\$0ob;h1L!T,TLR5aE$@@`f/b0dYkJR'PaA
%9Z]Lh@S.\G-Doi7+Yb9m15RH*IM+@]9dPWFH-SuTaU=>i.=!dB9ZcTq;F_Lc9MEP@ji!B7HM!A23R'1AMUW1QcA[O"G+k?8FllAK
%@&?n6EUi4NR=\A17FIrZ`/Jf`bY3Rc)m![db`jUFIX9h8R8Qu&f??nhIdlZ^R3ID]U(^6_T"GC)`_6F$6"MfMlHI4gNL9ie1=\4K
%.>#kN1I]+N_+`Ou@&@Hs1K/JPQmqjoa@s]cbKQ4K+_7J2:F7kDcVJ/MjN/Z',u6Uj.=$n.1F4\&R43FGa\9fsP2g4YW'V^UnKTh9
%bA(L`A@X$C-1?B2e8MbofrSpSjN2;RN9;^:Xc]:K%DSaQEp7@!n*\G#opi'enrca8C4d[l"Q,cCHpiWX>7+>_'hI_Z)Q]lnK^YSK
%+W1l>Q6)K(rE'5F#'s-Ls'[RZ_+^1,qbM_3A6M=O&9ZgOeD/2ofQ`%K#L#\]?.<0Z/3JA\T=:)*rUQK8$`p!CcY:]hRLdU<o[/o]
%r,8"G):'2B"UU[]+2Ks5q8:rM:HAC&-?:!MU4lq[]$+eLJ,>#q^V5+c;6XmCF"8"A5;h)ur$r8,g2_T,jLCG.,$jRW%3e;V>L,g.
%^,LK\c_@eC7BU:n;kbDNMeUtpf@Sp<?"_,%[V&Oa]TMc.E7$b=nSN`kL]'RWI';l6!$@XL#:r!QFpF>IO`?f&4KaLcJXt=\mc><I
%Q^*90mFmF]Q\h9Y47:s'cQ=2gCt$n)\1d"GbOEPnRC>t@MpXo?qK6?mF]&6JQM\+K-SS9q/tOglPg,qPC&56FJ-j.^hY[?-Zg?a>
%[oFm1=Y"kJIfjV5aJTgX=\>Q-hh*ou>g.D)hf%GPLqC6eV;3.F0O5WAPo>?^m^)edLtAS/"4LFk0E=78K7jbT`p@*JDcX;!#tJ+W
%n9*FREU%bt8@38`42ZTde@^k@&K_gCXc<.3R>BFO9eUp?,-*W:p,DKt-iNA3/Q$bVc%NUCectAh,\r[N3NpEJ-A(8O:tH()AETgm
%IPWE_H)Pu_N(+1uapH/Cgns$%%FIfiA!:[X5Sc10H5$Y+Sju5UZMb5CUu.@Chj&_7bhYGf=AHk&g2*<u+@-F5Kf$QY(@3DU+*$HN
%(?M1?194"9#W#gc,##cbVQj)@G^uNUIeXi`?c=F!g[om6LY"cCE"r(P2KPi.W$FcKl]G)4Aar[jm9$gpW>Ue(JOCiP,ff56aNo_f
%rH_b$Ud_]'qsZH3<XXkgpERV>D=;?gH(%ub<eB*_>'khd]Z_=`nY&+QIm.l9M.ZUbYm\i.Qi.iYjtOQr_/HZUBMi-jP?g)j?8otQ
%Vf/6CTt.Wn5Kq@4K>K+o_eFr<F3DW+L"iC;Qg?MQFg21s(3GYE`#ETBcHCiBPl`j!`e8r?JeM-<kF'?*mS_N.@KK$\f*7#@?u[9f
%Vt%n5Ntsjs1f'9?<%R@q"Wh>Tro5Hk7V;Pngdp=BM*ZU+`?V87R/m>jdNDpshA"!:pV,rC#`qhe3g#HoYUO2;)dEcajZ@QaGdk\,
%P=\+2JW/c')R--(mWJ%',PmS%[0)LS?Kmqn;nQ/\aTFIHKSm`WNZeko7Cf=b3gUokS$he@diLO%V*%u\)kP9#i1>8e'i0#QVtZ\:
%TDp>Zh&DrEC\\943;nRZC[BOI?e/?*-&9>UK=T:;^J-#mPCYC3_Z2[0*^Sjq!+%)e.<ua1cRV$\*P,nj9G+!.:O*crmWfWNZCm#N
%@0l#K&h+8Wn0kqhnR7`7n2(OSK8.<,%,aVYIY;Pao8o=FV@lD]kqEW8Aob/lOt3o%1\*C6"(58s<CT(]6e3W]>R\#MH;mQFis'_/
%-t!aT:liP=cbnsJ$gOVO@/rotVPdiJ3+lIfX7G?NL@5`nDuU/##=F:@BVd$tZ>)r";1JBef%J$'Ir8>4m6.m.mu!9[)NBqfXji?!
%KTSclE\R4?@LC+5E6l@^++(@b(9lDuJ\GAZA/*)%B/m.R$U_BULJVY?U3A-l<"fE8f'(D^8Jhu"8JiD<Ot[re-=Q,a0c[;e(n4Pt
%8Jq:EKk<sOLWLBm[<O@[-RW4j%o8,Mmn,b%=a<ZDfCCC\\)EfSJ%qUJ^#Yb/8Z=(".rY6?U]2LOm>^l;T1U,@rJpH[@c&jIr45cr
%s26;hBhDZW5XpZG=6eum)>`*PqRKH39W;YY/+nj6V4MZVFgSHek!Q0O>kO@e-[6>c\DlJaaH(%XI)VcE0sj!17Ri],C3=7#8lh*h
%FgT!ohL'!Zl%[mcloKZ=lqjaT.g#!=X(-_/rDp?&%GnRL4hFHi3:>4ge^7I(Uq0Sf@$D*GND$YThEidCHGVW>ND=*J;Yu2e6CQg3
%*=pCI6fd:-f[3nYd10-\^I<KJm-%_XU5M&I45NsZD)10B)^?)pf^fBTB&@5P<-oND27mtL]H5366Yj:<pI0#2"gO!1#VV-NG1jVb
%"KHX$;b3mep2^DHSuR2D6a^PhX7dPmeLj'VJq^2tXBVuFQOdM[78rTOFDZN2`cLB.WqNd^o"M3($%)sC=,SC,be;aWb6f@2!i1^B
%rClV/]qQjhHLPgK'f@'U.r&tsVTX>9b5$diMOG&\.r#,rW66]+b%sHXFB6lo?DB02s*[IqA2`bQ$sb?]fql"p:S2kkeUc,bIiXNV
%<\OuqU?72Kh[H^K]B\U7D^m!Fk8U!BC1<9h!j/BRV5N2C(6,434g0SJZnI_ONMAVrq%FOrMntbYLo6oeI7X<_GZd]NM?$=eE`Lr!
%PogEWJ)gL+a6V\&M.(F'^BG"q3.5<GM#]bUUlS;uQ4<+B,k:pQ'%uce3qjb[r-ZL_:um1C<!6UgigHD=F2=$^%#P$[SO#+]!g'""
%lIM5(=_C19@,;%(S.DN.2N<SVerrsn%GsAG/OrU#%;+$W2Ve>ahRE1AOW7H:$daCe(BLhH*9I,Sq]sQq=?pB`Q#0ZM1'e@E,.<tN
%E&_@O^Y_*86tFhlknYp(BsaU((fA-GZEj$6)&[GR`6'"DFSRSOX\q)6Fn(JZ-_`TpHGZ<;=i6=C>*`.iA^gC:]K.bigjuFTC\U;H
%aKEe[k,i%[Fns-334/:-r0SL`YH2G^^g*(q[ZbnZ[YNokrB.IYOSk1tHmVqG0SBh%lrh4?`g->.cjl0#77ElF@E?l'6Vr'DkjkFU
%cq55%jG-tR^H[+%S13-J+2-E#.r4oR^9WLHLr6;FD4&!r:r9EDGJ6o"e7K/4H%NLu9FT[I\i4mm.L)5<BGF-9M4L"eaLj(q(g<La
%XT>U/b>Rc<*E$RXIPB_:?@3q"%<RjOp-bK`pYM@o;c+U#G@f60OX'C\1,!<kHNR]D*"0SC+O$=oCS+M5Nue5UV5W!Wh<0&.Jh7%t
%F)\_;>OZrrLPPUC2IDf*K[iCVk\Q-u#3-gjq<50sBFi7J7T)p-B]]=M1'PNOH!/g'"16s2kTal'QV6@d*F13R!)D+G&Ses;Z"!rB
%:8)_:@]=M:UDgSI,03!-V,ltoL"mV:7K^(VAD+_I-ui$L7Eo6l_\)CnIdc8I1lW$>PLr)D57I@mRB,>G8DUCrp3*r./jD0k-LsLX
%+-RdmH.'u\3A(QsML66BO$Z3)@MJ&qJC$HU==hQJI$@jB"5<r%2bgk<$.DBeSIlVBSdSoZ[s6TAoe;%o5YHk6cg4BiXMk`OB@f>i
%Vr25P9!4*r-WlVh0Rrl>au`h(BBsduI25>'m@jDu0cUAQ_YLMj@^ZO'qc:AXqDnId@QM,N@g&S#]uf*YE;:h3I^d*V&s`O#DI[Z-
%@o%ZJ3u9-]ZnZq.^Np2MWKG#d'-T83>n%dl[B4'nfECZa0UZR&n9Se]#3?WsKC;':D;hV+6O1)@/fVk_j9mW`YSaCS9GT8Kou2^%
%RIWjhJp30s>Yc.!=`;-5R7>XC^l`cN44IpS]U6NfD\36L)hufo@<sK*HN5D74U"oliL3Uj?9C/&09"AY8qU%MBiPZ\5hC(Q-Kq#$
%\):VukN/F;4YD$+XbA&Si1%0^j\ttuRJ'+)U'nJ2$c355\:l+bog*,epT=90R5]22=prVR#[O4b8-`M:$[mCb6i#eO-PjbgauGS"
%@K2s(!sa*AimFm3Smi@b79AV/3B*T;LC<jal?#i6Jh?lqg)6bfZBIZ"SRWYsd2BYb@*!B+hu[j267Z_4**T`FYD2%'.JfQ/)#SJ5
%i>VKQc6#e38Hm?G;*0?Ra?Gn9GTI^]3YlaiX$u9Z'@?R>K:1/aChqOclToECg?lFu.!.$!12_n"Oj(,49t0q5FXk$;9peuZJ2Z,M
%:TW0QNYGq"0g'"f?VTn^F/=T.H<FeGfO'qjcU/o1C@dPD6$lq<g7o%>58nT-L3d"&G\IbRla7n;@2cT!H4Fg]DMNPkBA8KEiM^Do
%XF0f@+Sj%u9a>(:e,WL%0l-7ekVVY;F/f7S[T@r_=[F[LkN<``\!>n/@5p"l6TT0u=r]brOJN-Yj#e=ko&5"91bj)gE?-!ng!`YB
%Z>ZXO7>E$&4:O@&@bsrGb'AZeiZJemfiAKWY1INS>]*;:GOmj+crXY`d+Ue34%p].OOAJp.%$b:_Fa,)U#"Wc+Y,d%$QelZd:U9k
%p#gs>L`dc+54].X&#E_pTKtf*Fa%!6gY&Su@5'@Fd?h<g^UMSAeL:=,S>65siSh\!&2(34R='tWb1s/L0I<Wr[<4kG:%&uhj&>-<
%nEtV>c=-TTm^6goB5W2`?]O7\<Qh]ACkIe>":"QsAG_2FR?&C*MJ[WQjWESS4V_!XonUIU]C4Cp6ZT9G0U@*/&I&?H(@U.tD!\&#
%3dZ-kcpmJjO%-/X!MN7FBGJ:Dip[Gd=.i[X3qHkAl,5)qpMM9SYVEEpr64%F3Na-XB;KQo=E.BH%HiidL`tRBZNR%K$XUjlNdI4o
%OL`&-jOomHdbf&u#=!b_&(sZ!96J(ZZ%<Jg:pG<igBPdDNh[SS6&4ctb,9&*^<I.J%Q5?rR\_`K5YrM7Ffhbbfm7ftMjMnEYYbc%
%eJbb5X_=j'Rn,Dj0GeUt%-M$8$h?>?G@`[U7Ksit+^#1_h8ZO\'K1&95*Bb_e@!GhZQ5N#edu?&D>+`Xg+W3`adL;PrUMtq=)r5"
%k<<08'YSZq7I./o6n;YqhC_t6?>H%298t19ehWN#_X]Z"iY^;a^_5D=\36/pK9RG7"g]\Lod_PG\IY8"NRjnW`aVd7gUfr;oVVZ:
%'jDXEm+Jr?E(9OHcVkRrah(Ac^_,_;<);0^Go"^F-S:=9GrVG'lcL)F)M:g001VJdZFo`**'SsKD6EZOo%=%LLZLo!1pFgT@CZ;K
%5AR\[]Xdc&/Kbh_>s91_cnLX\N(+g(?9`-7m7T0[@KT;rl@WIa.("C"pL/"tC%_+@C.?OEK]/-Hfe(E1L$h6XDW=Ib-u>\pH0u-O
%fH@H.kAk+S%Vs^*m$O(SD8\QB$Oo;O+p3*Z?>"fZ%ktZY/(m^a_u-#E6Y0W$qnkDlf7JsDhi@FLi#R:e?ChEuN9kn#<8JI:Rqceg
%)6Zt/Taen\CLP=BC:EBcI>"rYei6>l?8:!ZH-6SAEgYq#!9&^`OS:R"AEDm+-93V5CtuGBHpM*,TMtN/(k4>JI"s^jYfjGlQCT<=
%0D3j$]CG"9ki:kub0r:Z=RL(CZ73s%95jbmY@>T"KIth]+*LOY3Qc?Oi8Y)H2S`(O!!P"3+teT5F&I_(V[pTc/B.Q\&FU+eUnh9'
%_`FgX)J'_&.qPmVZ_T"UiaeoV3V%XBC=ccm<.jP5@rQ3(qW6Ubbi@jCi*T^d<]s3*+)t<K4,tOBqlgjeLnc\Z0TOVG7HqDWkM#Z9
%)<6K$cf+sd/rg@7_Yr*#OKrMu*`j=$4X$Gs#8;Cc%dH3&GT%o&)oNGL8%Kg2Au]XFY_rbDJQXaIh"h([2r_,(A)4QmAm2)i0%#.:
%pbRq<Z5.IfqJ"NC<suuf[g2NrXG(5S@D\HR.Lri%JF7IYEi@nk.Ef,NE%^b!ZFhXQr\!=5GRM\f<1Gh;_Wo-s0l%e`[[*Ph(969Q
%LTALK'V<u]DbaXD]fFDceqH(eh_pgt<CBH,r892;rH*.mlL(biHmlU3)Q/5E`S>Pr6UO6`hSP`,i>(R:'5oLjdoCFEEL\SY>mp'N
%%goY-ZW0&HLY-$,PC@<&S1af9DE_._f1d`XV&eS%pZLOG]P)g+@Vro9jP/?IQe^mW&[`pk3NUr$37/?rdK"L^Z7!)ud5NE;JLsB2
%aSrF>pLt,Y_[l*&3YerS5$&cCPDB$ULULk?0/Z:/0mECiSlLmCf&Z8mK&;<;F5L\0G:tCk>Pj9Ce3@eq*KL^QN9mQcmP)3V3-]m9
%l3H4_jd_nIJUkSYVrfV0*Io$bW65V+KZg).c=R5Fe%V'UYHpsOa!+^)IRq+3!%m5SBp8(rM]-2?NHFY,79Z;Y?!?#@MmpnV9WFr:
%a+!)\0roSdHB%60&?,Y3i;,LUbQ6+HUGced\Yflr/P?Df&l_%U!(Y%c]j%9L=#9T3egk]C7MgQ![Okr"/iO\c!*St8[BR0L!5JkU
%b=F>ip#\3Rm$Wb3"RU3iSH8p#d-bAf:6,PEUPFpB_`-8WUjTEWY91r`_Vur*JB*=g2E*`ri=P\"'`]QI?2k7$kf8MLL+q:sqP@:#
%AnOGbR@\a5]t"$Z.]Km84\GrC,]>)WS1`o/9J$mgb!r(B>1<Gg(U+SIoY--^Tq:@l"Y?c-,M^d&2d/9T?EAt]iO3)[c$#t'=beCS
%\QSuFHJLr`MB,&t<OR1l)#Zdg7rZ.bO>lt&I!cFar/f_#h^e7@mMli_f%mj6+/^2uW+-Es1)jXj0kS](W)H/,1sr/R3k;qoXor@\
%hOf:sa_rio_.hni@[KGFZG'=r1ZK'3[FFd<Ahd(9q7aqg]hm@InSW[c_HC0*KjBVF"`YN_+>@q*=uYkCqr>1Ki!/k\V)PTiVL+sf
%YI6j1/bcsjOpj^tI>(27ihB#I:Va'8GF=_ES<K^>NpTYA\p/Hg%+'cCkDNC[d]FlM[@<*g)1tlTfep[di>ecE:6<fn#F<8V&H4ab
%T^YC^$2it15Oe^1r9gVXrhSBJr9nNPpE*ulKq!SKre47-E"%AcTU+t%iQk&\[%0ahij>]7Gk8N`pdI<P3f*XM"Or1DEJV<5_X@_D
%$fJa\^!rF@$mF9B8:K<4A7C-/kb,I^)Cn0b4<*Qf^raRa"n_j)XR26WGmjN8Y=hrp1c/DUWM;:2MHZZa=B`qV7@nnFN=7i:[*4Z(
%A:J:f:Zp=oWrX&L:2$1PpSWFZ5j#TaQVYu"j#jB8=&[76"cNJMo$;'fVf6WTgj=pTB%0F"=F>B_9l)@n_N,TL$W"Hn"<o0q<9,(a
%D+qEnhmrke/8C5<ZQdQ_W"X9Jg]phnPQkRNji>bYYG]J5:?<Xn%NVGO("\pR5p8HoR]dI=QaZ&[@Si&g/13SNP;,6.1DK.o#iFa:
%C<!u?qYTB(@HocJ))6A<b[g7l)TAPL2bn#gD@.7S*HuGI(4kSI`/]L%N:+Bt6V`D/ROWqV@<?kC\j6cS94K*4ACJ2AZCsk+?>3Vl
%rn2f#ig4T@rPRrfmp:M8k/H'sDSDq5>k%>$YJ:#+2m6Q%Hh$7a]2sK+o8A*Hp\+9LYAYi(IJs,FJ,R9Cs*FA"QiH^;bu]+mhYus[
%pY/(8j(_NOjqkdXp#>E%[)ju9I/_CF2m;*;k/CE*^\d`J0;JLDkJ)K;rJS;>?_+n$n@RS*oA,n>[_MUH+4,RH^Vg"p3tSR0lBh>Q
%5)<1!LS"C@=0KC<_`N3!hYcA7hgBLAhfmtjr4i:1qHIn-rP$VT$&loLkl(POqQ"giprJ$U!?>LA)H`dGFR.JHGH]m&cCUUZ,ab4c
%dAMKohL3gBX%1il[=.GGhn6RGo[e"f^O,q=mf.\/iiBOAhRr`a=/:oR<VXWY:*2=Qq'4efrkCOD;uE<&q3V$*M[fV<0AaFQs7V#Y
%p7?91V%F5Dqphm!q=<WkpV6Odh$`RuDZKgkeBpNQ_b+bK^JBuh__&OM<2tVq=/g5FAc%T&a#$KqB5F]!![63DHaW+aMXGCOdD>jn
%c2Du=3oo>>LO/Sqd=#&;:SI!8n;:%4N$p/N:5;Z43<k,HGIQ"4T`_$PMpA=:FeWcB4`-%7='GU)kl+Ts>lsNqE?";<kX\8==j_Xu
%FFQnO=$>rL%MUW:VWaJZMkHkX0[jmC@Y0QG0(MLG-XgiL'$*FHbptAq<cig1M@N=#%3ag,;fiVNp\"'S5:a=kMXFCWh7m<::4MGH
%I/*^#_,Hmi[SuD"%9%bt%Bpd2"+/d=[LOBe"kut+H:3F=^;)_G_CIAZ=k!SR+O3YNHnHU.Ko/P=n9p!IEqk50OjoMuWL-4g^<ZGY
%";HCF=Ymom9gQlhc8u4P$D8B.C/.G/&E^8RbI6@'ka!-(L^[L-WrsfHU1C)XUe%`qaO=M77KRNUqCnhRHc9I%'iH8124M7bP"]V`
%]NU9WM/LZCVgF:_Mk3@0;FP/Q`;l]s4W(Eijj>G@MVB(J#,@Rd!t@4CD]r]4=-kr[a5*=]864lo<#0;i.%ii(V32PRDD^<j;ktY-
%&#5XX3509)Sr2MT\["ho`$"):C4/S&T4Mf9#\%K+:G_d*]U?PR5MbB4/'?sp-po.$MPLVHS3ZcU!<I0o,REJ+.&;RNRbcE,YiMgW
%J!?_pT$*[_:Ske,rP:UpjRR-7aTshcToC:Yo"*RD/.p&F$-;drI5QM_dWN21(6_p,l'^9J\VRa/[\[C@^L^U\+pPjBC'HeNOP/Gl
%L=*5K%4)H8br*o@82f.h!Fs7Tr$f#sn2@BL"Th:"P0WXK'DZ.F^+79o&P>=';UjEPOEDB8&Oo\qR@%_>(+9D6gf70V@Ep;qh><I>
%Y3+Fdll[JU*M16YZDeBeBetX!/nL?/iVg$UN;'1UmO58FmC3pn(*f[W@8\qd(=r;sH3]a*f@>J!5Sc#m$`@`WJP710[1Wpe=qB0G
%q*O0=1Pm5T(k$]L.EjMcYr&Y4=BV$,;J-StZnElPTIXiG?GTsLDi**O9TJ&.pkZb"DP,'Sd0G_E=t\fe"BIh@CEe=&rPc&k)RtBh
%q0JfsYa:K+'hF:!6i?KeA+\s1YbuN4o6nrOn+bf0$"5)+js1nn0U#7lM(1=`8kdS5%qCP`)3;&T/7#)[3L&TP7OhoYMo\ACGb0@9
%7ad<;<D'KaaSSn2p83;tZs]Z%/"XVa'Td-@VRE%IC@^mgaS^n#2^&'VeM7S@f2-E/R-(EEWbJnQ[WBtU([BUSWn;K"2NU@+*WV!1
%G:tFa;e;.12".0@qh,RfIA!3Z+U2=%Zkj=*2>+WLZ;(!;3uT?-OsSR:U'NIcj8?G)?BCsk<SoI-mBKm@LG,_6%$qKcWBY/ha,8TW
%9i-]D'/?I-R$?K1>ET*5]P!`M(^O'q@nJ=nE\"3iC3b>k4k_WCkcFl0$?mTcAd*i4R4MD:C`?X[K8Q;D_qTmtC`A22gJ#Eq154N9
%k(ASZ;l*;6R,*<VK=i@SMlV%XV/RKcZj@TN.FYC;dBXDDGf9]Eh(`3bO@/kL57V.<OgqMPKh2]AM7XuFW[_$!#UVl+d>q3\6#q,q
%CCA6NBMO(1KS'l/(f3=QYb(BnfE.It-a_$.B#,Ym430[(72_m>QF%0\#_pW[--X9:oJJ70qS;`O@.NEpeAK)gi\mqM9KNYVg';4p
%)45DT@!'s>`CTaC@F\3@?196rNo8E==_h0tM#%?$GDZYt$!1)Ahq;bJNRt:,_oM*:fU<r>C3AiIZ[2]j%sT_C@)YY*Lu5R_Y)<+O
%Uas!dEEe7i^-o3662M^6+@I,KJ`M^`mR1=$+A]=kIhaD0=<HPL05e(cgiD&^UL[56n0DnMnK8?eJVM4eK,r`H#,MsTJI+LI)c456
%i,h\BG:mgnr',I4__ON=Y)VtHB07S,Af^gP2"B@@:&67.+3cO7!!M92$KAoPK/Wid=L?Na=O5cI+VlfE9gg3\!c4sN"V,IkmPke*
%S/qa1?'F0:b>D:PHhdBE!5ojHn^t/r7a79t+&W*$[)E]8IZlLCC]g3^O<mcleO&:NSI$[H9%hq3Pi&%R.lIF+G^ipdM/m:N.jOs>
%S)@4lmZS5ggGRD;5U!mhEYErOLIK9IPQLD;>!ho:;>p$PlOkT9CDBa_k.3dKH06V%r<;h6aZ8Z44&2L(`=oeLKP?X!\'82r<#;2.
%Xh"3q'c5_?i\D4;Q^DA#koe1=HRc214GYf`K4?J.:t9Cqj#(=oN6Gh1'hEU4aL<)oj_]l0`:'Zk2/+L8`nV;#r#,/)&<3CE!2aMX
%TM0=/0=a1]GuILMQW).&HQLE+hAoY^fVHGVgQYr<m,Rd]+Gects5&d:mnWo[@4!)JQVt(bi1er*dk[rTQ;L4jc$scS#1nR2UP,'t
%D97tn%'4talZ$?T?NJ&V.&!T0kkR3eA^839LaM!F$MQ5R02'KF`erRgL)(We0rH<6nO[VoQe[p#-[_9?PNANjS@P?Ym;]\8er;8>
%_u*:^05)U9a^Y>[h9\^NS.$<a3V8B9$Y87Wm@a?@Hbff.L&JUPl$=nsTg;lmjSBICah>7C2GN3M89l4)!Ibooc72H_<&l7flo$Uo
%7n]D*\"eg)%Z;kK\frq83($"HaXhOVJ;9(r6QRBGW%uO\BI9m2aj]\5O.)c'Z7]:LLhm7A9gigT5IQdW6Pm?ljKps*,bTl_2Da%B
%SV]4D22a^Ybd9:Nq-/=O90@)A(nQ&`n;rn>Kh6_jC<=skc2l7&D;5*n"']V^1Yko0I$i17MErLCJMLYs`K];#V`B_bBiI\8l;*#)
%q<ifWmf"D'lgMSM%;^FgreEElAp5_;GYI5M77r>Qq[(2unD\;/IMAE4->\@dVnB]qhL^P_##!p1rodLLPUo1_91TC\=lltLJ]O8[
%iFXc>)r"K=%3rF."Z*LP/5!_"duAlm?5S4#rJ.AG3L+'!l\\A]KR"aRX'4F("f<rJ4O&'DYPO>9dP(i&Mj_-Nl;jg$UVNmb(n[5(
%KTIc%'PLp\TXQVdjf30T$Rrg-ef3r$,re(?-ke=toJp9HNQ9kD+1fhCR1DfY1.>:e(TBEboid\,*&cos[?!Xq#Xq^Zj^=bcR2i5)
%DmVd/Z/?_CgDH,#5J[Y7d/Y#f%%JUTPm9>@UQpLq1S8Knh;21W/YTBuXp,i!7Kcr"E'RgB['e9%gVuDW>KEYMF\A-G^a@K%\2FOe
%44XZD4K[/DDu\'kmPpC416+YS^&J*k@fap@q>[T,5GrNd,Im(;k0cNS,[Y@Ug2QN7nFEPD`hGKK--DgrmmFJZIYqO*)R`odGDr1V
%/&'2kn;H0_O`9@QWSMI,Gh%nm!-<Q*_h'jF?EMF-Y"e:=eM>HEriUB\ZD>e*D3`U<&4Xk*,/LY*QHi"YnVR:mF)KlGZRW]0kY#c.
%PLUq^%13n-l%h[L1Cds"O'8:,_SH9<^bQq8R^9uA:gcE6MJ<DEC=tsV[;hpRntH;<Eda-oV9H5_2E>4qZnfL&^J^nNLZB0XG_$XA
%):KV_2AI6BR7ubMY[;QrR`>5FD%rRbZle%7Ijtif'9#!]dL,#8AGh]-88T,lNSq:tUr!8c[_fp-r4,dt[KRP7'/;aGG%8Fk-<]+T
%0Mb;94R$s&3/O[r_RH?CJs'TtV>-I:Z6Ic9^di?fP9@=M4,CA;e=5?9*sP-0<Z;5.1sm]/>HUoN>TS'&I>2MS*;3[,_#9`2MFU_-
%+TfK9+;<rkNOAW:&DqeGfVoefTZd'sWY8ui(1\VPn2G*FSBii4jp*7r^1-E4T7i-$)0=-U90VPe`)gaZ68?q=-Uk6o\o)E9ko73-
%O;n]Kb8**#)0s`4<UjaOf&*+mpLjI'h37_5Peg\N`:(M7kc0IZEq<92ifjnce]i/m"jYgHcm!=q[f\$1UGIR3(0YmJa`]DXX;%=F
%E]7DNZ3,%q@pWP+4u7s-=M3_-_\OKR,:19\@^]K<$\D;c5M'T?5GuKRFdJ;=&M?1HElJio.6eX!)@*h>#j@E]!#])kY+7i7@h->c
%*=9AP!jj.`0*j)/CgdmT@ZtJ64)JfElH?NKNH&`oq8h++2NngOg-e('Mqli)ONi\@\6t4jZkPh+?$%&dhH.)t_==_ZiSmRd$<AVe
%<0Pr@2rRk?pDQKOJ2t[N#)Nr!0K-jA@YirG\VrjAi?Fth/McU"#B'T[C&ua\2Kk<Z2hC2"fek=E</lp*U4*-<P^FX:9ZSQi>J2!.
%$WH,?RGUC,'Z,ZOXl\s6.nf?-PhhS'3n&'GG1fD0=ZliQ]3LXRP_1'"0J:63CM2S:"tj_JQo,(fW(E;OrP;dtot-&(;r%]:!NTL<
%$)t*dNg[*mXSQWY%:MJ%XqR[6;98o6>DV&C,V;!FhM[Zgr'1aDbr5-3G8Gkl11s^WU`[OlRl23/J2V,7O90<&H8@R7'XZa%DN2KB
%mkT.g1o1N/"Hm;QqJr-+06#2D0-V#1lj-j'>GKOW\t9$B940!qD`1fu1!J1!,^pGdRgKU?J8?opM@iZhjK*U^euI=h-"=;s4q!:;
%E0[(WVcfKkT7Rr4\p-qiMoH50Gme(sM;'sc_`(W.lunb?6dYu,;VZ6D0(m2"fLn5An[;q0;,`AF2mI[LW'1lo]8*3mMaap,JpUU]
%YpT#g<&I;(N/,pGadc]jO6:.\+ePn?hri<-!KFrE2<1j[<<sin\n%KQNHmOGG<3&2.5!3[]-jl5Y&r`EfC=Wb4TD$\9,^s`C`>ek
%]t4N`q.YUa6oRn\)E7.j2B/%i*ft`X^U$\%fM#R[B?$NjEWUFHDf*P+*'>o7A>ore#rRrhMQ#ghUlgDW86h%AndSuCM'eQ*A\Vt]
%,#tKhj[]`a.m<kpL\>7SI\cE7@:(0<[h%h]qJ3&CT36SH`bFU^;nX<FTAWc5U<[$_5A$0NdZFgu^%jj2HuN(0qJ>gm'='m3Fo?Y+
%cXb8WM>iHWF4.O70H2A5[h&-,p0p.U70LD+$3phi\i:P56QeY52n$[koDp[%Lc\JkeqBKi"pL'9b%t*/'g@hn#?nl(GVhSn;Fjot
%0X%%+bg!^_"XFfB9rF8rR")?)C&ID]HQiJ%RC(IWi$r^+&Y+Am<EUi*]:Y<X+tQ&H)Oua>%=:p:##Me6$'FD>mehZ^"3JWB"7*pG
%<\"a,c0bl$DDLbU1R]^(f;k]rOd-io(edNE9O(FAUY.5\a)("%!6J4uOQ<2=O$tCD&qj1S)2pjKnJjE:\kUSm-BOGag?AP*R&U55
%ITtFa]f"?\`L'g-_jH5[+#eR.j?_;XQ0`iYYTt$O1\9D$^`t?^kuiPdnEH'XS;`SFJj%%KBLKT+35VU!Z9h%!n%%m1/&\5kCW+VX
%$)<j9"q&=iT%%_``=R/p6+98*#2s0!q2j4pfi<S\^P"b'#rq+meU_seI\&k"j$+Us]D89$ao!D]B[oS,k.4qb?-BWaRI`HSVqlm=
%HB%L/6Q6_0JJ&C\l+,6YQ^T-".bX?VBXM,\M@DeiX/4oJ:hn6%+')Ycc'BO?#%h8S&J-Ei3MIu[RQ22cgpLFCS]#jgm,51JB(4=`
%-Io]-/8&dXe0tCL.tfVSie0AP@IlQ]AuX2M%4k^c9c1ZOWBRP^ij@)^/2qZfG^fi8'RcPCnPr\b+OIh]H*`@GI<c`S!FhfOj4/^m
%"#c?/kU/pZE3-phOu'icL?EbrR&AW%)GBH_gEUlKB/JS']GO&dE%l/OhKF<h[s(p^4>_%bjFV3qpY<uLM+e1VXs'F63bfeY-3k_/
%I`K;#\K$F'h4Pj5[tq/iMGP9+f:39r6F'rf)a,3@Rl\@mY#p3#r8*IGc*F!NMdm!C+,;?Th)k^uO2War$%sOl9)Oo1bJ<iT0jt.>
%?d1;1N2-#`,d>SV(Dc!a+?WKtd2#Jd^/;:$0h;h3=j'at*]I?XLkl;S>o*CM&,VW#HHCfCOZnO.`Fk"W[&o4#_OTD+gV0Tk)&g#*
%"KgL1\n?=+^lcm'pq:CZBZV/n("H`DeY5WS?<3h6M<qtO[O7L@!HYt1L#5,ZP599))<OW?Zp8C9,K\_aN>Gg!:jp6T^8MW%%oNn%
%Tu&^Q#"if4#kI$.kUCi[WmsiLCuU^`MS/t`QbeS7j"<R^RnVgsc/;2,AFF[g7YE3ZQF2AE6h>cQLQRlH])qskVN`5WW>7W)ou'P!
%mEcJq5B9%ZGJH9I!&sfCm9hf8RuCnS)!#;EWUmW:rIK9g@X`G=,Jgr+A4FUpFt'^i@;,^V=)qG3e_Se7%*PM_;cpu3"UAkI$@_cG
%J@W>!N>%P4LTW#eL@UE>5.]`uAlV#W3?$#8.m3RVau"(n[-VFBMs_-BlCX`@31'q<K<W/&$^$j0>9_XMg$Ol0<+">_B?[oXV3sm'
%:+Z(FVO<p.4Qp%90VOhN9a?s<J2LW".Lfg#e^#(c1i27:iR3DePg77p^[P:&\g#_]"MU#hK!T-%_+l>7?(8[.<=9n<D8[rXHqUsj
%&"*L?__cI16?mo.OgeO7(I%QLD.Q^,^?#"h7#T[&8E/1.(pe4\HuFX9btBs_HpXlm7-qWG#>[BSk[qe/=/>./"O+*U/E,=MA<Z!;
%T%-[CW`U;9)K3JnR[4XimG\mH*X0`H8(\?<?V`%kU+3ntRm32Fr*aYYH"+#'7mfd#P!%48C5c`PC"G:HnN5WJ1;76F``B-M+,qdT
%WWC7C/lq=GA_f8S@PpgcDDe@>(`+X'-YKa'0Ie`VBb\DEM^9C_Z$mo>8L%UT=V/PEdc4m23aY;RH@-N3-^jf[Hm+<Z+<2<`C8`fr
%FH>Rd7tTPndP`"?`=QX,ahT.dA11[SEYL'MIS\5!P)"`RYj"oQX_Th<n>;ON3L<:&U4b4>LL]]/e)>Y9;k,t"$'%LJ4F4\]%&c)m
%o*IY!)"m5<S2!0d*KZ"ahT]jX!R`Jt7H#Hm5f&-,h<W/([6#*ZV0[<`@[i?5't8'<?fkoT$_HQ)GOQ+f/jL>&.+.4RdOEEI$#NBB
%CN*aZjf%"Y4-u4gO3Ek/5#I;`.L;4QRRMrZNGh"KL:`XNoj?"E=gAXPjb(*jd+t#@]hcqm6ls6Cgtj3!`5D.L0hE/%1T=dOa[WDe
%FVhpGbZb@NCfqu&%+,uge^W]e_*$cR$^Qmm]U.QDWY)A]7AS+=]!GSaopDG;%:@VeNY5CG>"rL,]'"7>C&$sd7B.o?(`OLX_kq)O
%h]@_q]eh#IPW-Pm!b:BB*#8U/SN"*q)J7?XYJ>+[/K-4e%We7s2T9j>-Qb\j9>C\4jj^Z-?J8HO:P0rK[EJXF2Gh%\bf("Y!@&hL
%rt$L!ENX>Q;%Fi-jPJsC`.dAcJhr's7TXQUM;R'oI7smb25\9"2d)P2J<sCPQm<SY_44_P"UXCs'c5Xp3j>UnK[ZrM"m"Dr'@tSo
%i0N*L>DT:pJuH'ol`Y`k%q]s=RSXt(<poZM0FMnqE2aK)$\0;^MOH:@?o-.<^#[k]g7s"!PJP&tY_j:!f)WDA$4'`1!",74_;;=h
%QBlinmDhRJJ!#AmHR7q#phq,;3hfOdOFbUqC@4[D4i.F5*f=(]X_Lkpe,o^"O3M(O_ne^$m!dY>Fef`ucSBIT?6Q8mX<JmPJ^[Rk
%?<o'Tfo@U_A2oo`c8hgMetEXQ-A9h![Yu\$:WVA9VF?q'0*)qi1DSc3@<cMI5"^WZ_BjuQQ3#/G.I8R/WN$^NL-3oM)bFPITGnL;
%bO9:a$rmA>%%kU=JAQcN'3tFZ&*A%,)K\5sa?X_=5Y%DhI;3F.^*M?oN#J$?;Gq!uJ$Y@S,h])D8.>*@FHO[[#l'phMFm#TN3:2>
%b;2.@1(WWS/d`K(*#Y8s]-WlR5p[pTaCdQI(<0lGL%JdAh4G_$RA#t:!QIq=Frb'Q/$!lGo7uoB7oD'`)m7)kjREok.gm]sZ4)Ga
%&hT3oWeI-$a8/mR6H4(F,q\Wc5!7YKCUXesg&g277i&2=i-:j;;NKH4<hVSd5hpNU`PR2A6F(nO/k0F+'!):X7DEqI_B*/k_oJDb
%92t;EbDOtiJnSe7eA?XHb338LQ<8RaK3c`BVC-7;;=US;f1'?bCR<?gGM5BnSl2*\*K!o6e"_+d.*]EhN"9(A+*'ig#:$(%/DAJ,
%hm:6\5=+FTG:#dBF"ZGZj&f4c>H*NKAgh!_N%@/</A4-5iWo9eZ&lLo+EQ?HDJt9`]&sS+)h9OI#8TC!i$C6)0;q`C"R$G.f"p/(
%<>De`WrRoeSMlV,.$':rTq7cBm;b$):SI\B3=rVr8=$ajgGBgS8M'5(;q$j92J0gWjfY>]0f'<bNDb`tNVCVFF7R#3V=!@=hX2Zm
%%]GAW\1=b)ii2nOT+'>e\dMQ?NVS*j%o).qQgt32.G%3#,%5^c;Sn0ro=[;GbsH\B9Z.J(Y1mDsSHN0ZrjiHuP4hQ!\btlHmQKs2
%G(ril7'<8#p_0sY:rhDH=XKY!`,R.a6mfIpN=Nbc3A1QK+G,El/N;dLS>J/)&]+*:+a@i-%tjf1680Xg@2r3RodZOUh7p1WdKnZ!
%j!?dE6$h=I@bj*lmn5irr!Q%MAJnI`Xp)^oM9.Q20i[Hq1Y453'jf-ENP,YK+4l=QS>G9e@)!laR%c@*&;j\V#>5i7:'C3n.&2R,
%:P!$78fumak'5XC-PqJK68qfUWX;uBDTAd5':TS,"[nGMZA-ud0)=l:F8jZ=nC)SA95MaDMB^Y3;"!^qT&u^b,gWf>&m8ji>fcr&
%f2_,Dd75mUo'QMd::O++,OKCTP66t/TGBHa=%;]"E7,n)>!m;,].oK?=o:6kjJ78RG?UNMij.H;4e?`$rXm&B#-IY&/mOfdaCQdF
%"b^IGR#;)m)s2"[X5@H,nLDYg%(SnLj>N!)*\*#u1$GUjg(FV$Ta+G3CILSa5I[2mjD^TS\Q8!Aj$RkQajZ8OI*`s`gf,-lo=UCA
%RW8NhHaNi8]qR-?LeRF!3E0,tmEo+Q+rKIPT4$%#@s!1"TnXh#AW"kUNkk&<!bWJ`bALGsa-3p;H=C+qRUd/&-^K.aOD&-K-(5Im
%TS9/F/7-G'F9+NE0,S,1Ucfbha<!rjELEr8WrU=O+MDp?!I14fd!%[rIk7bo@76V-(u6LHY@ofR+kJ4Vg^VuH8CXrE!Sg<(%a92E
%d1h8a8bfaFQk2nm`\b7jO;)r*#f?AeWdNi5RV^88R3i^`dP$5\P.79/(F$WQL60V[P\gNK8Xt.OT`mO>,=l"_["LAI#f[Id,)\SF
%gXXK$F3nT3KiKj8#/][gm#Dbh"eM.Vi<4<LZlZr:[l`\*$t[U7bVA1JCP2PlF+0QYnDWe(Ku!(^auu(CcOU5D:ld;#[pJkO9r]k*
%=eI"i5`<pdJK,TJ?auSbJ,s4G=2#7ZB84O?T\[?Z;mH2289.Rh(1\ssYT"u-`Ea)28dfFqq;U#eN_PO6iK8s!2d;M1fp-H*gXh/,
%mXtZ[/_-Q)^cALmi%,hAQ4`#`)T[G]EfFr5VPSR&\bBSiXnp_WPm2aVpgAU5bPG=UE7$+dk1IOF!%KcNlcSQWm1kkT@!"CWo&/W^
%@C65>i;Ue3$Qfs][8j(9O+_af6tm"ZK1gPHK!u'J;1`Rl2"ul5If8()ldTnpZg:825[mA]W;NlKFLnpVYif8b#\uBXAh9m%."Q9-
%)6QJ46"Kt8h!jEM4RIjqe'[X[Mqj<:(*RQGOW@$>/Yi[qP>:;eA)8'&-WoT',S+:qTh$CTS+0D_L[f[(cGF"dYku0#n5qoa(.L)M
%(c-*srgO^1>nm0WVtZWs@6.:j4bR'UMXjW1]NN/WnQ?ILVBJp5$^nI7qmYiU!TZ$1\aC+u3ID*T'R-k!(i-1\FsK0\_U(+\W"33f
%m7(VXM[,O3Ro-j2V]UL8),#";%crH,!lniZQ?+p!Z\Ztm_HsQ53C&Af/U)i7]DVARBn+W_"I%3@Q2[<*<8]'llH&"a7QAM0ha9[R
%(gSjU*@'-2(Bh$>*=fQ.h<QOnJg9B0#*fsnH&5pk%MRD+gt2oXB<)/U0nN1`aWG^u78X]^E`h8M;m_$2'1+!HP./e#iTs1WT6NJj
%ifXYK>NI>qUlauWCB>(sE8f0$VLiOYcp7_R='\./ck7;c9gL%+2^%VCFD%UDkV?.VK,$7]+6^e0Nn,R4R$/"f,WF+5E.]Sl.JOh*
%+dfeHGB;u^ep8OM?PQ:u5Fe/A!MP9d:e8U48QeDNVD'6aeh3b=X\FP'Z=SY<#`:E]P'):<Ze@lfat+HG7PhB'@sdW]`b$ODa[M</
%oG^7MlXB?i8soMXRYOBa+j\itJJ36p]-TC[+E1Jpd,6Afr"@"q&m%U!d2NN>_R]X@/i;/]BD3aFimH[Y@QJ3_r%qlF^bJMJ=<rAd
%niJC?KbiFhg29Hd9#_9r0RhSMO(lhr\WWYBbYH'B[a"fB:$BsLl`>apO)YWOe%Kq'6*c,<]nL4NJY`+$<^HeJ@m[:?1jCL'h9aNE
%>-HL4/.:;f`q15fqJUtrgJ^hiIFI6Q[[,/"5n_IpSg+cGR_d&0"mA8c!#agd_(#5oI71,ZFW,p>.%HfrBqAq>gB]+&l8fL-l*tH_
%1WT!?!TU]#)E7WRJa%YnPf1VA-hP&^LI[=<ga\qrM"OGT3`+b_eIdf*+=E:-.4^ZS"C8T06rD2\C$-UsL'cqcQ!GpV>2\W\c2M95
%IXEkCganW4Ugi#Hp\WK6=E']6?=9jb913+olT"7<h4[C4(C'7Y`H+,']*Xt^6<E%=36BH9?u%C\0jp+OE<SI7p9+ThE"T)pLgeC_
%<GB:c=J@d,5ATuZHt&S:1oLS@&'#l@RDQ"JKQIn;6L5-Vbs,J%aJ2rd&M2g'WbfN/IlKlE!Vs:q.)6Hq9,7LD_^H_tG58K3LL<_%
%VM;KZb,MHdNR.4/Nq*6'O0*V>'biOt&08C@6<O;-!/QPWIlJ*De5)Ps$BKTpaB*j%XmR9SAJ@nLD[q8Xno0Mj$Vlg88pco2U1%")
%%PVBO&lbD-:PNSM'?O$2U-l8[VaW22dls3sX;NNMo'gTfb+7`3pLXrQdpY;Y=,.=2m[nZ6*-T]3E;BP'YtDY_GKY8Z8@FR67]j4i
%i_bZ7Ai\%di,j"s*b7]2,5A[C3*<o2Tuf]'8c88\G*e=sLkQ<7aeQCM@cQ>)6$.AG60c-G['tP0jbFoohm$fJXf>JW^lha\M>.r`
%U8f/@7R2Y$hLk/S/dHATT_"jK'Z+C_Wl*Rs`_Sr?Qds+J7l)h(U&nIl*bEBS3JbADLF2a+]);7Pl]'C79sgb<0b0RU0ni<khCC*5
%2,!rpc]2`ACmS&U'-mga;(r/QKIflXJ#3+u'5jmg#M%bSoa*YBH9_?#8j``!/0!r,Ush[+,)\@E[SsO=*6aB(gs*6HXo7!)it,)R
%+=GM4a^FAlWOIl]U5&e-Wb5q@mb`^sYBP%2`8pn2VE@gGr,3Zjs#:MCbo7FoV\IY>f7WJEer73KebuL:c6LEiRo'J<_3QAh0P`g/
%TM;W,Ei&__*'=GK)&X3_2b.2`Sq(`;N99r]@9DMBaNr;AW"X.'<lUY?r_ki>?uP<o;ch\&m'coF?f,*rn+Wi#*g!T&(FsJ(kkh!J
%^cALO!N=Fn'f`[sVt"hZo?RTchn-\7G$Ai+=+E3k$.U#@.qHKPA,-cT@.K0>VM&4Q6(T#taiQ9jR3#`pb=?R!EX#8lS(KJcJ-+#9
%#nnpn&2n)2JClFYn\[t(^"oi-%18$JqIK>0,'&6WTUKCBqIZtJ!h?sWh)JU%,:V!c,4S(FF0eSt6p?Eh$+@uO*TbD#T;*L&YQHr$
%1\pr.&BIS$5DpW#2!X4k$`FuIL6$A@:US(JM6s+]"HM`%*TT+T/G!9R1*^IH]G:eZ[?ti_r3;djV(j\,o,o#lF$tqM*TWk4)-6"h
%6k5.oZTF6R3W6*;)kC,u9>`>[G94J"8dg5jBbaGn5U"t<'F5&45oqm'p0U',DM?&k5_u\(n/SAj3Mo7kegEdhS39sJ+Ko=[ZWmE+
%%ZXqK(([TY8a159lkr?2*N+#S%e/Ta,=RG7_bh%@!t./PnK82(IXtN`mm5MbFQNka`L(=_SfX[6<4D)WiD&qs1<JS!nGZ:onL%:*
%]]O(Qd=[;NZL.\CAb[j&r.;-o)NdB)5=i7_W&K>p6:j#)1dj5Y.cK_]<[VNm]3#do&n#P9*9TXBh$dKq7l`%iX+e5iA3a_'fcL!?
%KUq%hgP67tTJuZYqhL#Ai9';I4R"tEFtp9&V%-@e_%SYdidqR?HqaZBZ>T=U="i_5+flKTV]Y#co?4FU>#u_i66ogXF<OB5?"*gr
%&L*g1I?4qZ>`jgu5;_,&YP5@UY[EeXU6#7A_O!IGn7CNqCZe$D_G^td=?0q869kSEqf=dgYSe*B,rr*RJT(V/BY-HNOeOS&bD?'@
%R*cWqV7omr4)!,d[EC,#2U@*31f['+*T^Z\<XX[pnR<814a$i`XZW2\pQdL)I_apC:rt;\$Z-1KA3/i2b,ZU!0*`1]:B-cf)m!:E
%#,&7?E"lHJG/_W2F[;NcF42H)k9L\Y3*"8"<e,-Y_ni,?aV5ZHjDE"YTp<tn/]jU+=M!$44pTo?eH]'u&l3+kD3Oe0!^i]L0HlqU
%[sWFe_h]2mWBZM89]&Z2\rka@W%\ji:PJpNgL4/<OH3(,6ZlE`nsCkHP_2(P%hf$o.QS^5.ochgZZ^oXfp&C??3J]/4:fl>,ONuY
%7ds/n;4Ip.*"WOPEKFgXllAiDP_6r,,j3+]M(f:>3.cmgXc='ak/6!;+D*K+`,/nj2e6-.("n3X?kcEgZ4o"m3RWJqCEX;<)4IaP
%T;'1brtAfD`*\P2K/b0&@.)>%0_I6"H%-bm1oN$e>tZG\0gG6f;mt)B$TU7N+O,\M1;n`@*(iKS4ReCZ6?pnU3V!]$&5b8S(EVWS
%4SkueDZfSo/!O9XjZg)&P?Ec<FESNK8%+7<aKZPdE],'pPf%%&%_YQ%%t-h(D*db".N,LJi<huu7EC4g<oNI4bO7h)\;fdCT?7`O
%VjI5+l?9&/#jAMqi6P3=Ed?kbL8tc4nWU-s`moEQ#bLbFbom#u6Q9d/-_TqrcfG.H@@_$BZrD>A:eaJ9686!mZL`Z\A/.M[8erJ,
%d*SGB%T7$FBJ95UO$^WL/_5E9j5Yu=3&[8bZ(.^t^o\FS7Q%DoGE[5_jI^f:TLC$[>TJMG*bU$%Q'_\+P_TidT?*K6,bbc=<nIPl
%al5%C`A`t%G`UiSJul/3`f1-7\/S7#XMf861_osK#XPJ#Pn6^O89!L-4>r++/8&5gmCpOcNkIkn'[4pfmii<[gftkQ5Dt5:qlB,Q
%J,/F,TE"]KX4nFT]R'JAfd?LI^V'@<e\AeGnbV\(gRnK+lYg-Xs6AacRl>$VeUMFcFn>:\=5Uahk3]4=Du]=OIm\f0XWRK-BE.bQ
%s6HRIq1"#i,UN~>
%AI9_PrivateDataEnd
